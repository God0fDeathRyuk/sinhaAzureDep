<?php



namespace App\Controllers;



use CodeIgniter\Controller;

use PhpOffice\PhpSpreadsheet\Spreadsheet;

use PhpOffice\PhpSpreadsheet\Writer\Xlsx;

use PhpOffice\PhpSpreadsheet\Style\Alignment;

use PhpOffice\PhpSpreadsheet\Style\Fill;



class FinanceController extends BaseController {

    public function __construct() {

        $db = $this->db = db_connect();

        $temp_db = $this->temp_db = db_connect('temp'); 

    }



    /*********************************************************************************************/

    /***************************** Finance [Transactions] ***********************************/

    /*********************************************************************************************/



    private function ledger_posting($ledger_serial_no = null) {

        //---- Data Selection 

        $trans_sql     = "select a.fin_year, a.doc_date, b.* from ledger_trans_hdr a, ledger_trans_dtl b where a.serial_no = '$ledger_serial_no' and a.status_code = 'C' and a.serial_no = b.ref_ledger_serial_no" ;

        $trans_dat     = $this->db->query($trans_sql)->getResultArray();

        $trans_row     = count($trans_dat);



        foreach($trans_dat as $i => $trans_qry) {

            $detail_finyr            = $trans_qry['fin_year'];

            $detail_date             = $trans_qry['doc_date'];

            $detail_yyyy             = substr($detail_date,0,4);

            $detail_mm               = substr($detail_date,5,2);

            $detail_yyyymm           = $detail_yyyy.$detail_mm;

            $detail_reccode          = '02' ;



            $detail_branch_code      = $trans_qry['branch_code'] ;

            $detail_account_code     = $trans_qry['main_ac_code']; 

            $detail_sub_account_code = $trans_qry['sub_ac_code'] ;    

            $detail_client_code      = $trans_qry['client_code']; 

            $detail_matter_code      = $trans_qry['matter_code']; 

            $detail_drcr_ind         = $trans_qry['dr_cr_ind']; 

            $detail_gross_amount     = $trans_qry['gross_amount'];

            $detail_dbook_qry        = $this->db->query("select daybook_code from daybook_master where main_ac_code = '$detail_account_code' and ifnull(sub_ac_code,'%') like concat('$detail_sub_account_code','%') ")->getRowArray();

            $detail_daybook_code     = empty($detail_dbook_qry) ? '' : $detail_dbook_qry['daybook_code'] ;	 

            

            if ($detail_drcr_ind == 'D') { $detail_debit_amount  = $detail_gross_amount ; $detail_credit_amount = 0 ; } 

            else { $detail_credit_amount = $detail_gross_amount ; $detail_debit_amount  = 0 ; }  



            //----- Account Balance 

            if ($detail_account_code != '' && $detail_account_code != 'NULL') {

                $account_qry = $this->db->query("select count(*) as reccnt from account_balance where fin_year = '$detail_finyr' and branch_code = '$detail_branch_code' and main_ac_code='$detail_account_code' and record_code = '$detail_reccode' and yyyy_mm = '$detail_yyyymm' ")->getRowArray();

                $account_cnt = $account_qry['reccnt'];



                if($account_cnt > 0) {

                $update_sql = "update account_balance set amount_dr = ifnull(amount_dr,0) + '$detail_debit_amount',  amount_cr = ifnull(amount_cr,0) + '$detail_credit_amount' 

                                    where fin_year = '$detail_finyr' and branch_code = '$detail_branch_code' and main_ac_code='$detail_account_code' and record_code = '$detail_reccode' and yyyy_mm = '$detail_yyyymm' "; 

                $this->db->query($update_sql);

                } else {

                $insert_sql = "insert into account_balance (fin_year,branch_code,main_ac_code,record_code,yyyy_mm,amount_dr,amount_cr)

                                    values ('$detail_finyr','$detail_branch_code','$detail_account_code','$detail_reccode','$detail_yyyymm','$detail_debit_amount','$detail_credit_amount') "; 

                $this->db->query($insert_sql);

                }

            }



            //----- Sub-Account Detail 

            if ($detail_sub_account_code != '' && $detail_sub_account_code != 'NULL') {

                $sub_account_qry = $this->db->query("select count(*) as reccnt from sub_account_balance where fin_year = '$detail_finyr' and branch_code = '$detail_branch_code' and main_ac_code='$detail_account_code' and sub_ac_code = '$detail_sub_account_code' and record_code = '$detail_reccode' and yyyy_mm = '$detail_yyyymm' ")->getRowArray();

                $sub_account_cnt = $sub_account_qry['reccnt'];



                if($sub_account_cnt > 0) {

                $update_sql = "update sub_account_balance set amount_dr = ifnull(amount_dr,0) + '$detail_debit_amount',  amount_cr = ifnull(amount_cr,0) + '$detail_credit_amount'

                                    where fin_year = '$detail_finyr' and branch_code = '$detail_branch_code' and main_ac_code='$detail_account_code' and sub_ac_code = '$detail_sub_account_code' and record_code = '$detail_reccode' and yyyy_mm = '$detail_yyyymm' "; 

                $this->db->query($update_sql);

                } else {

                $insert_sql = "insert into sub_account_balance (fin_year,branch_code,main_ac_code,sub_ac_code,record_code,yyyy_mm,amount_dr,amount_cr)

                                    values ('$detail_finyr','$detail_branch_code','$detail_account_code','$detail_sub_account_code','$detail_reccode','$detail_yyyymm','$detail_debit_amount','$detail_credit_amount') "; 

                $this->db->query($insert_sql);

                }

            }



            //----- Daybook Detail 

            if ($detail_daybook_code != '' && $detail_daybook_code != 'NULL') {

                $daybook_qry = $this->db->query("select count(*) as reccnt from daybook_balance where fin_year = '$detail_finyr' and branch_code = '$detail_branch_code' and daybook_code='$detail_daybook_code' and record_code = '$detail_reccode' and yyyy_mm = '$detail_yyyymm' ")->getRowArray();

                $daybook_cnt = $daybook_qry['reccnt'];



                if($daybook_cnt > 0) {

                    $update_sql   = "update daybook_balance set amount_dr = ifnull(amount_dr,0) + '$detail_credit_amount', amount_cr = ifnull(amount_cr,0)  + '$detail_debit_amount'

                                        where fin_year = '$detail_finyr' and branch_code = '$detail_branch_code' and daybook_code='$detail_daybook_code' and record_code = '$detail_reccode' and yyyy_mm = '$detail_yyyymm' ";

                    $this->db->query($update_sql);

                } else {

                    $insert_sql   = "insert into daybook_balance (fin_year,branch_code,daybook_code,record_code,yyyy_mm,amount_dr,amount_cr)

                                        values ('$detail_finyr','$detail_branch_code','$detail_daybook_code','$detail_reccode','$detail_yyyymm','$detail_credit_amount','$detail_debit_amount') "; 

                    $this->db->query($insert_sql);

                }

            } 



            //----- Matter Balance 

            if ($detail_matter_code != '' && $detail_matter_code != 'NULL') {

                $matter_qry = $this->db->query("select count(*) as reccnt from matter_balance where fin_year = '$detail_finyr' and branch_code = '$detail_branch_code' and matter_code='$detail_matter_code' and record_code = '$detail_reccode' and yyyy_mm = '$detail_yyyymm' ")->getRowArray();

                $matter_cnt = $matter_qry['reccnt'];



                if($matter_cnt > 0) {

                $update_sql = "update matter_balance set amount_dr = ifnull(amount_dr,0) + '$detail_debit_amount',  amount_cr = ifnull(amount_cr,0) + '$detail_credit_amount' 

                                    where fin_year = '$detail_finyr' and branch_code = '$detail_branch_code' and matter_code='$detail_matter_code' and record_code = '$detail_reccode' and yyyy_mm = '$detail_yyyymm' "; 

                $this->db->query($update_sql);

                } else {

                $insert_sql = "insert into matter_balance (fin_year,branch_code,matter_code,record_code,yyyy_mm,amount_dr,amount_cr)

                                    values ('$detail_finyr','$detail_branch_code','$detail_matter_code','$detail_reccode','$detail_yyyymm','$detail_debit_amount','$detail_credit_amount') "; 

                $this->db->query($insert_sql);

                }

            }

        }

    }



    /************************************ VOUCHERS ******************************************/

    public function payment() { 

        $global_userid = $user_id = session()->userId;

        $data = branches($user_id); $global_curr_finyear = session()->financialYear;

        $global_dmydate = date('d-m-Y'); $global_sysdate = date_conv($global_dmydate); 

        $data['requested_url'] = session()->requested_end_menu_url;

        $displayId = ['asso_code' => 4141];



        $global_curr_finyr_fymddate = substr($global_curr_finyear, 0, 4).'-04-01';

        $global_curr_finyr_lymddate = substr($global_curr_finyear, 5, 4).'-03-31';



        $user_option = isset($_REQUEST['user_option']) ? $_REQUEST['user_option'] : null;

        $serial_no   = isset($_REQUEST['serial_no']) ? $_REQUEST['serial_no'] : null;

        $selemode   = isset($_REQUEST['selemode']) ? $_REQUEST['selemode'] : null;

        $billable_ind_desc = $billable_ind = $link_jv_serial_no = $status_code = $status_desc = $readonly = $disview = ''; $dtl_data_arr = [];



        if ($user_option == 'Add' )    { $readonly = '' ;           $disview = ''; } 

        if ($user_option == 'Edit' || $user_option == 'Post-Edit')    { $readonly = '' ;           $disview = ''; } 

        if ($user_option == 'View' || $user_option == 'Un-Approve')    { $readonly = 'readonly' ;   $disview = 'disabled'; }

        if ($user_option == 'Delete')  { $readonly = 'readonly' ;   $disview = 'disabled'; }

        if ($user_option == 'Print')   { $readonly = 'readonly' ;   $disview = 'disabled'; }

        if ($user_option == 'Chq-Print')   { $readonly = 'readonly' ;   $disview = 'disabled'; }

        if ($user_option == 'Approve') { $readonly = 'readonly' ;   $disview = 'disabled'; }

        if ($user_option == 'Payment') { $readonly = 'readonly' ;   $disview = ''; }



        $tag_permissions = $readonly . ' ' . $disview;

        $dtl_data_sql = "select * from voucher_detail where ref_voucher_serial_no = '$serial_no' and dr_cr_ind='D' " ; 



        $dtl_data_qry = $this->db->query("select * from voucher_detail where ref_voucher_serial_no = '$serial_no' and dr_cr_ind='D' ")->getResultArray(); 

        $dtl_data_cnt = count($dtl_data_qry) ; 



        if($selemode != 'Y') {

            $daybook_qry = $this->db->query("select daybook_code,daybook_desc from daybook_master where daybook_type in ('CB','BB')")->getResultArray();

            $ldghdr_qry = $this->db->query("select * from ledger_trans_hdr where ref_doc_serial_no = '$serial_no' ")->getRowArray();



            $fin_year = empty($ldghdr_qry) ? '' : $ldghdr_qry['fin_year'];

            $branch_code = empty($ldghdr_qry) ? '' : $ldghdr_qry['branch_code'] ;

            $payee_payer_type = empty($ldghdr_qry) ? '' : $ldghdr_qry['payee_payer_type'] ;

            $payee_payer_code = empty($ldghdr_qry) ? '' : $ldghdr_qry['payee_payer_code'] ;

            $payee_payer_name = empty($ldghdr_qry) ? '' : $ldghdr_qry['payee_payer_name'] ;

            $payment_type = isset($ldghdr_qry['pament_type']) ? $ldghdr_qry['pament_type'] : '' ;

            $doc_no = empty($ldghdr_qry) ? '' : $ldghdr_qry['doc_no'] ;

            $final_voucher_date = empty($ldghdr_qry) ? '' : $ldghdr_qry['doc_date'] ; if($final_voucher_date != '' && $final_voucher_date != '0000-00-00') { $final_voucher_date = date_conv($final_voucher_date, '-'); } else { $final_voucher_date = ''; }

            $daybook_code = empty($ldghdr_qry) ? '' : $ldghdr_qry['daybook_code'] ;

            $instrument_no = empty($ldghdr_qry) ? '' : $ldghdr_qry['instrument_no'] ;

            $instrument_dt = empty($ldghdr_qry) ? '' : $ldghdr_qry['instrument_dt'] ;   if($instrument_dt != '' && $instrument_dt != '0000-00-00') { $instrument_dt = date_conv($instrument_dt,'-') ; } else { $instrument_dt = '' ; }

            $bank_name = empty($ldghdr_qry) ? '' : $ldghdr_qry['bank_name'];

            $gross_amount = empty($ldghdr_qry) ? '' : $ldghdr_qry['gross_amount'] ;

            $total_basic_amount = empty($ldghdr_qry) ? '' : $ldghdr_qry['basic_amount'];

            $total_newtax_amount = empty($ldghdr_qry) ? '' : $ldghdr_qry['new_tax_amount'];

            $total_newcess_amount = empty($ldghdr_qry) ? '' : $ldghdr_qry['new_tax_cess_amount'];

            $total_newhecess_amount = empty($ldghdr_qry) ? '' : $ldghdr_qry['new_tax_hecess_amount'];

            $total_newtotal_amount = empty($ldghdr_qry) ? '' : $ldghdr_qry['new_tax_total_amount'];

            $total_servtax_amount = empty($ldghdr_qry) ? '' : $ldghdr_qry['service_tax_amount'];

            $tax_code = empty($ldghdr_qry) ? '' : $ldghdr_qry['tax_code'] ;

            $tax_sub_account_code = empty($ldghdr_qry) ? '' : $ldghdr_qry['tax_sub_account_code'] ;

            $tax_percent = empty($ldghdr_qry) ? '' : $ldghdr_qry['tax_percent'] ;

            $tax_amount = empty($ldghdr_qry) ? '' : $ldghdr_qry['tax_amount'] ;

            $net_amount = empty($ldghdr_qry) ? '' : $ldghdr_qry['net_amount'] ;

            $narration = empty($ldghdr_qry) ? '' : $ldghdr_qry['narration'];

            $remarks = isset($ldghdr_qry['remarks']) ? $ldghdr_qry['remarks'] : '';

            $status_code = empty($ldghdr_qry) ? '' : $ldghdr_qry['status_code'];

    

            $dbook_qry = $this->db->query("select * from daybook_master where daybook_code = '$daybook_code' ")->getRowArray(); 

            $daybook_type = empty($dbook_qry) ? '' : $dbook_qry['daybook_type'];

    

            $ldgdtl_qry = $this->db->query("select * from ledger_trans_dtl where ref_ledger_serial_no = '$serial_no' and ifnull(record_type,'E') = 'E'")->getResultArray();

            $ldgdtl_cnt = count($ldgdtl_qry);

    

            $user_qry = $this->db->query("SELECT * FROM system_user WHERE user_id = '$global_userid' ")->getRowArray();

            $user_name = $user_qry['user_name'];

            

            $db_qry = $this->db->query("select daybook_code,daybook_desc from daybook_master where daybook_type in ('CB','BB') ")->getResultArray();

    

            $voucherHeaderObj = $this->db->table("voucher_header"); // object : voucher header

            $voucherDetailObj = $this->db->table("voucher_detail"); // object : voucher detail

    

            $tax_account_code = $trans_type = $pan_no = $prepared_by  = $prepared_on  = $paid_by = $paid_on = '';

            if($user_option == 'Add') {

                $entry_date = $global_dmydate ; $payee_payer_type = ''; $associate_code = ''; $associate_name = ''; $remarks = ''; $daybook_type = ''; 

                $daybook_code = ''; $daybook_desc = ''; $gross_amount = '0.00'; $tax_amount = '0.00'; $net_amount = '0.00'; $billable_ind = 'Y';

                $status_code = 'A'; $status_desc = 'Active'; $row_count = 1 ;

    

            } else {

                $hdr_data = $this->db->query("select * from voucher_header where serial_no = '$serial_no' ")->getRowArray();

                $matter_code           = isset($hdr_data['matter_code']) ? $hdr_data['matter_code'] : '';

                $branch_code           = $hdr_data['branch_code'];

                $entry_date            = date_conv($hdr_data['entry_date']);

                $trans_type            = $hdr_data['trans_type'];

                $payee_payer_type      = $hdr_data['payee_payer_type'];

                $associate_code        = $hdr_data['payee_payer_code'];

                $associate_name        = $hdr_data['payee_payer_name'];

                $pan_no                = $hdr_data['pan_no'];

                $payment_type          = $hdr_data['payment_type'];

                $daybook_code          = $hdr_data['daybook_code'];

                $instrument_no         = $hdr_data['instrument_no'];

                $instrument_dt         = date_conv($hdr_data['instrument_dt']);

                $bank_name             = $hdr_data['bank_name'];

                $total_basic_amount    = $hdr_data['basic_amount'];

                $total_newtax_amount   = $hdr_data['new_tax_amount'];

                $total_newcess_amount  = $hdr_data['new_tax_cess_amount'];

                $total_newhecess_amount= $hdr_data['new_tax_hecess_amount'];

                $gross_amount          = $hdr_data['gross_amount'];

                $tax_code              = $hdr_data['tax_code'];

                $tax_sub_account_code  = $hdr_data['tax_sub_account_code'];

                $tax_amount            = $hdr_data['tax_amount'];

                $net_amount            = $hdr_data['net_amount'];

                $remarks               = $hdr_data['remarks'];

                $billable_ind          = $hdr_data['billable_ind'];

                $status_code           = $hdr_data['status_code'];

                $ref_ledger_serial_no  = $hdr_data['ref_ledger_serial_no'];

                $ref_jv_serial_no      = $hdr_data['ref_jv_serial_no'];

                $ref_advance_serial_no = $hdr_data['ref_advance_serial_no'];

                $link_jv_serial_no     = $hdr_data['link_jv_serial_no'];

                $prepared_by           = $hdr_data['prepared_by'];

                $prepared_on           = date_conv($hdr_data['prepared_on']);

                $passed_by             = $hdr_data['passed_by'];

                $passed_on             = date_conv($hdr_data['passed_on']);

                $paid_by               = $hdr_data['paid_by'];

                $paid_on               = date_conv($hdr_data['paid_on']);

    

                $dtl_row = $this->db->query("select count(ref_voucher_serial_no) as totalRow from voucher_detail where voucher_detail.ref_voucher_serial_no = '$serial_no' and dr_cr_ind='D'")->getRowArray();

                $row_count = $dtl_row ;

    

                // tax percent

                $row = $this->db->query("select a.tax_account_code,a.tax_sub_account_code,b.tax_percent from tax_master a,tax_rate b where a.tax_code = b.tax_code and b.fin_year = '$global_curr_finyear' and b.tax_code  = '$tax_code'")->getRowArray();

                $tax_percent = empty($row) ? '' : $row['tax_percent'];

                $tax_account_code = empty($row) ? '' : $row['tax_account_code'];

                

                // status description

                $row = $this->db->query("SELECT status_desc FROM status_master where table_name = 'voucher_header' and status_code = '$status_code'")->getRowArray();

                $status_desc = empty($row) ? '' : $row['status_desc'];

    

                // daybook type and description

                $row = $this->db->query("SELECT * FROM daybook_master where daybook_code = '$daybook_code'")->getRowArray();

                $daybook_type = empty($row) ? '' : $row['daybook_type'];

                $daybook_desc = empty($row) ? '' : $row['daybook_desc'];

            }



            if($status_code == 'A') { $colour_s = "#0000FF"; } else { $colour_s = "#FF0000"; } 



            if(($status_code != 'A' && $user_option == 'Edit') || ($status_code != 'A' && $user_option == 'Delete') || ($status_code != 'A' && $user_option == 'Approve') || ($status_code != 'B' && $user_option == 'Payment')) {

                session()->setFlashdata('message', '[' . $user_option . '] Operation is Not Allowed On Serial No. ['.$serial_no.']');

                return redirect()->to(session()->last_selected_end_menu);

            }

            $selemode = 'Y';

        } else {

            $ref_voucher_serial_no = $serial_no;

            $prepared_by = isset($_POST['prepared_by'])?$_POST['prepared_by']:null;

            $row_count = isset($_POST['row_count'])?$_POST['row_count']:null;

            $trans_type = isset($_POST['trans_type'])?$_POST['trans_type']:null;

            $dupl_ind = isset($_REQUEST['dupl_ind'])?$_REQUEST['dupl_ind']:null;

            $status_code = isset($_REQUEST['status_code'])?$_REQUEST['status_code']:null;



            $voucherHeaderObj = $this->db->table("voucher_header"); // object : voucher header

            $voucherDetailObj = $this->db->table("voucher_detail"); // object : voucher header

            $ledgerHeaderObj = $this->db->table("ledger_trans_hdr"); // object : ledger header

            $ledgerDetailObj = $this->db->table("ledger_trans_dtl"); // object : ledger detail

            $advanceDetailObj = $this->db->table("advance_details"); // object : advance detail

            $tdsCertObj = $this->db->table("tds_certificate"); // object : tds certificate

            $expenseDetailObj = $this->db->table("expense_detail"); // object : expense detail

            $bankReconObj = $this->db->table("bank_recon"); // object : bank recon

            $courtExpenseObj = $this->db->table("court_expense"); // object : Court Misc. Expense

            $photoCopyExpenseObj = $this->db->table("photocopy_expense"); // object : Photocopy Expense

            $courierExpenseObj = $this->db->table("courier_expense"); // object : Courier Expense

            $arbitratorObj = $this->db->table("arbitrator_expense"); // object : Arbitrator Expense

            $stenoExpenseObj = $this->db->table("steno_expense"); // object : Steno Expense

            $ref_advance_serial_no = '';

            //------------------------------------ FOR INSERT/UPDATE/DELETE    : USING PEAR DB ------------------------------------// 

            if($user_option == 'Add') {  

                // voucher header [new record insertion in]

                $h_array = array('serial_no'             => 'NULL',

                                'branch_code'           => $_POST['branch_code'],

                                'entry_date'            => date_conv($_POST['entry_date']),

                                'trans_type'            => 'PV',

                                'voucher_type'          => 'PV',

                                'payee_payer_type'      => $_POST['payee_payer_type'],

                                'payee_payer_code'      => $_POST['associate_code'],

                                'payee_payer_name'      => stripslashes($_POST['associate_name']),

                                'pan_no'                => strtoupper($_POST['pan_no']),

                                'payment_type'          => $_POST['payment_type'],

                                'basic_amount'          => $_POST['total_basic_amount'],

                                'new_tax_amount'        => $_POST['total_newtax_amount'],

                                'new_tax_cess_amount'   => $_POST['total_newcess_amount'],

                                'new_tax_hecess_amount' => $_POST['total_newhecess_amount'],

                                'new_tax_total_amount'  => round(($_POST['total_newtax_amount']+$_POST['total_newcess_amount']+$_POST['total_newhecess_amount']),0),

                                'gross_amount'          => $_POST['gross_amount'],

                                'service_tax_amount'    => round(($_POST['total_newtax_amount']+$_POST['total_newcess_amount']+$_POST['total_newhecess_amount']),0),

                                'tax_code'              => $_POST['tax_code'],

                                'tax_sub_account_code'  => $_POST['tax_sub_account_code'],

                                'tax_amount'            => $_POST['tax_amount'],

                                'net_amount'            => $_POST['net_amount'],

                                'remarks'               => stripslashes($_POST['remarks']),

                                'status_code'           => 'A',

                                'prepared_by'           => $global_userid,

                                'prepared_on'           => $global_sysdate);

                $voucherHeaderObj->insert($h_array);

                $ref_voucher_serial_no = $this->db->insertID();

            }



            if($user_option == 'Edit') {  

                // voucher header

                $h_array = array('branch_code'           => $_POST['branch_code'],

                                'entry_date'            => date_conv($_POST['entry_date']),

                                'trans_type'            => 'PV',

                                'voucher_type'          => 'PV',

                                'payee_payer_type'      => $_POST['payee_payer_type'],

                                'payee_payer_code'      => $_POST['associate_code'],

                                'payee_payer_name'      => stripslashes($_POST['associate_name']),

                                'pan_no'                => strtoupper($_POST['pan_no']),

                                'payment_type'          => $_POST['payment_type'],

                                'basic_amount'          => $_POST['total_basic_amount'],

                                'new_tax_amount'        => $_POST['total_newtax_amount'],

                                'new_tax_cess_amount'   => $_POST['total_newcess_amount'],

                                'new_tax_hecess_amount' => $_POST['total_newhecess_amount'],

                                'new_tax_total_amount'  => round(($_POST['total_newtax_amount']+$_POST['total_newcess_amount']+$_POST['total_newhecess_amount']), 0),

                                'gross_amount'          => $_POST['gross_amount'],

                                'service_tax_amount'    => round(($_POST['total_newtax_amount']+$_POST['total_newcess_amount']+$_POST['total_newhecess_amount']),0),

                                'tax_code'              => $_POST['tax_code'],

                                'tax_sub_account_code'  => $_POST['tax_sub_account_code'],

                                'tax_amount'            => $_POST['tax_amount'],

                                'net_amount'            => $_POST['net_amount'],

                                'remarks'               => stripslashes($_POST['remarks']),

                                'status_code'           => 'A'); 

                $voucherHeaderObj->update($h_array, "serial_no = '".$serial_no."'");

                $voucherDetailObj->delete("ref_voucher_serial_no = '".$ref_voucher_serial_no."'"); // voucher detail

            }



            // insert records into details

            if($user_option == 'Add' || $user_option == 'Edit') {

                // voucher detail

                // echo $row_count; die;

                $cnt = 1 ;

                for($i=1; $cnt <= $row_count; $i++) {

                    if(isset($_REQUEST['voucher_ok_ind'.$i])) {

                        if($_POST['voucher_ok_ind'.$i] == 'Y' && !empty($_POST['main_ac_code'.$i]) && $_POST['total_amount'.$i] > 0) {

                            $xBillableInd = $_POST['billable_ind'.$i];

                            // echo $_POST['new_tax_amount'.$i]; die;

                            $array = array('ref_voucher_serial_no'    => $ref_voucher_serial_no,

                                        'row_no'                   => $cnt,

                                        'main_ac_code'             => $_POST['main_ac_code'.$i],

                                        'sub_ac_code'              => $_POST['sub_ac_code'.$i],

                                        'client_code'              => $_POST['client_code'.$i],

                                        'matter_code'              => $_POST['matter_code'.$i],

                                        'initial_code'             => $_POST['intl_code'.$i],

                                        'expense_type'             => 'C',

                                        'expense_code'             => $_POST['expense_code'.$i],

                                        'ceo_code'                 => $_POST['ceo_code'.$i],

                                        'exps_code'                => $_POST['exps_code'.$i],

                                        'narration'                => stripslashes($_POST['narration'.$i]),

                                        'bill_no'                  => $_POST['bill_no'.$i],

                                        'bill_date'                => date_conv($_POST['bill_date'.$i]),

                                        'basic_amount'             => $_POST['basic_amount'.$i],

                                        'new_tax_code'             => '',

                                        'new_tax_percent'          => $_POST['new_tax_percent'.$i],

                                        'new_tax_amount'           => $_POST['new_tax_amount'.$i],

                                        'new_tax_cess_percent'     => $_POST['new_tax_cess_percent'.$i],

                                        'new_tax_cess_amount'      => $_POST['new_tax_cess_amount'.$i],

                                        'new_tax_hecess_percent'   => $_POST['new_tax_hecess_percent'.$i],

                                        'new_tax_hecess_amount'    => $_POST['new_tax_hecess_amount'.$i],

                                        'new_tax_total_percent'    => $_POST['new_tax_percent'.$i] + round(($_POST['new_tax_percent'.$i]*$_POST['new_tax_cess_percent'.$i])/100,3)+ round(($_POST['new_tax_percent'.$i]*$_POST['new_tax_hecess_percent'.$i])/100,3),

                                        'new_tax_total_amount'     => round(($_POST['new_tax_amount'.$i]+$_POST['new_tax_cess_amount'.$i]+$_POST['new_tax_hecess_amount'.$i]),0),

                                        'service_tax_amount'       => round(($_POST['new_tax_amount'.$i]+$_POST['new_tax_cess_amount'.$i]+$_POST['new_tax_hecess_amount'.$i]),0),

                                        'gross_amount'             => $_POST['total_amount'.$i],

                                        'net_amount'               => $_POST['total_amount'.$i],

                                        'dr_cr_ind'                => 'D');

                            $voucherDetailObj->insert($array);

                            $this->db->query("update voucher_detail set billable_ind = '$xBillableInd' where ref_voucher_serial_no = '$ref_voucher_serial_no' and row_no = '$cnt' ");
                        }

                        $cnt+=1;

                    }

                }



                // credit voucher detail 

                if($_POST['tax_amount'] > 0) {

                    $cnt+=1;

                    $array = array('ref_voucher_serial_no'    => $ref_voucher_serial_no,

                                    'row_no'                   => $cnt,

                                    'main_ac_code'             => $_POST['tax_account_code'],

                                    'sub_ac_code'              => $_POST['tax_sub_account_code'],

                                    'narration'                => 'TDS',

                                    'gross_amount'             => $_POST['tax_amount'],

                                    'net_amount'               => $_POST['tax_amount'],

                                    'dr_cr_ind'                => 'C');

                    $voucherDetailObj->insert($array);

                }

                

                if($user_option == 'Add') { 

                    session()->setFlashdata('message', 'Please Note Generated Serial No : ' . $ref_voucher_serial_no);

                    return redirect()->to(session()->last_selected_end_menu);

                } else {

                    session()->setFlashdata('message', "Record with Serial NO: [".$serial_no."] Updated Sucessfully !!");

                    return redirect()->to(session()->last_selected_end_menu);

                }

            }



            if($user_option == 'Delete') {  

                // voucher header

                $h_array = array('status_code' => 'X');

                $resp = $voucherHeaderObj->update($h_array,"serial_no = '".$serial_no."'");



                if($resp) {

                    session()->setFlashdata('message', "Record with Serial NO: [".$serial_no."] Approved Sucessfully !!");

                    return redirect()->to(session()->last_selected_end_menu);

                }

            }



            if($user_option == 'Un-Approve') {  

                // voucher header

                $h_array = array('status_code' => 'A');

                $resp = $voucherHeaderObj->update($h_array,"serial_no = '".$serial_no."'");



                if($resp) {

                    session()->setFlashdata('message', "Record with Serial NO: [".$serial_no."] Un-Approved Sucessfully !!");

                    return redirect()->to(session()->last_selected_end_menu);

                }

            }



            if($user_option == 'Print') {  

                $user_sql      = "select prepared_by from voucher_header where serial_no = '$serial_no' " ; 

                $user_row      = $this->db->query($user_sql)->getRowArray();

                $prepared_by   = $user_row['prepared_by'];



                $print = true; $response = $this->common_print_expenses($serial_no, $prepared_by, $status_code); // Surajit: window.open('rep_fin_voucher_payments_made.php?prepared_by=$prepared_by&serial_no=$serial_no;

                

                if(!is_object($response)) {

                    return view("pages/Finance/Vouchers/payment", ['print' => $print, "data" => $data, "displayId" => $displayId, 'params' => $response['params'], 'user_option' => $user_option, 'serial_no' => $serial_no]);

                } else return $response;

            }

  

            if($user_option == 'Chq-Print') {  

                $user_sql      = "select prepared_by from voucher_header where serial_no = '$serial_no' " ; 

                $user_row      = $this->db->query($user_sql)->getRowArray();

                $prepared_by   = $user_row['prepared_by'];



                $print = true; $response = $this->common_print_expenses($serial_no, $prepared_by, $status_code); // Surajit:  window.open('rep_fin_voucher_payments_made_chq.php?prepared_by=$prepared_by&serial_no=$serial_no;&dupl_ind=$dupl_ind;

                

                if(!is_object($response)) {

                    return view("pages/Finance/Vouchers/payment", ['print' => $print, "data" => $data, "displayId" => $displayId, 'params' => $response['params'], 'user_option' => $user_option, 'serial_no' => $serial_no]);

                } else return $response;

            }



            if($user_option == 'Approve') {  

                // voucher header

                $h_array = array('status_code' => 'B', 'passed_by' => $global_userid, 'passed_on' => $global_sysdate);

                $resp = $voucherHeaderObj->update($h_array, "serial_no = '".$serial_no."'");



                if($resp) {

                    session()->setFlashdata('message', "Record with Serial NO: [".$serial_no."] Approved Sucessfully !!");

                    return redirect()->to(session()->last_selected_end_menu);

                }

            }



            if($user_option == 'Payment') {  

                // voucher header

                if($_POST['daybook_type']!='CB'){$instrument_type = 'Q';} else{$instrument_type = 'C';}



                // daybook main as code and sub ac code

                $row = $this->db->query("SELECT * FROM daybook_master where daybook_code = '".$_POST['daybook_code']."'")->getRowArray();

                $db_main_ac_code = $row['main_ac_code'];

                $db_sub_ac_code  = $row['sub_ac_code'];



                // generation of doc_no

                $voucher_date = isset($_POST['voucher_date']) ? $_POST['voucher_date'] : null;

                $voucher_date = date_conv($voucher_date); 

                $month_code   = substr($voucher_date, 5, 2);

                $pv_doc_no = getLastDocNo($global_curr_finyear,$_POST['branch_code'],$_POST['daybook_code'],$month_code, 'D');



                // ledger header

                $lh_array = array('serial_no'             => 'NULL',

                                'branch_code'           => $_POST['branch_code'],

                                'fin_year'              => $global_curr_finyear,

                                'doc_type'              => 'PV',

                                'doc_date'              => $voucher_date,

                                'doc_no'                => $pv_doc_no,

                                'daybook_code'          => $_POST['daybook_code'],

                                'instrument_type'       => $instrument_type,

                                'instrument_no'         => $_POST['instrument_no'],

                                'instrument_dt'         => date_conv($_POST['instrument_dt']),

                                'narration'             => 'PAID TO '.stripslashes($_POST['associate_name']),

                                'payee_payer_type'      => $_POST['payee_payer_type'],

                                'payee_payer_code'      => $_POST['associate_code'],

                                'payee_payer_name'      => stripslashes($_POST['associate_name']),

                                'pan_no'                => strtoupper($_POST['pan_no']),

                                'payment_type'          => $_POST['payment_type'],

                                'basic_amount'          => $_POST['total_basic_amount'],

                                'new_tax_amount'        => $_POST['total_newtax_amount'],

                                'new_tax_cess_amount'   => $_POST['total_newcess_amount'],

                                'new_tax_hecess_amount' => $_POST['total_newhecess_amount'],

                                'new_tax_total_amount'  => round(($_POST['total_newtax_amount']+$_POST['total_newcess_amount']+$_POST['total_newhecess_amount']),0),

                                'gross_amount'          => $_POST['gross_amount'],

                                'service_tax_amount'    => round(($_POST['total_newtax_amount']+$_POST['total_newcess_amount']+$_POST['total_newhecess_amount']),0),

                                'tax_code'              => $_POST['tax_code'],

                                'tax_percent'           => $_POST['tax_percent'],

                                'tax_amount'            => $_POST['tax_amount'],

                                'net_amount'            => $_POST['net_amount'],

                                'status_code'           => 'C',

                                'ref_doc_serial_no'     => $serial_no,

                                'ref_doc_type'          => $trans_type,

                                'paid_by'               => $global_userid,

                                'paid_on'               => $global_sysdate);

                $ledgerHeaderObj->insert($lh_array);

                $ref_ledger_serial_no = $this->db->insertID();



                // ledger detail

                for($i=1; $i <= $row_count; $i++) {

                    $xBillableInd = $_POST['billable_ind'.$i] ;

                    $xMainAcCode  = $_POST['main_ac_code'.$i] ;

                    $xSubAcCode   = $_POST['sub_ac_code'.$i] ;

                    $xExpnCode    = $_POST['expense_code'.$i] ;

                    $xMatterCode  = $_POST['matter_code'.$i] ;



                    $ld_array = array('ref_ledger_serial_no'     => $ref_ledger_serial_no,

                                        'branch_code'              => $_POST['branch_code'],

                                        'main_ac_code'             => $_POST['main_ac_code'.$i],

                                        'sub_ac_code'              => $_POST['sub_ac_code'.$i],

                                        'client_code'              => $_POST['client_code'.$i],

                                        'matter_code'              => $_POST['matter_code'.$i],

                                        'initial_code'             => $_POST['intl_code'.$i],

                                        'expense_type'             => 'C',

                                        'expense_code'             => $_POST['expense_code'.$i],

                                        'ceo_code'                 => $_POST['ceo_code'.$i],

                                        'exps_code'                => $_POST['exps_code'.$i],

                                        'narration'                => stripslashes($_POST['narration'.$i]),

                                        'bill_no'                  => $_POST['bill_no'.$i],

                                        'bill_date'                => date_conv($_POST['bill_date'.$i]),

                                        'basic_amount'             => $_POST['basic_amount'.$i],

                                        'new_tax_code'             => '',

                                        'new_tax_percent'          => $_POST['new_tax_percent'.$i],

                                        'new_tax_amount'           => $_POST['new_tax_amount'.$i],

                                        'new_tax_cess_percent'     => $_POST['new_tax_cess_percent'.$i],

                                        'new_tax_cess_amount'      => $_POST['new_tax_cess_amount'.$i],

                                        'new_tax_hecess_percent'   => $_POST['new_tax_hecess_percent'.$i],

                                        'new_tax_hecess_amount'    => $_POST['new_tax_hecess_amount'.$i],

                                        'new_tax_total_percent'    => $_POST['new_tax_percent'.$i] + round(($_POST['new_tax_percent'.$i]*$_POST['new_tax_cess_percent'.$i])/100,3)+ round(($_POST['new_tax_percent'.$i]*$_POST['new_tax_hecess_percent'.$i])/100,3),

                                        'new_tax_total_amount'     => round(($_POST['new_tax_amount'.$i]+$_POST['new_tax_cess_amount'.$i]+$_POST['new_tax_hecess_amount'.$i]),0),

                                        'gross_amount'             => $_POST['total_amount'.$i],

                                        'service_tax_amount'       => round(($_POST['new_tax_amount'.$i]+$_POST['new_tax_cess_amount'.$i]+$_POST['new_tax_hecess_amount'.$i]),0),

                                        'tax_amount'               => '',

                                        'net_amount'               => $_POST['total_amount'.$i],

                                        'dr_cr_ind'                => 'D',

                                        'record_type'              => 'G',

                                        'ref_doc_type'             => $trans_type,

                                        'ref_doc_year'             => '',

                                        'ref_doc_serial_no'        => $serial_no,

                                        'ref_doc_no'               => '',

                                        'ref_doc_date'             => ''

                                        ) ;

                    $ledgerDetailObj->insert($ld_array);

            

                    //--- SB (08/01/2019)

                    if(empty($xSubAcCode)) {

                        $this->db->query("update ledger_trans_dtl set billable_ind = '$xBillableInd' where ref_ledger_serial_no = '$ref_ledger_serial_no' and main_ac_code = '$xMainAcCode' and (sub_ac_code = '' or sub_ac_code is null) and dr_cr_ind = 'D' ");

                    } else {

                        $this->db->query("update ledger_trans_dtl set billable_ind = '$xBillableInd' where ref_ledger_serial_no = '$ref_ledger_serial_no' and main_ac_code = '$xMainAcCode' and sub_ac_code = '$xSubAcCode' and dr_cr_ind = 'D' ");

                    }	 



                    // insert into expense detail

                    if(!empty($_POST['expense_code'.$i])) {

                        $ed_array = array('serial_no'            => NULL,

                                        'branch_code'          => $_POST['branch_code'],

                                        'ref_ledger_serial_no' => $ref_ledger_serial_no,

                                        'fin_year'             => $global_curr_finyear,

                                        'daybook_code'         => $_POST['daybook_code'],

                                        'doc_no'               => $pv_doc_no,

                                        'doc_date'             => $voucher_date,

                                        'dr_cr_ind'            => 'D',

                                        'expense_type'         => 'C',

                                        'expense_code'         => $_POST['expense_code'.$i],

                                        'amount'               => $_POST['total_amount'.$i],

                                        'matter_code'          => $_POST['matter_code'.$i],

                                        'client_code'          => $_POST['client_code'.$i]);

                        $expenseDetailObj->insert($ed_array);



                        //--- SB (08/01/2019)

                        $this->db->query("update expense_detail set billable_ind = '$xBillableInd' where ref_ledger_serial_no = '$ref_ledger_serial_no' and matter_code = '$xMatterCode' and expense_type = 'C' and expense_code = '$xExpnCode' ");

                    }

                }



                // cash-bank record

                $ld_array = array('ref_ledger_serial_no' => $ref_ledger_serial_no,

                                'branch_code'          => $_POST['branch_code'],

                                'main_ac_code'         => $db_main_ac_code,

                                'sub_ac_code'          => $db_sub_ac_code,

                                'narration'            => 'Paid to '.stripslashes($_POST['associate_name']),

                                'gross_amount'         => $_POST['net_amount'],

                                'net_amount'           => $_POST['net_amount'],

                                'dr_cr_ind'            => 'C',

                                'record_type'          => 'G',

                                'ref_doc_serial_no'    => $serial_no,

                                'ref_doc_type'         => $trans_type) ;

                $ledgerDetailObj->insert($ld_array);



                // credit voucher detail 

                if($_POST['tax_amount'] > 0) {

                    $ld_array = array('ref_ledger_serial_no' => $ref_ledger_serial_no,

                                        'branch_code'          => $_POST['branch_code'],

                                        'main_ac_code'         => $_POST['tax_account_code'],

                                        'sub_ac_code'          => $_POST['tax_sub_account_code'],

                                        'narration'            => 'TDS',

                                        'gross_amount'         => $_POST['tax_amount'],

                                        'net_amount'           => $_POST['tax_amount'],

                                        'dr_cr_ind'            => 'C',

                                        'record_type'          => 'G',

                                        'ref_doc_serial_no'    => $serial_no,

                                        'ref_doc_type'         => $trans_type) ;

                    $ledgerDetailObj->insert($ld_array);



                    // insert into tds certificate table

                    $tc_array = array('serial_no'            => NULL,

                                        'branch_code'          => $_POST['branch_code'],

                                        'pay_rcpt_ind'         => 'P',

                                        'ref_ledger_serial_no' => $ref_ledger_serial_no,

                                        'fin_year'             => $global_curr_finyear,

                                        'daybook_code'         => $_POST['daybook_code'],

                                        'doc_no'               => $pv_doc_no,

                                        'doc_date'             => $voucher_date,

                                        'instrument_no'        => $_POST['instrument_no'],

                                        'instrument_dt'        => date_conv($_POST['instrument_dt']),

                                        'bank_name'            => $_POST['bank_name'],

                                        'dr_cr_ind'            => 'D',

                                        'payee_payer_type'     => $_POST['payee_payer_type'],

                                        'payee_payer_code'     => $_POST['associate_code'],

                                        'payee_payer_name'     => stripslashes($_POST['associate_name']),

                                        'pan_no'               => strtoupper($_POST['pan_no']),

                                        'nature_of_service'    => '',

                                        'gross_amount'         => $_POST['gross_amount'],

                                        'tax_code'             => $_POST['tax_code'],

                                        'tax_amount'           => $_POST['tax_amount'],

                                        'net_amount'           => $_POST['net_amount'],

                                        'tds_deposit_ind'      => 'N');

                    $tdsCertObj->insert($tc_array);

                }

            

                // jv record

                $ref_jv_serial_no = NULL;

                if($trans_type != 'MJ') {

                    if($_POST['link_jv_serial_no'] > 0) {

                        // daybook code and description

                        $row = $this->db->query("SELECT key_value,key_desc FROM control_keycodes where key_code = '017'")->getRowArray();

                        $jv_daybook_code = $row['key_value'];



                        $hdr_data = $this->db->query("select voucher_header.serial_no, voucher_header.branch_code, voucher_header.entry_date, voucher_header.trans_type, 

                                                                            voucher_header.voucher_type, voucher_header.payee_payer_type, voucher_header.payee_payer_code, voucher_header.payee_payer_name, 

                                                                            voucher_header.received_from, voucher_header.payment_type, voucher_header.daybook_code, voucher_header.pan_no, voucher_header.instrument_type,

                                                                            voucher_header.instrument_no, voucher_header.instrument_dt, voucher_header.bank_name, voucher_header.basic_amount, 

                                                                            voucher_header.new_tax_amount, voucher_header.new_tax_cess_amount, voucher_header.new_tax_hecess_amount, voucher_header.new_tax_total_amount, 

                                                                            voucher_header.gross_amount, voucher_header.service_tax_amount, voucher_header.tax_code, voucher_header.tax_sub_account_code, 

                                                                            voucher_header.tax_amount,  voucher_header.net_amount, voucher_header.remarks, voucher_header.status_code, voucher_header.ref_ledger_serial_no, 

                                                                            voucher_header.ref_jv_serial_no, voucher_header.ref_advance_serial_no, voucher_header.link_jv_serial_no, voucher_header.backlog_counsel_fee, 

                                                                            voucher_header.backlog_clerk_fee, voucher_header.backlog_peon_fee, voucher_header.prepared_by, voucher_header.prepared_on, voucher_header.passed_by, 

                                                                            voucher_header.passed_on, voucher_header.paid_by, voucher_header.paid_on from voucher_header where voucher_header.serial_no = '".$_POST['link_jv_serial_no']."'")->getRowArray();



                        // generation of doc_no

                        $jv_doc_no = getLastDocNo($global_curr_finyear, $hdr_data['branch_code'], $jv_daybook_code, '00', 'J');

                        $jv_date = $voucher_date ;



                        // ledger header

                        $lh_array = array('serial_no'             => 'NULL',

                                        'branch_code'           => $hdr_data['branch_code'],

                                        'fin_year'              => $global_curr_finyear,

                                        'doc_type'              => 'JV',

                                        'doc_date'              => $jv_date,

                                        'doc_no'                => $jv_doc_no,

                                        'daybook_code'          => $hdr_data['daybook_code'],

                                        'instrument_type'       => $hdr_data['instrument_type'],

                                        'instrument_no'         => $hdr_data['instrument_no'],

                                        'instrument_dt'         => $hdr_data['instrument_dt'],

                                        'payee_payer_type'      => $hdr_data['payee_payer_type'],

                                        'payee_payer_code'      => isset($hdr_data['associate_code']) ? $hdr_data['associate_code'] : '',

                                        'payee_payer_name'      => stripslashes(isset($hdr_data['associate_name']) ? $hdr_data['associate_name'] : ''),

                                        'pan_no'                => strtoupper($hdr_data['pan_no']),

                                        'payment_type'          => $hdr_data['payment_type'],

                                        'gross_amount'          => $hdr_data['gross_amount'],

                                        'tax_code'              => $hdr_data['tax_code'],

                                        'tax_amount'            => $hdr_data['tax_amount'],

                                        'net_amount'            => $hdr_data['net_amount'],

                                        'status_code'           => 'C',

                                        'paid_by'               => $global_userid,

                                        'paid_on'               => $global_sysdate);

                    

                        $ledgerHeaderObj->insert($lh_array);

                        $ref_jv_serial_no = $this->db->insertID();



                        $dtl_row_count = $this->db->query("select count(ref_voucher_serial_no) as totalRow from voucher_detail where voucher_detail.ref_voucher_serial_no = '".$_POST['link_jv_serial_no']."'")->getRowArray()['totalRow'];



                        // ledger detail

                        if($dtl_row_count > 0) {

                        $dtl_data = $this->db->query("select voucher_detail.ref_voucher_serial_no, voucher_detail.row_no, voucher_detail.main_ac_code, voucher_detail.sub_ac_code, voucher_detail.ref_bill_year, voucher_detail.ref_bill_no, voucher_detail.client_code, 

                                                                voucher_detail.matter_code, voucher_detail.initial_code, voucher_detail.expense_type, voucher_detail.expense_code, voucher_detail.ceo_code, voucher_detail.exps_code, voucher_detail.narration, 

                                                                voucher_detail.realise_amount_inpocket_stax, voucher_detail.realise_amount_outpocket_stax, voucher_detail.realise_amount_counsel_stax, voucher_detail.realise_amount_inpocket_ntax, voucher_detail.realise_amount_outpocket_ntax,

                                                                voucher_detail.realise_amount_counsel_ntax, voucher_detail.realise_amount_inpocket, voucher_detail.realise_amount_outpocket, voucher_detail.realise_amount_counsel, voucher_detail.realise_amount_service_tax, voucher_detail.bill_no, 

                                                                voucher_detail.bill_date, voucher_detail.basic_amount, voucher_detail.new_tax_code, voucher_detail.new_tax_percent, voucher_detail.new_tax_amount, voucher_detail.new_tax_cess_percent, voucher_detail.new_tax_cess_amount,

                                                                voucher_detail.new_tax_hecess_percent, voucher_detail.new_tax_hecess_amount, voucher_detail.new_tax_total_percent, voucher_detail.new_tax_total_amount, voucher_detail.service_tax_amount, voucher_detail.gross_amount, voucher_detail.tax_amount, voucher_detail.net_amount,

                                                                voucher_detail.dr_cr_ind, voucher_detail.deficit_amount_inpocket_stax, voucher_detail.deficit_amount_outpocket_stax, voucher_detail.deficit_amount_counsel_stax, voucher_detail.deficit_amount_inpocket_ntax, voucher_detail.deficit_amount_outpocket_ntax, 

                                                                voucher_detail.deficit_amount_counsel_ntax, voucher_detail.deficit_amount_inpocket, voucher_detail.deficit_amount_outpocket,voucher_detail.deficit_amount_counsel,voucher_detail.deficit_amount_service_tax,voucher_detail.part_full_ind,

                                                                voucher_detail.ref_doc_serial_no from voucher_detail where voucher_detail.ref_voucher_serial_no = '".$_POST['link_jv_serial_no']."' order by ref_voucher_serial_no,row_no ASC")->getResultArray();

                        

                        for($i=1; $i <= $dtl_row_count; $i++) {

                            $ld_array = array('ref_ledger_serial_no' => $ref_jv_serial_no,

                                            'branch_code'          => $hdr_data['branch_code'],

                                            'main_ac_code'         => $dtl_data[$i-1]['main_ac_code'],

                                            'sub_ac_code'          => $dtl_data[$i-1]['sub_ac_code'],

                                            'client_code'          => $dtl_data[$i-1]['client_code'],

                                            'matter_code'          => $dtl_data[$i-1]['matter_code'],

                                            'initial_code'         => isset($dtl_data[$i-1]['intl_code']) ? $dtl_data[$i-1]['intl_code'] : '',

                                            'expense_type'         => $dtl_data[$i-1]['expense_type'],

                                            'expense_code'         => $dtl_data[$i-1]['expense_code'],

                                            'ceo_code'             => $dtl_data[$i-1]['ceo_code'],

                                            'exps_code'            => $dtl_data[$i-1]['exps_code'],

                                            'narration'            => stripslashes($dtl_data[$i-1]['narration']),

                                            'gross_amount'         => $dtl_data[$i-1]['gross_amount'],

                                            'net_amount'           => $dtl_data[$i-1]['net_amount'],

                                            'dr_cr_ind'            => $dtl_data[$i-1]['dr_cr_ind'],

                                            'record_type'          => 'G');

                            $ledgerDetailObj->insert($ld_array);

                        }

                        }

                    }

                }



                // insert into advance detail table

                if($_POST['payment_type'] == 'A') {

                    $adv_array = array('serial_no'             => 'NULL',

                                    'fin_year'              => $global_curr_finyear,

                                    'branch_code'           => $_POST['branch_code'],

                                    'ref_ledger_serial_no'  => $ref_ledger_serial_no,

                                    'advance_type'          => 'P', 

                                    'payee_payer_type'      => $_POST['payee_payer_type'],

                                    'payee_payer_code'      => $_POST['associate_code'],

                                    'payee_payer_name'      => stripslashes($_POST['associate_name']),

                                    'instrument_type'       => $instrument_type,

                                    'instrument_no'         => $_POST['instrument_no'],

                                    'instrument_dt'         => date_conv($_POST['instrument_dt']),

                                    'gross_amount'          => $_POST['gross_amount'],

                                    'tax_amount'            => $_POST['tax_amount'],

                                    'net_amount'            => $_POST['net_amount'],

                                    'status_code'           => 'A');

                    $advanceDetailObj->insert($adv_array);

                    $ref_advance_serial_no = $this->db->insertID();

                }



                // insert into bank recon table

                if($instrument_type == 'Q') { 

                    $br_array = array('serial_no'             => 'NULL',

                                    'ref_ledger_serial_no'  => $ref_ledger_serial_no,

                                    'fin_year'              => $global_curr_finyear,

                                    'branch_code'           => $_POST['branch_code'],

                                    'doc_type'              => 'PV',

                                    'doc_date'              => $voucher_date,

                                    'doc_no'                => $pv_doc_no,

                                    'daybook_code'          => $_POST['daybook_code'],

                                    'instrument_no'         => $_POST['instrument_no'],

                                    'instrument_dt'         => date_conv($_POST['instrument_dt']),

                                    'bank_name'             => $_POST['bank_name'],

                                    'narration'             => 'PAID TO '.stripslashes($_POST['associate_name']),

                                    'payee_payer_type'      => $_POST['payee_payer_type'],

                                    'payee_payer_code'      => $_POST['associate_code'],

                                    'payee_payer_name'      => stripslashes($_POST['associate_name']),

                                    // 'payment_type'          => $_POST['payment_type'],

                                    'dr_cr_ind'             => 'D',

                                    'amount'                => $_POST['net_amount'],

                                    'status_code'           => 'A');

                    $bankReconObj->insert($br_array);

                }



                // update voucher header

                $h_array = array('status_code'           => 'C',

                                'ref_ledger_serial_no'  => $ref_ledger_serial_no,

                                'ref_jv_serial_no'      => $ref_jv_serial_no,

                                'ref_advance_serial_no' => $ref_advance_serial_no,

                                'daybook_code'          => $_POST['daybook_code'],

                                'instrument_type'       => $instrument_type,

                                'instrument_no'         => $_POST['instrument_no'],

                                'instrument_dt'         => date_conv($_POST['instrument_dt']),

                                'paid_by'               => $global_userid,

                                'paid_on'               => $global_sysdate);

                $voucherHeaderObj->update($h_array, "serial_no = '".$serial_no."'");



                // update voucher header jv record

                $h_array = array('ref_ledger_serial_no'  => $ref_jv_serial_no);

                $voucherHeaderObj->update($h_array,"serial_no = '".$_POST['link_jv_serial_no']."'");



                // repective other expenses table 

                if ($trans_type == 'CM') {

                    $array = array('status_code' => 'D');

                    $where = "ref_voucher_serial_no = '".$serial_no."'";

                    $courtExpenseObj->update($array, $where);



                } else if ($trans_type == 'PE') {

                    $array = array('status_code' => 'D');

                    $where = "ref_voucher_serial_no = '".$serial_no."'";

                    $photoCopyExpenseObj->update($array, $where);



                } else if ($trans_type == 'CC') {

                    $array = array('status_code' => 'D');

                    $where = "ref_voucher_serial_no = '".$serial_no."'";

                    $courierExpenseObj->update($array, $where);



                } else if ($trans_type == 'ST') {

                    $array = array('status_code' => 'D');

                    $where = "ref_voucher_serial_no = '".$serial_no."'";

                    $stenoExpenseObj->update($array, $where);



                } else if ($trans_type == 'AR') {

                    $array = array('status_code' => 'D');

                    $where = "ref_voucher_serial_no = '".$serial_no."'";

                    $arbitratorObj->update($array, $where);

                }

            }



            // alert final voucher and final jv no

            if($user_option == 'Payment') {



                    $ledger_serial_no = $ref_ledger_serial_no ;

                    $this->ledger_posting($ledger_serial_no);

                    // end of account balance updation



                    // account balance updation

                    $ledger_serial_no = $ref_jv_serial_no ;

                    $this->ledger_posting($ledger_serial_no);

                    // end of account balance updation



                    if(!empty($ref_jv_serial_no)) {

                        $message = 'Please note Final Voucher No : ' . $pv_doc_no  . '   Voucher Date : ' . date_conv($voucher_date) . '   Final JV No. : ' . $jv_doc_no ;

                    } else {

                        $message = 'Please note Final Voucher No : ' . $pv_doc_no . '   Voucher Date : ' . date_conv($voucher_date) ;

                    }

                

                session()->setFlashdata('message', $message);

                return redirect()->to(session()->last_selected_end_menu);

            }

        }



        if(empty($dtl_data_qry)) $dtl_data_qry = ['empty'];



        foreach($dtl_data_qry as $key => $dtl_data) {

            $dtl_data_arr[$key]['main_ac_code'] = $main_ac_code = isset($dtl_data['main_ac_code']) ? $dtl_data['main_ac_code'] : '';

            $dtl_data_arr[$key]['sub_ac_code'] = $sub_ac_code = isset($dtl_data['sub_ac_code']) ? $dtl_data['sub_ac_code'] : '';

            $dtl_data_arr[$key]['matter_code'] = $matter_code = isset($dtl_data['matter_code']) ? $dtl_data['matter_code'] : '';

            $dtl_data_arr[$key]['expense_code'] = $expense_code = isset($dtl_data['expense_code']) ? $dtl_data['expense_code'] : '';

            $dtl_data_arr[$key]['ceo_code'] = isset($dtl_data['ceo_code']) ? $dtl_data['ceo_code'] : '';

            $dtl_data_arr[$key]['exps_code'] = isset($dtl_data['exps_code']) ? $dtl_data['exps_code'] : '';

            $dtl_data_arr[$key]['bill_no'] = isset($dtl_data['bill_no']) ? $dtl_data['bill_no'] : '';

            $dtl_data_arr[$key]['bill_date'] = date_conv(isset($dtl_data['bill_date']) ? $dtl_data['bill_date'] : '');

            $dtl_data_arr[$key]['basic_amount'] = isset($dtl_data['basic_amount']) ? $dtl_data['basic_amount'] : '';

            $dtl_data_arr[$key]['new_tax_percent'] = isset($dtl_data['new_tax_percent']) ? $dtl_data['new_tax_percent'] : '';

            $dtl_data_arr[$key]['new_tax_amount'] = isset($dtl_data['new_tax_amount']) ? $dtl_data['new_tax_amount'] : '';

            $dtl_data_arr[$key]['new_tax_cess_percent'] = isset($dtl_data['new_tax_cess_percent']) ? $dtl_data['new_tax_cess_percent'] : '';

            $dtl_data_arr[$key]['new_tax_cess_amount'] = isset($dtl_data['new_tax_cess_amount']) ? $dtl_data['new_tax_cess_amount'] : '';

            $dtl_data_arr[$key]['new_tax_hecess_percent'] = isset($dtl_data['new_tax_hecess_percent']) ? $dtl_data['new_tax_hecess_percent'] : '';

            $dtl_data_arr[$key]['new_tax_hecess_amount'] = isset($dtl_data['new_tax_hecess_amount']) ? $dtl_data['new_tax_hecess_amount'] : '';

            $dtl_data_arr[$key]['new_tax_total_amount'] = isset($dtl_data['new_tax_total_amount']) ? $dtl_data['new_tax_total_amount'] : '';

            $dtl_data_arr[$key]['total_amount'] = isset($dtl_data['gross_amount']) ? $dtl_data['gross_amount'] : '';

            $dtl_data_arr[$key]['narration'] = isset($dtl_data['narration']) ? $dtl_data['narration'] : '';

            $dtl_data_arr[$key]['billable_ind'] = isset($dtl_data['billable_ind']) ? $dtl_data['billable_ind'] : '';    if($billable_ind == 'Y') { $billable_ind_desc = 'checked'; } else { $billable_ind_desc = '' ; }



            // account description 

            $row = $this->db->query("select main_ac_desc,sub_ac_ind from account_master where main_ac_code = '$main_ac_code'")->getRowArray();

            $dtl_data_arr[$key]['ac_desc'] = isset($row['main_ac_desc']) ? $row['main_ac_desc'] : '';

            $dtl_data_arr[$key]['sub_ac_ind'] = isset($row['sub_ac_ind']) ? $row['sub_ac_ind'] : '';



            // sub account description 

            $row = $this->db->query("select sub_ac_desc from sub_account_master where main_ac_code = '$main_ac_code' and sub_ac_code='$sub_ac_code'")->getRowArray();

            $dtl_data_arr[$key]['sub_ac_desc'] = isset($row['sub_ac_desc']) ? $row['sub_ac_desc'] : '';



            // matter description 

            $row = $this->db->query("select concat(matter_desc1,' ',matter_desc2) matter_name,client_code,initial_code from fileinfo_header where matter_code  = '$matter_code'")->getRowArray();

            $dtl_data_arr[$key]['matter_name'] = isset($row['matter_name']) ? $row['matter_name'] : '';

            $dtl_data_arr[$key]['client_code'] = isset($row['client_code']) ? $row['client_code'] : '';

            $dtl_data_arr[$key]['intl_code']   = isset($row['initial_code']) ? $row['initial_code'] : '';



            // expense description 

            $res = $this->db->query("select expense_desc from expense_master where expense_code  = '$expense_code'")->getRowArray();

            $dtl_data_arr[$key]['expense_desc'] = isset($row['expense_desc']) ? $row['expense_desc'] : '';

        }



        if ($user_option == 'Add' || $user_option == 'Edit' || $user_option == 'Post-Edit' ) { $where_stmt = ""; }

        else {$where_stmt = " and b.tax_code = '$tax_code'";}

        $res = $this->db->query("select * from tax_master a, tax_rate b where a.tax_type_code = 'T' and a.tax_code = b.tax_code and b.fin_year = '$global_curr_finyear' " . $where_stmt)->getResultArray();



        $params = [

            'serial_no' => $serial_no,

            'link_jv_serial_no' => $link_jv_serial_no,

            'status_code' => $status_code,

            'status_desc' => $status_desc,

            'colour_s' => $colour_s,

            'entry_date' => $entry_date,

            'payee_payer_type' => $payee_payer_type,

            'associate_name' => $associate_name,

            'associate_code' => $associate_code,

            'payment_type' => $payment_type,

            'remarks' => $remarks,

            'dtl_data_sql' => $dtl_data_sql,

            'billable_ind_desc' => $billable_ind_desc,

            'daybook_qry' => $daybook_qry,

            'daybook_type' => $daybook_type,

            'global_sysdate' => $global_sysdate,

            'global_curr_finyr_fymddate' => $global_curr_finyr_fymddate,

            'global_curr_finyr_lymddate' => $global_curr_finyr_lymddate,

            'daybook_code' => $daybook_code,

            'instrument_no' => $instrument_no,

            'instrument_dt' => $instrument_dt,

            'gross_amount' => $gross_amount,

            'total_basic_amount' => $total_basic_amount,

            'total_newtax_amount' => $total_newtax_amount,

            'total_newcess_amount' => $total_newcess_amount,

            'total_newhecess_amount' => $total_newhecess_amount,

            'tax_code' => $tax_code,

            'tax_account_code' => $tax_account_code,

            'tax_sub_account_code' => $tax_sub_account_code,

            'tax_percent' => $tax_percent,

            'tax_amount' => $tax_amount,

            'net_amount' => $net_amount,

            'row_count' => count($dtl_data_qry),

            'trans_type' => $trans_type,

            'pan_no' => $pan_no,

            'prepared_by' => $prepared_by,

            'prepared_on' => $prepared_on,

            'paid_by' => $paid_by,

            'paid_on' => $paid_on,

            'global_userid' => $global_userid,

            'instrument_no' => $instrument_no,

            'instrument_dt' => $instrument_dt,

            'final_voucher_date' => $final_voucher_date,

            'bank_name' => $bank_name,

        ];

        return view("pages/Finance/Vouchers/payment", compact('params', 'data', 'tag_permissions', 'user_option', 'dtl_data_arr', 'status_code', 'res', 'selemode', 'displayId'));

    }

    

    public function receipt_others() { 

        $global_userid = $user_id = session()->userId;

        $data = branches($user_id); $global_curr_finyear = session()->financialYear;

        $global_dmydate = date('d-m-Y'); $global_sysdate = date_conv($global_dmydate); 

        $data['requested_url'] = session()->requested_end_menu_url;

        $displayId = ['asso_code' => 4141, 'matter_code' => 4202, 'main_ac_code' => 4002, 'sub_ac_code' => 4003, 'tax_code' => 4005];

        

        $global_curr_finyr_fymddate = substr($global_curr_finyear, 0, 4).'-04-01';

        $global_curr_finyr_lymddate = substr($global_curr_finyear, 5, 4).'-03-31';



        $selemode   = isset($_REQUEST['selemode']) ? $_REQUEST['selemode'] : null;

        $user_option = isset($_REQUEST['user_option'])?$_REQUEST['user_option']:null;

        $serial_no   = isset($_REQUEST['serial_no'])?$_REQUEST['serial_no']:null;

        

        if ($user_option == 'Add' )    { $readonly = '' ;           $disview = ''; }

        if ($user_option == 'Edit')    { $readonly = '' ;           $disview = ''; }

        if ($user_option == 'View')    { $readonly = 'readonly' ;   $disview = 'disabled'; }

        if ($user_option == 'Delete')  { $readonly = 'readonly' ;   $disview = 'disabled'; }

        if ($user_option == 'Print')   { $readonly = 'readonly' ;   $disview = 'disabled'; }

        if ($user_option == 'Approve') { $readonly = 'readonly' ;   $disview = ''; }

        $tag_permissions = $readonly . ' ' . $disview;



        $voucherHeaderObj = $this->db->table("voucher_header"); // object : voucher header

        $voucherDetailObj = $this->db->table("voucher_detail"); // object : voucher detail



        if($selemode != 'Y') {             

            if($user_option == 'Add') {

                $entry_date = date('d-m-Y'); $payee_payer_type = 'O'; $associate_code = ''; $associate_name = ''; $payment_type = 'N'; $instrument_type = 'C'; $remarks = '';

                $daybook_type = ''; $daybook_code = ''; $daybook_desc = ''; $status_code = 'A'; $status_desc = 'Active'; $row_count = 1 ;



            } else {

                $hdr_data = $this->db->query("Select * from voucher_header where voucher_header.serial_no = '$serial_no'")->getRowArray();



                $matter_code           = isset($hdr_data['matter_code']) ? $hdr_data['matter_code'] : '';

                $branch_code           = $hdr_data['branch_code'];

                $entry_date            = date_conv($hdr_data['entry_date']);

                $trans_type            = $hdr_data['trans_type'];

                $payee_payer_type      = $hdr_data['payee_payer_type'];

                $associate_code        = $hdr_data['payee_payer_code'];

                $associate_name        = $hdr_data['payee_payer_name'];

                $payment_type          = $hdr_data['payment_type'];

                $daybook_code          = $hdr_data['daybook_code'];

                $instrument_type       = $hdr_data['instrument_type'];

                $instrument_no         = $hdr_data['instrument_no'];

                $instrument_dt         = date_conv($hdr_data['instrument_dt']);

                $bank_name             = $hdr_data['bank_name'];

                $gross_amount          = $hdr_data['gross_amount'];

                $tax_amount            = $hdr_data['tax_amount'];

                $net_amount            = $hdr_data['net_amount'];

                $remarks               = $hdr_data['remarks'];

                $status_code           = $hdr_data['status_code'];

                $ref_ledger_serial_no  = $hdr_data['ref_ledger_serial_no'];

                $ref_jv_serial_no      = $hdr_data['ref_jv_serial_no'];

                $ref_advance_serial_no = $hdr_data['ref_advance_serial_no'];

                $link_jv_serial_no     = $hdr_data['link_jv_serial_no'];

                $prepared_by           = $hdr_data['prepared_by'];

                $prepared_on           = date_conv($hdr_data['prepared_on']);

                $passed_by             = $hdr_data['passed_by'];

                $passed_on             = date_conv($hdr_data['passed_on']);

                $paid_by               = $hdr_data['paid_by'];

                $paid_on               = date_conv($hdr_data['paid_on']);



                $dtl_row = $this->db->query("Select * from voucher_detail where voucher_detail.ref_voucher_serial_no = '$serial_no' and dr_cr_ind='C'")->getResultArray();

                $row_count = count($dtl_row) ;



                //--- Tax Code

                $row = $this->db->query("select main_ac_code, sub_ac_code from voucher_detail where ref_voucher_serial_no = '$serial_no' and dr_cr_ind = 'D' ")->getRowArray();

                $tax_account_code = isset($row['main_ac_code']) ? $row['main_ac_code'] : '';

                $tax_sub_account_code = isset($row['sub_ac_code']) ? $row['sub_ac_code'] : '';



                // status description

                $row = $this->db->query("SELECT status_desc FROM status_master where table_name = 'voucher_header' and status_code = '$status_code'")->getRowArray();

                $status_desc = isset($row['status_desc']) ? $row['status_desc'] : '';



                // daybook type and description

                $row = $this->db->query("SELECT * FROM daybook_master where daybook_code = '$daybook_code'")->getRowArray();

                $daybook_type = isset($row['daybook_type']) ? $row['daybook_type'] : '';

                $daybook_desc = isset($row['daybook_desc']) ? $row['daybook_desc'] : '';

            }

            if($status_code == 'A') { $colour_s = "#0000FF"; } else { $colour_s = "#FF0000";} 

            $selemode = 'Y';

        } else {

            $ref_voucher_serial_no = $serial_no;

            $row_count = isset($_POST['row_count'])?$_POST['row_count']:null;

            $instrument_type = isset($_POST['instrument_type'])?$_POST['instrument_type']:null;

          

            if($_POST['tax_amount']>0) {$tax_code = $_POST['tax_code']; } else {$tax_code = 'NULL';}



            $voucherHeaderObj = $this->db->table("voucher_header"); // object : voucher header

            $voucherDetailObj = $this->db->table("voucher_detail"); // object : voucher header

            $ledgerHeaderObj = $this->db->table("ledger_trans_hdr"); // object : ledger header

            $ledgerDetailObj = $this->db->table("ledger_trans_dtl"); // object : ledger detail

            $advanceDetailObj = $this->db->table("advance_details"); // object : advance detail

            $tdsCertObj = $this->db->table("tds_certificate"); // object : tds certificate

            $expenseDetailObj = $this->db->table("expense_detail"); // object : expense detail

            $bankReconObj = $this->db->table("bank_recon"); // object : bank recon



            //------------------------------------ FOR INSERT/UPDATE/DELETE : USING PEAR DB ------------------------------------// 

            if($user_option == 'Add') {  

              // new record insertion in [voucher header]

              $h_array = array('serial_no'             => 'NULL',

                               'branch_code'           => $_POST['branch_code'],

                               'entry_date'            => date_conv($_POST['entry_date']),

                               'trans_type'            => 'RO',

                               'voucher_type'          => 'RV',

                               'payee_payer_type'      => $_POST['payee_payer_type'],

                               'payee_payer_code'      => $_POST['associate_code'],

                               'payee_payer_name'      => stripslashes($_POST['associate_name']),

                               'payment_type'          => $_POST['payment_type'],

                               'instrument_type'       => $_POST['instrument_type'],

                               'instrument_no'         => $_POST['instrument_no'],

                               'instrument_dt'         => date_conv($_POST['instrument_dt']),

                               'bank_name'             => $_POST['bank_name'],

                               'gross_amount'          => $_POST['gross_amount'],

                               'tax_code'              => $tax_code,

                               'tax_amount'            => $_POST['tax_amount'],

                               'net_amount'            => $_POST['net_amount'],

                               'remarks'               => stripslashes($_POST['remarks']),

                               'status_code'           => 'A',

                               'prepared_by'           => $global_userid,

                               'prepared_on'           => $global_sysdate);

              $voucherHeaderObj->insert($h_array);

              $ref_voucher_serial_no = $this->db->insertID();



            } if($user_option == 'Edit') {  

              // voucher header

              $h_array = array('branch_code'           => $_POST['branch_code'],

                               'entry_date'            => date_conv($_POST['entry_date']),

                               'trans_type'            => 'RO',

                               'voucher_type'          => 'RV',

                               'payee_payer_type'      => $_POST['payee_payer_type'],

                               'payee_payer_code'      => $_POST['associate_code'],

                               'payee_payer_name'      => stripslashes($_POST['associate_name']),

                               'payment_type'          => $_POST['payment_type'],

                               'instrument_type'       => $_POST['instrument_type'],

                               'instrument_no'         => $_POST['instrument_no'],

                               'instrument_dt'         => date_conv($_POST['instrument_dt']),

                               'bank_name'             => $_POST['bank_name'],

                               'gross_amount'          => $_POST['gross_amount'],

                               'tax_code'              => $tax_code,

                               'tax_amount'            => $_POST['tax_amount'],

                               'net_amount'            => $_POST['net_amount'],

                               'remarks'               => stripslashes($_POST['remarks']),

                               'status_code'           => 'A');

              $v_header = $voucherHeaderObj->update($h_array, "serial_no = '".$serial_no."'");

              $voucherDetailObj->delete("ref_voucher_serial_no = '".$ref_voucher_serial_no."'"); // voucher detail

            }

          

            // insert records into details

            if($user_option == 'Add' || $user_option == 'Edit') {

                // voucher detail



                $cnt = 0 ;

                for($i=1;$i<=$row_count;$i++) {

                    if($_POST['voucher_ok_ind'.$i] == 'Y' && !empty($_POST['main_ac_code'.$i]) && $_POST['total_amount'.$i] > 0) {

                        $cnt+=1;

                        $array = array('ref_voucher_serial_no'    => $ref_voucher_serial_no,

                                        'row_no'                   => $cnt,

                                        'main_ac_code'             => $_POST['main_ac_code'.$i],

                                        'sub_ac_code'              => $_POST['sub_ac_code'.$i],

                                        'client_code'              => $_POST['client_code'.$i],

                                        'matter_code'              => $_POST['matter_code'.$i],

                                        'initial_code'             => $_POST['intl_code'.$i],

                                        'narration'                => $_POST['narration'.$i],

                                        'gross_amount'             => $_POST['total_amount'.$i],

                                        'net_amount'               => $_POST['total_amount'.$i],

                                        'dr_cr_ind'                => 'C');

                        $voucherDetailObj->insert($array);

                    }

                }

                // credit voucher detail 

                if($_POST['tax_amount'] > 0) {

                    $cnt+=1;

                    $array = array('ref_voucher_serial_no'    => $ref_voucher_serial_no,

                                'row_no'                   => $cnt,

                                'main_ac_code'             => $_POST['tax_account_code'],

                                'sub_ac_code'              => $_POST['tax_sub_account_code'],

                                'narration'                => 'TDS',

                                'gross_amount'             => $_POST['tax_amount'],

                                'net_amount'               => $_POST['tax_amount'],

                                'dr_cr_ind'                => 'D');

                    $voucherDetailObj->insert($array);

                }



                if($user_option == 'Add') { 

                    session()->setFlashdata('message', 'Please Note Generated Serial No : ' . $ref_voucher_serial_no);

                    return redirect()->to(session()->last_selected_end_menu);

                } else {

                    session()->setFlashdata('message', "Record with Serial NO: [".$serial_no."] Updated Sucessfully !!");

                    return redirect()->to(session()->last_selected_end_menu);

                }

            }

          

            if($user_option == 'Delete') {  

                // voucher header

                $h_array = array('status_code' => 'X');

                $resp = $voucherHeaderObj->update($h_array,"serial_no = '".$serial_no."'");



                if($resp) {

                    session()->setFlashdata('message', "Record with Serial NO: [".$serial_no."] Deleted Sucessfully !!");

                    return redirect()->to(session()->last_selected_end_menu);

                }

            }

          

            if($user_option == 'Print') {  

                // voucher header

                $h_array = array('status_code' => 'A');

                $v_header = $voucherHeaderObj->update($h_array, "serial_no = '".$serial_no."'"); // window.open('rep_fin_voucher_receipts_made_other.php?serial_no=<?php echo $serial_no;');

                $print = true; $response = $this->common_print_expenses($serial_no); //, $prepared_by, $status_code); // Surajit: window.open('rep_fin_voucher_payments_made.php?prepared_by=$prepared_by&serial_no=$serial_no;



                if(!is_object($response)) {

                    return view("pages/Finance/Vouchers/payment", ['print' => $print, "data" => $data, "displayId" => $displayId, 'params' => $response['params'], 'user_option' => $user_option, 'serial_no' => $serial_no]);

                } else return $response;

            }

          

            if($user_option == 'Approve') {  

                // daybook main as code and sub ac code

                $row = $this->db->query("SELECT * FROM daybook_master where daybook_code = '".$_POST['daybook_code']."'")->getRowArray();

                $db_main_ac_code = isset($row['main_ac_code']) ? $row['main_ac_code'] : '';

                $db_sub_ac_code  = isset($row['sub_ac_code']) ? $row['sub_ac_code'] : '';



                // generation of doc_no

                $voucher_date = isset($_POST['voucher_date'])?$_POST['voucher_date']:null;

                $voucher_date = date_conv($voucher_date) ; 

                $month_code = substr($voucher_date, 5, 2) ;

                $rv_doc_no = getLastDocNo($global_curr_finyear, $_POST['branch_code'], $_POST['daybook_code'], $month_code, 'C');

            

                // ledger header

                $lh_array = array('serial_no'             => 'NULL',

                                'branch_code'           => $_POST['branch_code'],

                                'fin_year'              => $global_curr_finyear,

                                'doc_type'              => 'RV',

                                'doc_date'              => $voucher_date,

                                'doc_no'                => $rv_doc_no,

                                'daybook_code'          => $_POST['daybook_code'],

                                'instrument_type'       => $_POST['instrument_type'],

                                'instrument_no'         => $_POST['instrument_no'],

                                'instrument_dt'         => date_conv($_POST['instrument_dt']),

                                'bank_name'             => $_POST['bank_name'],

                                'narration'             => 'RECEIVED FROM '.$_POST['associate_name'],

                                'payee_payer_type'      => $_POST['payee_payer_type'],

                                'payee_payer_code'      => $_POST['associate_code'],

                                'payee_payer_name'      => stripslashes($_POST['associate_name']),

                                'payment_type'          => $_POST['payment_type'],

                                'gross_amount'          => $_POST['gross_amount'],

                                'tax_code'              => $tax_code,

                                'tax_amount'            => $_POST['tax_amount'],

                                'net_amount'            => $_POST['net_amount'],

                                'status_code'           => 'C',

                                'ref_doc_serial_no'     => $serial_no,

                                'ref_doc_type'          => $_POST['trans_type'],

                                'paid_by'               => $global_userid,

                                'paid_on'               => $global_sysdate);

                $ledgerHeaderObj->insert($lh_array);

                $ref_ledger_serial_no = $this->db->insertID();

            

                // ledger detail

                $cnt = 0 ;

                for($i=1;$i<=$row_count;$i++) {

                $cnt+=1;

                $ld_array = array('ref_ledger_serial_no' => $ref_ledger_serial_no,

                                    'branch_code'          => $_POST['branch_code'],

                                    'main_ac_code'         => $_POST['main_ac_code'.$i],

                                    'sub_ac_code'          => $_POST['sub_ac_code'.$i],

                                    'client_code'          => $_POST['client_code'.$i],

                                    'matter_code'          => $_POST['matter_code'.$i],

                                    'initial_code'         => $_POST['intl_code'.$i],

                                    'narration'            => $_POST['narration'.$i],

                                    'gross_amount'         => $_POST['total_amount'.$i],

                                    'net_amount'           => $_POST['total_amount'.$i],

                                    'dr_cr_ind'            => 'C',

                                    'record_type'          => 'G',

                                    'ref_doc_serial_no'     => $serial_no,

                                    'ref_doc_type'          => $_POST['trans_type']);

                $ledgerDetailObj->insert($ld_array);

                }

            

                // cash/bank record

                $ld_array = array('ref_ledger_serial_no' => $ref_ledger_serial_no,

                                'branch_code'          => $_POST['branch_code'],

                                'main_ac_code'         => $db_main_ac_code,

                                'sub_ac_code'          => $db_sub_ac_code,

                                'narration'            => 'Received from '.$_POST['associate_name'],

                                'gross_amount'         => $_POST['net_amount'],

                                'net_amount'           => $_POST['net_amount'],

                                'dr_cr_ind'            => 'D',

                                'record_type'          => 'G',

                                'ref_doc_serial_no'    => $serial_no,

                                'ref_doc_type'         => $_POST['trans_type']);

                $ledgerDetailObj->insert($ld_array);



                // debit voucher detail 

                if($_POST['tax_amount']>0) {

                $cnt+=1;

                $ld_array = array('ref_ledger_serial_no' => $ref_ledger_serial_no,

                                    'branch_code'          => $_POST['branch_code'],

                                    'main_ac_code'         => $_POST['tax_account_code'],

                                    'sub_ac_code'          => $_POST['tax_sub_account_code'],

                                    'narration'            => 'TDS',

                                    'gross_amount'         => $_POST['tax_amount'],

                                    'net_amount'           => $_POST['tax_amount'],

                                    'dr_cr_ind'            => 'D',

                                    'record_type'          => 'G',

                                    'ref_doc_serial_no'    => $serial_no,

                                    'ref_doc_type'         => $_POST['trans_type']);

                $ledgerDetailObj->insert($ld_array);



                // insert into tds certificate table

                $tc_array = array('serial_no'            => NULL,

                                    'branch_code'          => $_POST['branch_code'],

                                    'pay_rcpt_ind'         => 'R',

                                    'ref_ledger_serial_no' => $ref_ledger_serial_no,

                                    'fin_year'             => $global_curr_finyear,

                                    'daybook_code'         => $_POST['daybook_code'],

                                    'doc_no'               => $rv_doc_no,

                                    'doc_date'             => $voucher_date,

                                    'instrument_no'        => $_POST['instrument_no'],

                                    'instrument_dt'        => date_conv($_POST['instrument_dt']),

                                    'bank_name'            => $_POST['bank_name'],

                                    'dr_cr_ind'            => 'C',

                                    'payee_payer_type'     => $_POST['payee_payer_type'],

                                    'payee_payer_code'     => $_POST['associate_code'],

                                    'payee_payer_name'     => stripslashes($_POST['associate_name']),

                                    'nature_of_service'    => '',

                                    'gross_amount'         => $_POST['gross_amount'],

                                    'tax_code'             => $tax_code,

                                    'tax_amount'           => $_POST['tax_amount'],

                                    'net_amount'           => $_POST['net_amount'],

                                    'tds_deposit_ind'      => 'N');

                $tdsCertObj->insert($tc_array);

                }

            

                // insert into bank recon table

                if($instrument_type == 'Q') {

                $br_array = array('serial_no'             => 'NULL',

                                    'ref_ledger_serial_no'  => $ref_ledger_serial_no,

                                    'fin_year'              => $global_curr_finyear,

                                    'branch_code'           => $_POST['branch_code'],

                                    'doc_type'              => 'RV',

                                    'doc_date'              => $voucher_date,

                                    'doc_no'                => $rv_doc_no,

                                    'daybook_code'          => $_POST['daybook_code'],

                                    'instrument_no'         => $_POST['instrument_no'],

                                    'instrument_dt'         => date_conv($_POST['instrument_dt']),

                                    'bank_name'             => $_POST['bank_name'],

                                    'narration'             => 'RECEIVED FROM '.$_POST['associate_name'],

                                    'payee_payer_type'      => $_POST['payee_payer_type'],

                                    'payee_payer_code'      => $_POST['associate_code'],

                                    'payee_payer_name'      => stripslashes($_POST['associate_name']),

                                    // 'payment_type'          => $_POST['payment_type'],

                                    'dr_cr_ind'             => 'C',

                                    'amount'                => $_POST['net_amount'],

                                    'status_code'           => 'A');

                $ins_6 = $bankReconObj->insert($br_array);

                }



                // update voucher header

                $h_array = array('status_code'           => 'C',

                                'ref_ledger_serial_no'  => $ref_ledger_serial_no,

                                'daybook_code'          => $_POST['daybook_code'],

                                'instrument_type'       => $_POST['instrument_type'],

                                'instrument_no'         => $_POST['instrument_no'],

                                'instrument_dt'         => date_conv($_POST['instrument_dt']),

                                'paid_by'               => $global_userid,

                                'paid_on'               => $global_sysdate);

                $voucherHeaderObj->update($h_array,"serial_no = '".$serial_no."'");



                //---- account balance updation

                $ledger_serial_no = $ref_ledger_serial_no ;

                $this->ledger_posting($ledger_serial_no);



                if($rv_doc_no) {

                    $message = 'Please note Final Voucher No : ' . $rv_doc_no ;

                    session()->setFlashdata('message', $message);

                    return redirect()->to(session()->last_selected_end_menu);

                }

            }	 

        }



        $clause = ($user_option == 'Add') ? "limit 1" : "";

        $dtl_qry = $this->db->query("Select * from voucher_detail where voucher_detail.ref_voucher_serial_no = '$serial_no' and dr_cr_ind='C' order by ref_voucher_serial_no,row_no ASC ".$clause)->getResultArray();

        $dtl_data_arr = [];



        foreach($dtl_qry as $key => $dtl_data) {

            $dtl_data_arr[$key]['main_ac_code'] = $main_ac_code = $dtl_data['main_ac_code'];

            $dtl_data_arr[$key]['sub_ac_code'] = $sub_ac_code = $dtl_data['sub_ac_code'];

            $dtl_data_arr[$key]['matter_code'] = $matter_code = $dtl_data['matter_code'];

            $dtl_data_arr[$key]['expense_code'] = $expense_code = $dtl_data['expense_code'];



            $dtl_data_arr[$key]['narration'] = $dtl_data['narration'];

            $dtl_data_arr[$key]['total_amount'] = $dtl_data['gross_amount'];

            

            // account description 

            $row = $this->db->query("select main_ac_desc,sub_ac_ind from account_master where main_ac_code = '$main_ac_code'")->getRowArray();

            $dtl_data_arr[$key]['ac_desc']    = isset($row['main_ac_desc']) ? $row['main_ac_desc'] : '';

            $dtl_data_arr[$key]['sub_ac_ind'] = isset($row['sub_ac_ind']) ? $row['sub_ac_ind'] : '';

            

            // matter description 

            $row = $this->db->query("select concat(matter_desc1,' ',matter_desc2) matter_name,client_code,initial_code from fileinfo_header where matter_code = '$matter_code'")->getRowArray();

            $dtl_data_arr[$key]['matter_name'] = isset($row['matter_name']) ? $row['matter_name'] : '';

            $dtl_data_arr[$key]['client_code'] = isset($row['client_code']) ? $row['client_code'] : '';

            $dtl_data_arr[$key]['intl_code']   = isset($row['initial_code']) ? $row['initial_code'] : '';



            // expense description 

            $row = $this->db->query("select expense_desc from expense_master where expense_code  = '$expense_code'")->getRowArray();

            $dtl_data_arr[$key]['expense_desc'] = isset($row['expense_desc']) ? $row['expense_desc'] : '';



            // sub account description 

            $row = $this->db->query("select sub_ac_desc from sub_account_master where main_ac_code = '$main_ac_code' and sub_ac_code='$sub_ac_code'")->getRowArray();

            $dtl_data_arr[$key]['sub_ac_desc'] = isset($row['sub_ac_desc']) ? $row['sub_ac_desc'] : '';

        }



        $params = [

            'serial_no' => $serial_no,

            'link_jv_serial_no' => isset($link_jv_serial_no) ? $link_jv_serial_no : '',

            'status_code' => $status_code,

            'status_desc' => $status_desc,

            'colour_s' => $colour_s,

            'entry_date' => $entry_date,

            'payee_payer_type' => $payee_payer_type,

            'associate_name' => $associate_name,

            'associate_code' => $associate_code,

            'payment_type' => $payment_type,

            'remarks' => $remarks,

            // 'dtl_data_sql' => $dtl_data_sql,

            'billable_ind_desc' => isset($billable_ind_desc) ? $billable_ind_desc : '',

            // 'daybook_qry' => $daybook_qry,

            'daybook_desc' => $daybook_desc,

            'daybook_type' => $daybook_type,

            'global_sysdate' => $global_sysdate,

            'global_curr_finyr_fymddate' => $global_curr_finyr_fymddate,

            'global_curr_finyr_lymddate' => $global_curr_finyr_lymddate,

            'daybook_code' => $daybook_code,

            'instrument_type' => $instrument_type,

            'instrument_no' => isset($instrument_no) ? $instrument_no : '',

            'instrument_dt' => isset($instrument_dt) ? $instrument_dt : '',

            'gross_amount' => isset($gross_amount) ? $gross_amount : '',

            'total_basic_amount' => isset($total_basic_amount) ? $total_basic_amount : '',

            'total_newtax_amount' => isset($total_newtax_amount) ? $total_newtax_amount : '',

            'total_newcess_amount' => isset($total_newcess_amount) ? $total_newcess_amount : '',

            'total_newhecess_amount' => isset($total_newhecess_amount) ? $total_newhecess_amount : '',

            'tax_code' => isset($tax_code) ? $tax_code : '',

            'tax_account_code' => isset($tax_account_code) ? $tax_account_code : '',

            'tax_sub_account_code' => isset($tax_sub_account_code) ? $tax_sub_account_code : '',

            'tax_percent' => isset($tax_percent) ? $tax_percent : '',

            'tax_amount' => isset($tax_amount) ? $tax_amount : '',

            'net_amount' => isset($net_amount) ? $net_amount : '',

            'row_count' => isset($row_count['totalRow']) ? $row_count['totalRow'] : $row_count,

            'trans_type' => isset($trans_type) ? $trans_type : '',

            'global_curr_finyear' => isset($global_curr_finyear) ? $global_curr_finyear : '',

            'tax_account_desc' => isset($tax_account_desc) ? $tax_account_desc : '',

            // 'pan_no' => $pan_no,

            // 'prepared_by' => $prepared_by,

            // 'prepared_on' => $prepared_on,

            // 'paid_by' => $paid_by,

            // 'paid_on' => $paid_on,

            'global_userid' => $global_userid,

            // 'instrument_no ' => $instrument_no ,

            // 'instrument_dt' => $instrument_dt,

            // 'final_voucher_date' => $final_voucher_date,

            'bank_name' => isset($bank_name) ? $bank_name : '',

        ];



        return view("pages/Finance/Vouchers/receipt_others", compact('params', 'data', 'tag_permissions', 'user_option', 'status_code', 'dtl_data_arr', 'selemode', 'displayId'));

    }



    public function receipt_client() { 

        $global_userid = $user_id = session()->userId;

        $data = branches($user_id); $global_curr_finyear = session()->financialYear;

        $global_dmydate = date('d-m-Y'); $global_sysdate = date_conv($global_dmydate); 

        $data['requested_url'] = session()->requested_end_menu_url;

        $displayId = ['asso_code' => 4141, 'daybook_code' => 4114, 'matter_code' => 4202, 'bill_code' => 4526];

        

        $global_curr_finyr_fymddate = substr($global_curr_finyear, 0, 4).'-04-01';

        $global_curr_finyr_lymddate = substr($global_curr_finyear, 5, 4).'-03-31';



        $selemode   = isset($_REQUEST['selemode']) ? $_REQUEST['selemode'] : null;

        $user_option = isset($_REQUEST['user_option'])?$_REQUEST['user_option']:null;

        $serial_no   = isset($_REQUEST['serial_no'])?$_REQUEST['serial_no']:null;



        if($selemode != 'Y') {

            if ($user_option == 'Add' )    { $readonly = '' ;           $disview = ''; }

            if ($user_option == 'Edit')    { $readonly = '' ;           $disview = ''; }

            if ($user_option == 'View')    { $readonly = 'readonly' ;   $disview = 'disabled'; }

            if ($user_option == 'Delete')  { $readonly = 'readonly' ;   $disview = ''; }

            if ($user_option == 'Print')   { $readonly = 'readonly' ;   $disview = ''; }

            if ($user_option == 'Approve') { $readonly = 'readonly' ;   $disview = ''; }

            $tag_permissions = $readonly . ' ' . $disview;

            

            $voucherHeaderObj = $this->db->table("voucher_header"); // object : voucher header

            $voucherDetailObj = $this->db->table("voucher_detail"); // object : voucher detail



            // TDS Account Code

            $row = $this->db->query("select key_code,key_desc,key_value from control_keycodes where key_code = '014'")->getRowArray();

            $tax_account_code = $row['key_value'];

            $tax_sub_account_code = ''; 



            // Service Tax Account Code

            $row = $this->db->query("select key_code,key_desc,key_value from control_keycodes where key_code = '028'")->getRowArray();

            $service_tax_account_code = $row['key_value'];



            if($user_option == 'Add') {

              $entry_date = date('d-m-Y'); $payee_payer_type = 'C'; $associate_code = ''; $associate_name = ''; $received_from = ''; $payment_type = 'N'; $instrument_type = 'C';

              $remarks = ''; $daybook_type = ''; $daybook_code = ''; $daybook_desc = ''; $status_code = 'A'; $status_desc = 'Active'; $row_count = 1 ;

            } else {

               $hdr_data = $this->db->query("select * from voucher_header where voucher_header.serial_no = '$serial_no'")->getRowArray();

               $matter_code           = isset($hdr_data['matter_code']) ? $hdr_data['matter_code'] : '';

               $branch_code           = $hdr_data['branch_code'];

               $entry_date            = date_conv($hdr_data['entry_date']);

               $trans_type            = $hdr_data['trans_type'];

               $payee_payer_type      = $hdr_data['payee_payer_type'];

               $associate_code        = $hdr_data['payee_payer_code'];

               $associate_name        = $hdr_data['payee_payer_name'];

               $received_from         = $hdr_data['received_from'];

               $payment_type          = $hdr_data['payment_type'];

               $daybook_code          = $hdr_data['daybook_code'];

               $instrument_type       = $hdr_data['instrument_type'];

               $instrument_no         = $hdr_data['instrument_no'];

               $instrument_dt         = date_conv($hdr_data['instrument_dt']);

               $bank_name             = $hdr_data['bank_name'];

               $gross_amount          = $hdr_data['gross_amount'];

               $tax_amount            = $hdr_data['tax_amount'];

               $net_amount            = $hdr_data['net_amount'];

               $remarks               = $hdr_data['remarks'];

               $status_code           = $hdr_data['status_code'];

               $ref_ledger_serial_no  = $hdr_data['ref_ledger_serial_no'];

               $ref_jv_serial_no      = $hdr_data['ref_jv_serial_no'];

               $ref_advance_serial_no = $hdr_data['ref_advance_serial_no'];

               $link_jv_serial_no     = $hdr_data['link_jv_serial_no'];

               $prepared_by           = $hdr_data['prepared_by'];

               $prepared_on           = date_conv($hdr_data['prepared_on']);

               $passed_by             = $hdr_data['passed_by'];

               $passed_on             = date_conv($hdr_data['passed_on']);

               $paid_by               = $hdr_data['paid_by'];

               $paid_on               = date_conv($hdr_data['paid_on']);

               $service_tax_amount    = $hdr_data['service_tax_amount'];

          

               $dtl_row = $this->db->query("SELECT count(ref_voucher_serial_no) as totalRow from voucher_detail where voucher_detail.ref_voucher_serial_no = '$serial_no' and dr_cr_ind='C' and main_ac_code<>'1424'")->getRowArray()['totalRow'];

               $row_count = $dtl_row ;

          

              // status description

              $row = $this->db->query("SELECT status_desc FROM status_master where table_name = 'voucher_header' and status_code = '$status_code'")->getRowArray();

              $status_desc = $row['status_desc'];

          

              // daybook type and description

              $row = $this->db->query("SELECT * FROM daybook_master where daybook_code = '$daybook_code'")->getRowArray();

              $daybook_type = isset($row['daybook_type']) ? $row['daybook_type'] : '';

              $daybook_desc = isset($row['daybook_desc']) ? $row['daybook_desc'] : '';

            }

            if($status_code == 'A') { $colour_s = "#0000FF"; } else { $colour_s = "#FF0000";} 



            if(($status_code != 'A' && $user_option == 'Edit') || ($status_code != 'A' && $user_option == 'Delete') || ($status_code != 'A' && $user_option == 'Approve')) {

                session()->setFlashdata('message', 'This operation is not allowed right now [See the Status]!!');

                return redirect()->to(session()->last_selected_end_menu);

            }

            $selemode = 'Y';

        } else {

            $ref_voucher_serial_no = $serial_no;

            $row_count = isset($_POST['row_count'])?$_POST['row_count']:null;



            if($_POST['tax_amount'] > 0) {$tax_code = $_POST['tax_code'];} else {$tax_code = 'NULL';}



            $voucherHeaderObj = $this->db->table("voucher_header"); // object : voucher header

            $voucherDetailObj = $this->db->table("voucher_detail"); // object : voucher detail

            $ledgerHeaderObj = $this->db->table("ledger_trans_hdr"); // object : ledger header

            $ledgerDetailObj = $this->db->table("ledger_trans_dtl"); // object : ledger detail

            $billRealisationHeaderObj = $this->db->table("bill_realisation_header"); // object : bill realisation header

            $billRealisationDetailObj = $this->db->table("bill_realisation_detail"); // object : bill realisation detail

            $advanceDetailObj = $this->db->table("advance_details"); // object : advance detail

            $tdsCertObj = $this->db->table("tds_certificate"); // object : tds certificate

            $billDetailObj = $this->db->table("bill_detail"); // object : bill detail

            $bankReconObj = $this->db->table("bank_recon"); // object : bank recon



            $post_array = $_POST;



            //------------------------------------ FOR INSERT/UPDATE/DELETE    : USING PEAR DB ------------------------------------// 

            if($user_option == 'Add') {  

                // new record insertion in: voucher header

                $h_array = array('serial_no'            => 'NULL',

                                'branch_code'           => $_POST['branch_code'],

                                'entry_date'            => date_conv($_POST['entry_date']),

                                'trans_type'            => 'RC',

                                'voucher_type'          => 'RV',

                                'payee_payer_type'      => $_POST['payee_payer_type'],

                                'payee_payer_code'      => $_POST['associate_code'],

                                'payee_payer_name'      => stripslashes($_POST['associate_name']),

                                'received_from'         => stripslashes($_POST['received_from']),

                                'payment_type'          => $_POST['payment_type'],

                                'instrument_type'       => $_POST['instrument_type'],

                                'instrument_no'         => $_POST['instrument_no'],

                                'instrument_dt'         => date_conv($_POST['instrument_dt']),

                                'bank_name'             => stripslashes($_POST['bank_name']),

                                'gross_amount'          => $_POST['gross_amount'],

                                'service_tax_amount'    => $_POST['service_tax_amount'],

                                'tax_code'              => 'NULL',

                                'tax_amount'            => $_POST['tax_amount'],

                                'net_amount'            => $_POST['net_amount'],

                                'remarks'               => stripslashes($_POST['remarks']),

                                'status_code'           => 'A',

                                'prepared_by'           => $global_userid,

                                'prepared_on'           => date_conv(date('d-m-Y')));

                $voucherHeaderObj->insert($h_array);

                $ref_voucher_serial_no = $this->db->insertID();

            }



            if($user_option == 'Edit' || $user_option == 'Delete') {  

                // updation of bill detail's booked column with old values

                for($i=1; $i <= $row_count; $i++) {

                    $old_ref_bill_year = $_POST['old_ref_bill_year'.$i] ;

                    $old_ref_bill_no = $_POST['old_ref_bill_no'.$i] ;



                    if(!empty($old_ref_bill_year) && !empty($old_ref_bill_no)) {

                        $old_amount_inp = $_POST['old_realise_amount_inpocket'.$i]*1;

                        $old_amount_out = $_POST['old_realise_amount_outpocket'.$i]*1;

                        $old_amount_cns = $_POST['old_realise_amount_counsel'.$i]*1;

                        $old_amount_stx = $_POST['old_realise_amount_service_tax'.$i]*1;



                        $updt_stmt   = "update bill_detail 

                                        set booked_amount_inpocket    = ifnull(booked_amount_inpocket,0)    - $old_amount_inp,

                                            booked_amount_outpocket   = ifnull(booked_amount_outpocket,0)   - $old_amount_out,

                                            booked_amount_counsel     = ifnull(booked_amount_counsel,0)     - $old_amount_cns,

                                            booked_amount_service_tax = ifnull(booked_amount_service_tax,0) - $old_amount_stx

                                        where fin_year = '".$old_ref_bill_year."' and bill_no = '".$old_ref_bill_no."'";

                        $this->db->query($updt_stmt);

                    }

                }

                // end of updation of bill detail's booked column with old values



                if($user_option == 'Edit') {  

                    // voucher header

                    $h_array = array('branch_code'           => $_POST['branch_code'],

                                'entry_date'            => date_conv($_POST['entry_date']),

                                'trans_type'            => 'RC',

                                'voucher_type'          => 'RV',

                                'payee_payer_type'      => $_POST['payee_payer_type'],

                                'payee_payer_code'      => $_POST['associate_code'],

                                'payee_payer_name'      => stripslashes($_POST['associate_name']),

                                'received_from'         => stripslashes($_POST['received_from']),

                                'payment_type'          => $_POST['payment_type'],

                                'instrument_type'       => $_POST['instrument_type'],

                                'instrument_no'         => $_POST['instrument_no'],

                                'instrument_dt'         => date_conv($_POST['instrument_dt']),

                                'bank_name'             => stripslashes($_POST['bank_name']),

                                'gross_amount'          => $_POST['gross_amount'],

                                'service_tax_amount'    => $_POST['service_tax_amount'],

                                'tax_code'              => 'NULL',

                                'tax_amount'            => $_POST['tax_amount'],

                                'net_amount'            => $_POST['net_amount'],

                                'remarks'               => stripslashes($_POST['remarks']),

                                'status_code'           => 'A');

                    $voucherHeaderObj->update($h_array, "serial_no = '".$serial_no."'");



                    // voucher detail

                    $voucherDetailObj->delete("ref_voucher_serial_no = '".$ref_voucher_serial_no."'");

                }

            }



            // insert records into details

            if($user_option == 'Add' || $user_option == 'Edit') {

                // voucher detail

                $cnt = 0 ;

                for($i=1; $i <= $row_count; $i++) {

                    if($_POST['voucher_ok_ind'.$i]=='Y' && !empty($_POST['ref_bill_year'.$i]) && !empty($_POST['matter_code'.$i]) && $_POST['total_amount'.$i]>0) {

                        // main_ac_code, sub_ac_code selection

                        $narration = "Advance from Client";

                        if($_POST['ref_bill_year'.$i] == 'ON AC') {

                            $row = $this->db->query("select key_code,key_desc,key_value from control_keycodes where key_code = '022'")->getRowArray();

                            $sub_ac_code = $_POST['sub_ac_code'.$i];



                        } else {

                            $row = $this->db->query("select key_desc,key_value from control_keycodes where key_code = '008'")->getRowArray();

                            $sub_ac_code  = '';



                            if(!empty($_POST['ref_bill_no'.$i])) {

                                $narration = "Bill No. ".$_POST['ref_bill_no'.$i] . " of " . $_POST['ref_bill_year'.$i];

                            }

                        }

                        $main_ac_code = $row['key_value'];

                        // end of main_ac_code,sub_ac_code selection



                        $cnt+=1;

                        $array = array('ref_voucher_serial_no'      => $ref_voucher_serial_no,

                                    'row_no'                     => $cnt,

                                    'main_ac_code'               => $main_ac_code,

                                    'sub_ac_code'                => $sub_ac_code,

                                    'ref_bill_year'              => $_POST['ref_bill_year'.$i],

                                    'ref_bill_no'                => $_POST['ref_bill_no'.$i],

                                    'client_code'                => $_POST['client_code'.$i],

                                    'matter_code'                => $_POST['matter_code'.$i],

                                    'initial_code'               => $_POST['initial_code'.$i],

                                    'narration'                  => $narration,

                                    'realise_amount_inpocket'    => $_POST['realise_amount_inpocket'.$i],

                                    'realise_amount_outpocket'   => $_POST['realise_amount_outpocket'.$i],

                                    'realise_amount_counsel'     => $_POST['realise_amount_counsel'.$i],

                                    'realise_amount_service_tax' => $_POST['realise_amount_service_tax'.$i],

                                    'gross_amount'               => $_POST['total_amount'.$i],

                                    'net_amount'                 => $_POST['total_amount'.$i],

                                    'dr_cr_ind'                  => 'C',

                                    'deficit_amount_inpocket'    => $_POST['deficit_amount_inpocket'.$i],

                                    'deficit_amount_outpocket'   => $_POST['deficit_amount_outpocket'.$i],

                                    'deficit_amount_counsel'     => $_POST['deficit_amount_counsel'.$i],

                                    'deficit_amount_service_tax' => $_POST['deficit_amount_service_tax'.$i],

                                    'part_full_ind'              => $_POST['part_full_ind'.$i]);

                        $voucherDetailObj->insert($array);



                        // updation of bill detail's booked column

                        if(!empty($_POST['ref_bill_no'.$i]) && $_POST['ref_bill_year'.$i] != 'ON AC' && $_POST['ref_bill_year'.$i] != 'ADVEXP' && $_POST['ref_bill_year'.$i] != 'UNKNOWN') {

                            $r_inp_amt  = $_POST['realise_amount_inpocket'.$i]*1;

                            $r_out_amt  = $_POST['realise_amount_outpocket'.$i]*1;

                            $r_cns_amt  = $_POST['realise_amount_counsel'.$i]*1;

                            $r_stx_amt  = $_POST['realise_amount_service_tax'.$i]*1;



                            $updt_stmt   = "update bill_detail set booked_amount_inpocket = ifnull(booked_amount_inpocket,0) + $r_inp_amt,

                                                booked_amount_outpocket = ifnull(booked_amount_outpocket,0) + $r_out_amt,

                                                booked_amount_counsel = ifnull(booked_amount_counsel,0) + $r_cns_amt,

                                                booked_amount_service_tax = ifnull(booked_amount_service_tax,0) + $r_stx_amt

                                                where fin_year = '".$_POST['ref_bill_year'.$i]."' and bill_no = '".$_POST['ref_bill_no'.$i]."'";

                            $this->db->query($updt_stmt);

                        }

                        // end of updation of bill detail's booked column

                    }

                }



                // debit voucher detail 

                if($_POST['tax_amount'] > 0) {

                    $cnt+=1;

                    $array = array('ref_voucher_serial_no'    => $ref_voucher_serial_no,

                                    'row_no'                   => $cnt,

                                    'main_ac_code'             => $_POST['tax_account_code'],

                                    'sub_ac_code'              => $_POST['tax_sub_account_code'],

                                    'narration'                => 'TDS',

                                    'gross_amount'             => $_POST['tax_amount'],

                                    'net_amount'               => $_POST['tax_amount'],

                                    'dr_cr_ind'                => 'D');

                    $voucherDetailObj->insert($array);

                }



                // credit voucher detail 

                if($_POST['service_tax_amount'] > 0) {

                    $cnt+=1;

                    $array = array('ref_voucher_serial_no'    => $ref_voucher_serial_no,

                                    'row_no'                   => $cnt,

                                    'main_ac_code'             => $_POST['service_tax_account_code'],

                                    'sub_ac_code'              => '',

                                    'narration'                => 'SERVICE TAX',

                                    'gross_amount'             => $_POST['service_tax_amount'],

                                    'net_amount'               => $_POST['service_tax_amount'],

                                    'dr_cr_ind'                => 'C');

                    $voucherDetailObj->insert($array);

                }



                if($user_option == 'Add') { 

                    session()->setFlashdata('message', 'Please Note Generated Serial No : ' . $ref_voucher_serial_no);

                    return redirect()->to(session()->last_selected_end_menu);

                } else {

                    session()->setFlashdata('message', "Record with Serial NO: [".$serial_no."] Updated Sucessfully !!");

                    return redirect()->to(session()->last_selected_end_menu);

                }

            }



            if($user_option == 'Delete') {  

                // voucher header

                $h_array = array('status_code' => 'X');

                $v_header = $voucherHeaderObj->update($h_array, "serial_no = '".$serial_no."'");



                if($v_header) {

                    session()->setFlashdata('message', "Record with Serial NO: [".$serial_no."] Deleted Sucessfully !!");

                    return redirect()->to(session()->last_selected_end_menu);

                }

            }



            if($user_option == 'Print') {  

                // voucher header

                $h_array = array('status_code' => 'A');

                $v_header = $voucherHeaderObj->update($h_array,"serial_no = '".$serial_no."'");

                $print = true; $response = $this->common_print_expenses($serial_no); // Surajit: window.open('rep_fin_voucher_receipts_made_client.php?serial_no=$serial_no');



                if(!is_object($response)) {

                    return view("pages/Finance/Vouchers/payment", ['print' => $print, "data" => $data, "displayId" => $displayId, 'params' => $response['params'], 'user_option' => $user_option, 'serial_no' => $serial_no]);

                } else return $response;

            }



            if($user_option == 'Approve') {  

                // daybook main as code and sub ac code

                $row = $this->db->query("SELECT * FROM daybook_master where daybook_code = '".$_POST['daybook_code']."'")->getRowArray();

                $db_main_ac_code = isset($row['main_ac_code']) ? $row['main_ac_code'] : '';

                $db_sub_ac_code  = isset($row['sub_ac_code']) ? $row['sub_ac_code'] : '';



                // generation of doc_no

                $voucher_date = isset($_POST['voucher_date'])?$_POST['voucher_date']:null;

                $voucher_date = date_conv($voucher_date) ; 

                $month_code = substr($voucher_date, 5, 2) ;

                $rv_doc_no = getLastDocNo($global_curr_finyear, $_POST['branch_code'], $_POST['daybook_code'], $month_code, 'C');



                // ledger header

                $lh_array = array('serial_no'             => 'NULL',

                                'branch_code'           => $_POST['branch_code'],

                                'fin_year'              => $global_curr_finyear,

                                'doc_type'              => 'RV',

                                'doc_date'              => $voucher_date,

                                'doc_no'                => $rv_doc_no,

                                'daybook_code'          => $_POST['daybook_code'],

                                'instrument_type'       => $_POST['instrument_type'],

                                'instrument_no'         => $_POST['instrument_no'],

                                'instrument_dt'         => date_conv($_POST['instrument_dt']),

                                'bank_name'             => $_POST['bank_name'],

                                'narration'             => 'RECEIVED FROM '.stripslashes($_POST['associate_name']),

                                'payee_payer_type'      => $_POST['payee_payer_type'],

                                'payee_payer_code'      => $_POST['associate_code'],

                                'payee_payer_name'      => stripslashes($_POST['associate_name']),

                                'received_from'         => stripslashes($_POST['received_from']),

                                'payment_type'          => $_POST['payment_type'],

                                'gross_amount'          => $_POST['gross_amount'],

                                'service_tax_amount'    => $_POST['service_tax_amount'],

                                'tax_code'              => 'NULL',

                                'tax_amount'            => $_POST['tax_amount'],

                                'net_amount'            => $_POST['net_amount'],

                                'status_code'           => 'C',

                                'ref_doc_serial_no'     => $serial_no,

                                'ref_doc_type'          => $_POST['trans_type'],

                                'prepared_by'           => $global_userid,

                                'prepared_on'           => $global_sysdate,

                                'approved_by'           => $global_userid,

                                'approved_on'           => $global_sysdate);

                $ledgerHeaderObj->insert($lh_array);

                $ref_ledger_serial_no = $this->db->insertID();



                // bill realisation header insertion

                $bh_array = array('serial_no'             => 'NULL',

                                'branch_code'           => $_POST['branch_code'],

                                'fin_year'              => $global_curr_finyear,

                                'ref_ledger_serial_no'  => $ref_ledger_serial_no,

                                'client_code'           => $_POST['associate_code'],

                                'realised_amount'       => $_POST['gross_amount'],

                                'tds_amount'            => $_POST['tax_amount'],

                                'service_tax_amount'    => $_POST['service_tax_amount'],

                                'received_amount'       => $_POST['net_amount']);

                $billRealisationHeaderObj->insert($bh_array);

                $ref_realisation_serial_no = $this->db->insertID();

                // end of bill realisation header insertion



                // ledger detail

                $cnt = 0 ;

                for($i=1; $i <= $row_count; $i++) {

                    $cnt+=1;

                    $ld_array = array('ref_ledger_serial_no' => $ref_ledger_serial_no,

                                        'branch_code'          => $_POST['branch_code'],

                                        'main_ac_code'         => $_POST['main_ac_code'.$i],

                                        'sub_ac_code'          => $_POST['sub_ac_code'.$i],

                                        'client_code'          => $_POST['client_code'.$i],

                                        'matter_code'          => $_POST['matter_code'.$i],

                                        'narration'            => stripslashes($_POST['narration'.$i]),

                                        'gross_amount'         => $_POST['total_amount'.$i],

                                        'net_amount'           => $_POST['total_amount'.$i],

                                        'dr_cr_ind'            => 'C',

                                        'record_type'          => 'G',

                                        'ref_doc_serial_no'    => $serial_no,

                                        'ref_doc_type'         => $_POST['trans_type']);

                    $ledgerDetailObj->insert($ld_array);



                    // insert into advance detail table

                    $ref_advance_serial_no = NULL;

                    if($_POST['ref_bill_year'.$i] == 'ON AC') {

                        $adv_array = array('serial_no'             => 'NULL',

                                        'branch_code'           => $_POST['branch_code'],

                                        'fin_year'              => $global_curr_finyear,

                                        'ref_ledger_serial_no'  => $ref_ledger_serial_no,

                                        'advance_type'          => 'R',

                                        'payee_payer_type'      => $_POST['payee_payer_type'],

                                        'payee_payer_code'      => $_POST['associate_code'],

                                        'payee_payer_name'      => stripslashes($_POST['associate_name']),

                                        'matter_code'           => $_POST['matter_code'.$i],

                                        'client_code'           => $_POST['client_code'.$i],

                                        'instrument_type'       => $_POST['instrument_type'],

                                        'instrument_no'         => $_POST['instrument_no'],

                                        'instrument_dt'         => date_conv($_POST['instrument_dt']),

                                        'gross_amount'          => $_POST['total_amount'.$i],

                                        'net_amount'            => $_POST['total_amount'.$i],

                                        'status_code'           => 'A');

                        $advanceDetailObj->insert($adv_array);

                        $ref_advance_serial_no = $this->db->insertID();

                    }

                    // end of advance record



                    // bill realisation detail insertion

                    $sele_ref_bill_serial_no_stmt = "select serial_no from bill_detail where fin_year='".$_POST['ref_bill_year'.$i]."' and bill_no='".$_POST['ref_bill_no'.$i]."'";

                    $sele_ref_bill_serial_no_qry  = $this->db->query($sele_ref_bill_serial_no_stmt)->getRowArray();

                    $ref_bill_serial_no = isset($sele_ref_bill_serial_no_qry['serial_no']) ? $sele_ref_bill_serial_no_qry['serial_no'] : '';

                    $bd_array = array('ref_realisation_serial_no'  => $ref_realisation_serial_no,

                                        'row_no'                     => $cnt,

                                        'branch_code'                => $_POST['branch_code'],

                                        'ref_bill_serial_no'         => $ref_bill_serial_no,

                                        'ref_bill_year'              => $_POST['ref_bill_year'.$i],

                                        'ref_bill_no'                => $_POST['ref_bill_no'.$i],

                                        'client_code'                => $_POST['client_code'.$i],

                                        'matter_code'                => $_POST['matter_code'.$i],

                                        'initial_code'               => $_POST['initial_code'.$i],

                                        'realise_amount_inpocket'    => $_POST['realise_amount_inpocket'.$i],

                                        'realise_amount_outpocket'   => $_POST['realise_amount_outpocket'.$i],

                                        'realise_amount_counsel'     => $_POST['realise_amount_counsel'.$i],

                                        'realise_amount_service_tax' => $_POST['realise_amount_service_tax'.$i],

                                        'realised_amount'            => $_POST['total_amount'.$i],

                                        'deficit_amount_inpocket'    => $_POST['deficit_amount_inpocket'.$i],

                                        'deficit_amount_outpocket'   => $_POST['deficit_amount_outpocket'.$i],

                                        'deficit_amount_counsel'     => $_POST['deficit_amount_counsel'.$i],

                                        'deficit_amount_service_tax' => isset($_POST['deficit_amount_serviec_tax'.$i]) ? $_POST['deficit_amount_serviec_tax'.$i] : '',

                                        'part_full_ind'              => $_POST['part_full_ind'.$i],

                                        'ref_advance_serial_no'      => $ref_advance_serial_no);

                    $billRealisationDetailObj->insert($bd_array);

                    // end of bill realisation detail insertion



                    // bill_detail updation

                    if(!empty($_POST['ref_bill_no'.$i]) && $_POST['ref_bill_year'.$i] != 'ON AC' && $_POST['ref_bill_year'.$i] != 'ADVEXP' && $_POST['ref_bill_year'.$i] != 'UNKNOWN') {

                        $p_f_ind    = $_POST['part_full_ind'.$i];

                        $r_inp_amt  = $_POST['realise_amount_inpocket'.$i]*1;

                        $r_out_amt  = $_POST['realise_amount_outpocket'.$i]*1;

                        $r_cns_amt  = $_POST['realise_amount_counsel'.$i]*1;

                        $r_stx_amt  = $_POST['realise_amount_service_tax'.$i]*1;

                        $d_inp_amt  = $_POST['deficit_amount_inpocket'.$i]*1;

                        $d_out_amt  = $_POST['deficit_amount_outpocket'.$i]*1;

                        $d_cns_amt  = $_POST['deficit_amount_counsel'.$i]*1;

                        $d_stx_amt  = $_POST['deficit_amount_service_tax'.$i]*1;



                        $updt_stmt   = "update bill_detail set part_full_ind = '$p_f_ind',

                                            booked_amount_inpocket     = ifnull(booked_amount_inpocket,0)    - $r_inp_amt,

                                            booked_amount_outpocket    = ifnull(booked_amount_outpocket,0)   - $r_out_amt,

                                            booked_amount_counsel      = ifnull(booked_amount_counsel,0)     - $r_cns_amt,

                                            booked_amount_service_tax  = ifnull(booked_amount_service_tax,0) - $r_stx_amt,

                                            realise_amount_inpocket    = ifnull(realise_amount_inpocket,0)   + $r_inp_amt,

                                            realise_amount_outpocket   = ifnull(realise_amount_outpocket,0)  + $r_out_amt,

                                            realise_amount_counsel     = ifnull(realise_amount_counsel,0)    + $r_cns_amt,

                                            realise_amount_service_tax = ifnull(realise_amount_service_tax,0)+ $r_stx_amt,

                                            deficit_amount_inpocket    = ifnull(deficit_amount_inpocket,0)   + $d_inp_amt,

                                            deficit_amount_outpocket   = ifnull(deficit_amount_outpocket,0)  + $d_out_amt,

                                            deficit_amount_counsel     = ifnull(deficit_amount_counsel,0)    + $d_cns_amt,

                                            deficit_amount_service_tax = ifnull(deficit_amount_service_tax,0)+ $d_stx_amt

                                        where fin_year = '".$_POST['ref_bill_year'.$i]."' and bill_no = '".$_POST['ref_bill_no'.$i]."'";

                        $this->db->query($updt_stmt);

                    }

                    // end of bill_detail updation

                }

                

                // cash/bank record

                $ld_array = array('ref_ledger_serial_no' => $ref_ledger_serial_no,

                                'branch_code'          => $_POST['branch_code'],

                                'main_ac_code'         => $db_main_ac_code,

                                'sub_ac_code'          => $db_sub_ac_code,

                                'narration'            => 'RECEIVED FROM '.stripslashes($_POST['associate_name']),

                                'gross_amount'         => $_POST['net_amount'],

                                'net_amount'           => $_POST['net_amount'],

                                'dr_cr_ind'            => 'D',

                                'record_type'          => 'G',

                                'ref_doc_serial_no'    => $serial_no,

                                'ref_doc_type'         => $_POST['trans_type']);

                $ledgerDetailObj->insert($ld_array);



                // debit voucher detail 

                if($_POST['tax_amount'] > 0) {

                    $cnt+=1;

                    $ld_array = array('ref_ledger_serial_no' => $ref_ledger_serial_no,

                                        'branch_code'          => $_POST['branch_code'],

                                        'main_ac_code'         => $_POST['tax_account_code'],

                                        'sub_ac_code'          => $_POST['tax_sub_account_code'],

                                        'narration'            => 'TDS',

                                        'gross_amount'         => $_POST['tax_amount'],

                                        'net_amount'           => $_POST['tax_amount'],

                                        'dr_cr_ind'            => 'D',

                                        'record_type'          => 'G',

                                        'ref_doc_serial_no'    => $serial_no,

                                        'ref_doc_type'         => $_POST['trans_type']);

                    $ledgerDetailObj->insert($ld_array);



                    // insert into tds certificate table

                    $tc_array = array('serial_no'            => NULL,

                                        'branch_code'          => $_POST['branch_code'],

                                        'pay_rcpt_ind'         => 'R',

                                        'ref_ledger_serial_no' => $ref_ledger_serial_no,

                                        'fin_year'             => $global_curr_finyear,

                                        'daybook_code'         => $_POST['daybook_code'],

                                        'doc_no'               => $rv_doc_no,

                                        'doc_date'             => $voucher_date,

                                        'instrument_no'        => $_POST['instrument_no'],

                                        'instrument_dt'        => date_conv($_POST['instrument_dt']),

                                        'bank_name'            => $_POST['bank_name'],

                                        'dr_cr_ind'            => 'C',

                                        'payee_payer_type'     => $_POST['payee_payer_type'],

                                        'payee_payer_code'     => $_POST['associate_code'],

                                        'payee_payer_name'     => stripslashes($_POST['associate_name']),

                                        'nature_of_service'    => '',

                                        'gross_amount'         => $_POST['gross_amount'],

                                        'tax_code'             => $tax_code,

                                        'tax_amount'           => $_POST['tax_amount'],

                                        'net_amount'           => $_POST['net_amount'],

                                        'tds_deposit_ind'      => 'N');

                    $tdsCertObj->insert($tc_array);

                }

                

                // insert into bank recon table

                if($_POST['instrument_type'] == 'Q' || $_POST['instrument_type'] == 'D') {

                    $br_array = array('serial_no'             => 'NULL',

                                        'ref_ledger_serial_no'  => $ref_ledger_serial_no,

                                        'fin_year'              => $global_curr_finyear,

                                        'branch_code'           => $_POST['branch_code'],

                                        'doc_type'              => 'RV',

                                        'doc_date'              => $voucher_date,

                                        'doc_no'                => $rv_doc_no,

                                        'daybook_code'          => $_POST['daybook_code'],

                                        'instrument_no'         => $_POST['instrument_no'],

                                        'instrument_dt'         => date_conv($_POST['instrument_dt']),

                                        'bank_name'             => $_POST['bank_name'],

                                        'narration'             => 'RECEIVED FROM '.stripslashes($_POST['associate_name']),

                                        'payee_payer_type'      => $_POST['payee_payer_type'],

                                        'payee_payer_code'      => $_POST['associate_code'],

                                        'payee_payer_name'      => stripslashes($_POST['associate_name']),

                                        'payment_type'          => $_POST['payment_type'],

                                        'dr_cr_ind'             => 'C',

                                        'amount'                => $_POST['net_amount'],

                                        'status_code'           => 'A');

                    $bankReconObj->insert($br_array);

                }



                // debit voucher detail 

                if($_POST['service_tax_amount'] > 0) {

                    $cnt+=1;

                    $ld_array = array('ref_ledger_serial_no' => $ref_ledger_serial_no,

                                        'branch_code'          => $_POST['branch_code'],

                                        'main_ac_code'         => $_POST['service_tax_account_code'],

                                        'sub_ac_code'          => '',

                                        'narration'            => 'SERVICE TAX',

                                        'gross_amount'         => $_POST['service_tax_amount'],

                                        'net_amount'           => $_POST['service_tax_amount'],

                                        'dr_cr_ind'            => 'C',

                                        'record_type'          => 'G',

                                        'ref_doc_serial_no'    => $serial_no,

                                        'ref_doc_type'         => $_POST['trans_type']);

                    $ledgerDetailObj->insert($ld_array);

                }



                // update voucher header

                $h_array = array('status_code'           => 'C',

                                'ref_ledger_serial_no'  => $ref_ledger_serial_no,

                                'daybook_code'          => $_POST['daybook_code'],

                                'instrument_type'       => $_POST['instrument_type'],

                                'instrument_no'         => $_POST['instrument_no'],

                                'instrument_dt'         => date_conv($_POST['instrument_dt']),

                                'passed_by'             => $global_userid,

                                'passed_on'             => $global_sysdate);

                $voucherHeaderObj->update($h_array, "serial_no = '".$serial_no."'");



                // account balance updation

                $ledger_serial_no = $ref_ledger_serial_no;

                $this->ledger_posting($ledger_serial_no);

                // end of account balance updation



                // alert final voucher and final jv no

                $message = 'Please note Final Voucher No : ' . $rv_doc_no ;

                if($rv_doc_no) { 

                    session()->setFlashdata('message', $message);

                    return redirect()->to(session()->last_selected_end_menu);

                }

            }

        }

        

        $clause = ($user_option == 'Add') ? "limit 1" : ""; $dtl_data_arr = [];

        $dtl_qry = $this->db->query("Select * from voucher_detail where voucher_detail.ref_voucher_serial_no = '$serial_no' and dr_cr_ind='C' and main_ac_code<>'1424' ".$clause)->getResultArray();

        

        foreach($dtl_qry as $key => $dtl_data) {

            $dtl_data_arr[$key]['main_ac_code'] = $main_ac_code = $dtl_data['main_ac_code'];

            $dtl_data_arr[$key]['sub_ac_code'] = $sub_ac_code = $dtl_data['sub_ac_code'];

            $dtl_data_arr[$key]['ref_bill_year'] = $ref_bill_year = $dtl_data['ref_bill_year'];

            $dtl_data_arr[$key]['ref_bill_no'] = $ref_bill_no = $dtl_data['ref_bill_no'];

            $dtl_data_arr[$key]['client_code']                = $dtl_data['client_code'];

            $dtl_data_arr[$key]['matter_code']                = $dtl_data['matter_code'];

            $dtl_data_arr[$key]['matter_name']                = $dtl_data['matter_code'];

            $dtl_data_arr[$key]['initial_code']               = $dtl_data['initial_code'];

            $dtl_data_arr[$key]['realise_amount_inpocket'] = $realise_amount_inpocket = $dtl_data['realise_amount_inpocket'];

            $dtl_data_arr[$key]['realise_amount_outpocket'] = $realise_amount_outpocket = $dtl_data['realise_amount_outpocket'];

            $dtl_data_arr[$key]['realise_amount_counsel'] = $realise_amount_counsel = $dtl_data['realise_amount_counsel'];

            $dtl_data_arr[$key]['realise_amount_service_tax'] = $realise_amount_service_tax = $dtl_data['realise_amount_service_tax'];

            $dtl_data_arr[$key]['deficit_amount_inpocket']    = $dtl_data['deficit_amount_inpocket'];

            $dtl_data_arr[$key]['deficit_amount_outpocket']   = $dtl_data['deficit_amount_outpocket'];

            $dtl_data_arr[$key]['deficit_amount_counsel']     = $dtl_data['deficit_amount_counsel'];

            $dtl_data_arr[$key]['deficit_amount_service_tax'] = $dtl_data['deficit_amount_service_tax'];

            $dtl_data_arr[$key]['narration']                  = $dtl_data['narration'];

            $dtl_data_arr[$key]['total_amount']               = $dtl_data['gross_amount'];

            $dtl_data_arr[$key]['part_full_ind']              = $dtl_data['part_full_ind'];

            $dtl_data_arr[$key]['os_amount_inpocket']         = '';

            $dtl_data_arr[$key]['os_amount_outpocket']        = '';

            $dtl_data_arr[$key]['os_amount_counsel']          = '';

            $dtl_data_arr[$key]['os_amount_service_tax']      = '';

            

            // os amount calculation

            if(!empty($ref_bill_no) && $ref_bill_year != 'ON AC' && $ref_bill_year != 'ADVEXP' && $ref_bill_year != 'UNKNOWN') {

                $res_stmt = "select * from bill_detail where fin_year = '".$ref_bill_year."' and bill_no = '".$ref_bill_no."'";

                $row = $this->db->query($res_stmt)->getRowArray();

                

                $dtl_data_arr[$key]['os_amount_inpocket'] = number_format(($realise_amount_inpocket    + (isset($row['bill_amount_inpocket']) ? $row['bill_amount_inpocket'] : 0.00))  - ((isset($row['advance_amount_inpocket']) ? $row['advance_amount_inpocket'] : 0.00)    + (isset($row['realise_amount_inpocket']) ? $row['realise_amount_inpocket'] : 0.00)    + (isset($row['deficit_amount_inpocket']) ? $row['deficit_amount_inpocket'] : 0.00)    + (isset($row['booked_amount_inpocket']) ? $row['booked_amount_inpocket'] : 0.00)),2,'.','');

                $dtl_data_arr[$key]['os_amount_outpocket'] = number_format(($realise_amount_outpocket   + (isset($row['bill_amount_outpocket']) ? $row['bill_amount_outpocket'] : 0.00)) - ((isset($row['advance_amount_outpocket']) ? $row['advance_amount_outpocket'] : 0.00)   + (isset($row['realise_amount_outpocket']) ? $row['realise_amount_outpocket'] : 0.00)   + (isset($row['deficit_amount_outpocket']) ? $row['deficit_amount_outpocket'] : 0.00)   + (isset($row['booked_amount_outpocket']) ? $row['booked_amount_outpocket'] : 0.00)),2,'.','');

                $dtl_data_arr[$key]['os_amount_counsel'] = number_format(($realise_amount_counsel     + (isset($row['bill_amount_counsel']) ? $row['bill_amount_counsel'] : 0.00))   - ((isset($row['advance_amount_counsel']) ? $row['advance_amount_counsel'] : 0.00)     + (isset($row['realise_amount_counsel']) ? $row['realise_amount_counsel'] : 0.00)     + (isset($row['deficit_amount_counsel']) ? $row['deficit_amount_counsel'] : 0.00)     + (isset($row['booked_amount_counsel']) ? $row['booked_amount_counsel'] : 0.00)),2,'.','');

                $dtl_data_arr[$key]['os_amount_service_tax'] = number_format(($realise_amount_service_tax + (isset($row['service_tax_amount']) ? $row['service_tax_amount'] : 0.00))    - ((isset($row['advance_amount_service_tax']) ? $row['advance_amount_service_tax'] : 0.00) + (isset($row['realise_amount_service_tax']) ? $row['realise_amount_service_tax'] : 0.00) + (isset($row['deficit_amount_service_tax']) ? $row['deficit_amount_service_tax'] : 0.00) + (isset($row['booked_amount_service_tax']) ? $row['booked_amount_service_tax'] : 0.00)),2,'.','');

            } // end of os amount calculation

            

            // account description 

            $row = $this->db->query("select main_ac_desc,sub_ac_ind from account_master where main_ac_code = '$main_ac_code'")->getRowArray();

            $dtl_data_arr[$key]['ac_desc'] = isset($row['main_ac_desc']) ? $row['main_ac_desc'] : '';

            $dtl_data_arr[$key]['sub_ac_ind'] = isset($row['sub_ac_ind']) ? $row['sub_ac_ind'] : '';

            

            // sub account description 

            $row = $this->db->query("select sub_ac_desc from sub_account_master where main_ac_code = '$main_ac_code' and sub_ac_code='$sub_ac_code'")->getRowArray();

            $dtl_data_arr[$key]['sub_ac_desc'] = isset($row['sub_ac_desc']) ? $row['sub_ac_desc'] : '';

        }



        // financial year selection 

        $years = $this->db->query("select fin_year from params order by fin_year desc")->getResultArray();

        

        $params = [

            'serial_no' => $serial_no,

            'link_jv_serial_no' => isset($link_jv_serial_no) ? $link_jv_serial_no : '',

            'status_code' => $status_code,

            'status_desc' => $status_desc,

            'colour_s' => $colour_s,

            'entry_date' => $entry_date,

            'payee_payer_type' => $payee_payer_type,

            'associate_name' => $associate_name,

            'associate_code' => $associate_code,

            'payment_type' => $payment_type,

            'remarks' => $remarks,

            // 'dtl_data_sql' => $dtl_data_sql,

            'billable_ind_desc' => isset($billable_ind_desc) ? $billable_ind_desc : '',

            // 'daybook_qry' => $daybook_qry,

            'daybook_desc' => $daybook_desc,

            'daybook_type' => $daybook_type,

            'global_sysdate' => $global_sysdate,

            'global_curr_finyr_fymddate' => $global_curr_finyr_fymddate,

            'global_curr_finyr_lymddate' => $global_curr_finyr_lymddate,

            'daybook_code' => $daybook_code,

            'instrument_type' => $instrument_type,

            'instrument_no' => isset($instrument_no) ? $instrument_no : '',

            'instrument_dt' => isset($instrument_dt) ? $instrument_dt : '',

            'gross_amount' => isset($gross_amount) ? $gross_amount : '',

            'total_basic_amount' => isset($total_basic_amount) ? $total_basic_amount : '',

            'total_newtax_amount' => isset($total_newtax_amount) ? $total_newtax_amount : '',

            'total_newcess_amount' => isset($total_newcess_amount) ? $total_newcess_amount : '',

            'total_newhecess_amount' => isset($total_newhecess_amount) ? $total_newhecess_amount : '',

            'tax_code' => isset($tax_code) ? $tax_code : '',

            'tax_account_code' => isset($tax_account_code) ? $tax_account_code : '',

            'tax_sub_account_code' => isset($tax_sub_account_code) ? $tax_sub_account_code : '',

            'tax_percent' => isset($tax_percent) ? $tax_percent : '',

            'tax_amount' => isset($tax_amount) ? $tax_amount : '',

            'net_amount' => isset($net_amount) ? $net_amount : '',

            'row_count' => isset($row_count['totalRow']) ? $row_count['totalRow'] : $row_count,

            'trans_type' => isset($trans_type) ? $trans_type : '',

            'global_curr_finyear' => isset($global_curr_finyear) ? $global_curr_finyear : '',

            'tax_account_desc' => isset($tax_account_desc) ? $tax_account_desc : '',

            // 'pan_no' => $pan_no,

            // 'prepared_by' => $prepared_by,

            // 'prepared_on' => $prepared_on,

            // 'paid_by' => $paid_by,

            // 'paid_on' => $paid_on,

            'global_userid' => $global_userid,

            'received_from' => $received_from,

            'service_tax_amount' => isset($service_tax_amount) ? $service_tax_amount : '',

            'service_tax_account_code' => isset($service_tax_account_code) ? $service_tax_account_code : '',

            // 'instrument_no ' => $instrument_no ,

            // 'instrument_dt' => $instrument_dt,

            // 'final_voucher_date' => $final_voucher_date,

            'bank_name' => isset($bank_name) ? $bank_name : '',

        ];



        return view("pages/Finance/Vouchers/receipt_client", compact('params', 'data', 'tag_permissions', 'user_option', 'status_code', 'years', 'dtl_data_arr', 'selemode', 'displayId'));

    }



    public function cash_bank_cash() {

        $global_userid = $user_id = session()->userId;

        $data = branches($user_id); $global_curr_finyear = session()->financialYear;

        $global_dmydate = date('d-m-Y'); $global_sysdate = date_conv($global_dmydate); 

        $data['requested_url'] = session()->requested_end_menu_url;

        $displayId = ['asso_code' => 4141];

        

        $global_curr_finyr_fymddate = substr($global_curr_finyear, 0, 4).'-04-01';

        $global_curr_finyr_lymddate = substr($global_curr_finyear, 5, 4).'-03-31';



        $selemode   = isset($_REQUEST['selemode']) ? $_REQUEST['selemode'] : null;

        $user_option = isset($_REQUEST['user_option'])?$_REQUEST['user_option']:null;

        $serial_no   = isset($_REQUEST['serial_no'])?$_REQUEST['serial_no']:null;

        $daybook_code_from = $daybook_code_to = $daybook_type_to = $daybook_type_from = '';



        if($selemode != 'Y') {

            $branch_qry  = $this->db->query(session()->branch_selection_stmt)->getResultArray();

            

            $dbfrom_qry  = $this->db->query("select * from daybook_master where daybook_type in ('CB','BB') order by daybook_type desc,daybook_desc ")->getResultArray();

            $dbto_qry    = $this->db->query("select * from daybook_master where daybook_type in ('CB','BB') order by daybook_type desc,daybook_desc ")->getResultArray();

            

            if ($user_option == 'Add') {  

                $fin_year    = $global_curr_finyear ;

                $entry_date  = $global_dmydate ;

                $branch_code = session()->user_qry['branch_code'];  



            } else {

                $tranhdr_qry = $this->db->query("select a.*, b.daybook_desc,b.daybook_type from voucher_header a, daybook_master b where a.serial_no = '$serial_no' and a.daybook_code = b.daybook_code ")->getRowArray();

                $fin_year = $global_curr_finyear;



                $branch_code        = $tranhdr_qry['branch_code'] ;

                $entry_date         = date_conv($tranhdr_qry['entry_date'],'-') ;

                $daybook_code_from  = $tranhdr_qry['daybook_code'] ;

                $daybook_name_from  = $tranhdr_qry['daybook_desc'] ;

                $daybook_type_from  = $tranhdr_qry['daybook_type'] ;

                $instrument_no      = $tranhdr_qry['instrument_no'] ;

                $instrument_dt      = date_conv($tranhdr_qry['instrument_dt'],'-') ;

                $gross_amount       = $tranhdr_qry['gross_amount'] ;

            

                $trandtl_qry        = $this->db->query("select a.*, b.daybook_code, b.daybook_desc, b.daybook_type from voucher_detail a, daybook_master b where a.ref_voucher_serial_no = '$serial_no' and a.main_ac_code = b.main_ac_code and a.sub_ac_code = ifnull(b.sub_ac_code,'') ")->getRowArray();

                $daybook_code_to    = $trandtl_qry['daybook_code'] ;

                $daybook_name_to    = $trandtl_qry['daybook_desc'] ;

                $daybook_type_to    = $trandtl_qry['daybook_type'] ;

            }

            

            if ($user_option == 'Add' )    { $redk = '' ;          $redv = '' ;           $disv = '' ;           $disb = '' ; }

            if ($user_option == 'Edit')    { $redk = 'readonly' ;  $redv = '' ;           $disv = '' ;           $disb = '' ; }

            if ($user_option == 'Delete')  { $redk = 'readonly' ;  $redv = 'readonly' ;   $disv = 'readonly' ;   $disb = '' ; }

            if ($user_option == 'View')    { $redk = 'readonly' ;  $redv = 'readonly' ;   $disv = 'disabled' ;   $disb = 'disabled' ; }

            if ($user_option == 'Print')   { $redk = 'readonly' ;  $redv = 'readonly' ;   $disv = 'readonly' ;   $disb = '' ; }

            if ($user_option == 'Approve') { $redk = 'readonly' ;  $redv = 'readonly' ;   $disv = 'readonly' ;   $disb = '' ; $redx = '' ;  }

            $tag_permissions = $redk . ' ' . $redv . ' ' . $disv . ' ' . $disb;

            $selemode = 'Y';

        } else {

            $serial_no          = isset($_POST['serial_no']) ? $_POST['serial_no'] : '';

            $branch_code        = $_POST['branch_code'];

            $fin_year           = $_POST['fin_year'];

            $entry_date         = date_conv($_POST['entry_date'], '-');

            $daybook_code_from  = $_POST['daybook_code_from'];

            $daybook_type_from  = $_POST['daybook_type_from'];

            $instrument_no      = $_POST['instrument_no'];

            $instrument_dt      = date_conv($_POST['instrument_dt'], '-');

            $gross_amount       = $_POST['gross_amount'];

            $daybook_code_to    = $_POST['daybook_code_to'];

            $daybook_type_to    = $_POST['daybook_type_to'];

            $voucher_date       = ($user_option == 'Approve') ? date_conv($_POST['voucher_date'], '-') : '';



            if ($daybook_type_from == 'BB') { $instrument_type_from = 'Q' ; } else { $instrument_type_from = 'C' ; }



            $dbfr_qry   = $this->db->query("select * from daybook_master where daybook_code = '$daybook_code_from' ")->getRowArray(); 

            $dname_from = $dbfr_qry['daybook_desc'];

            $macct_from = $dbfr_qry['main_ac_code'];

            $sacct_from = $dbfr_qry['sub_ac_code'];

            $narr_from  = 'AMT TRANSFERRED FROM '.strtoupper($dname_from);



            $dbto_qry   = $this->db->query("select * from daybook_master where daybook_code = '$daybook_code_to' ")->getRowArray(); 

            $dname_to   = $dbto_qry['daybook_desc'];

            $macct_to   = $dbto_qry['main_ac_code'];

            $sacct_to   = $dbto_qry['sub_ac_code'];

            $narr_to    = 'AMT TRANSFERRED TO '.strtoupper($dname_to);



            if ($user_option == 'Add') {  

                $header_sql = "insert into voucher_header (branch_code,entry_date,trans_type,voucher_type,payee_payer_type,payee_payer_code,payee_payer_name,received_from,payment_type,daybook_code,instrument_type,

                            instrument_no,instrument_dt,bank_name, gross_amount,tax_code,tax_amount,net_amount,remarks,status_code,ref_ledger_serial_no,ref_jv_serial_no,ref_advance_serial_no,link_jv_serial_no,

                            prepared_by,prepared_on,passed_by,passed_on,paid_by,paid_on) values ('$branch_code','$entry_date','CB','PV','O','$daybook_code_to','$dname_to','','N','$daybook_code_from',

                            '$instrument_type_from','$instrument_no','$instrument_dt','$dname_from','$gross_amount','','','$gross_amount','','A','','','','','$global_userid','$global_sysdate','','','','') ";

                $this->db->query($header_sql);



                $header_qry = $this->db->query("select last_insert_id() lastid from voucher_header ")->getRowArray();

                $serial_no  = $header_qry['lastid']; 



                $detail_sql = "insert into voucher_detail (ref_voucher_serial_no,row_no,main_ac_code,sub_ac_code,ref_bill_year,ref_bill_no,client_code,matter_code,initial_code,expense_type,expense_code,narration,

                                realise_amount_inpocket,realise_amount_outpocket,realise_amount_counsel,gross_amount,tax_amount,net_amount,dr_cr_ind,deficit_amount_inpocket,deficit_amount_outpocket,deficit_amount_counsel,part_full_ind)

                                values ('$serial_no','1','$macct_to','$sacct_to','','','','','','','','$narr_from','','','','$gross_amount','','$gross_amount','D','','','','') ";

                $this->db->query($detail_sql);

                

                session()->setFlashdata('message', 'Please Note Generated Serial No : ' . $serial_no);

                return redirect()->to(session()->last_selected_end_menu);



            } else if ($user_option == 'Edit') {  

                $header_sql = "update voucher_header set branch_code = '$branch_code', entry_date = '$entry_date', trans_type = 'CB', voucher_type = 'PV', payee_payer_type = 'O', payee_payer_code = '$daybook_code_to', payee_payer_name = '$dname_to', received_from = '', payment_type = 'N', daybook_code = '$daybook_code_from',

                                    instrument_type = '$instrument_type_from', instrument_no = '$instrument_no', instrument_dt = '$instrument_dt', bank_name = '$dname_from', gross_amount = '$gross_amount', tax_code = '', tax_amount = '', net_amount = '$gross_amount', remarks = '',  status_code = 'A', ref_ledger_serial_no  = '',

                                    ref_jv_serial_no = '', ref_advance_serial_no = '', link_jv_serial_no = '', prepared_by = '$global_userid', prepared_on = '$global_sysdate', passed_by = '', passed_on = '', paid_by = '', paid_on = ''

                                    where serial_no = '$serial_no' ";

                $this->db->query($header_sql) ;



                $this->db->query("delete from voucher_detail where ref_voucher_serial_no = '$serial_no'");



                $detail_sql = "insert into voucher_detail (ref_voucher_serial_no,row_no,main_ac_code,sub_ac_code,ref_bill_year,ref_bill_no,client_code,matter_code,initial_code,expense_type,expense_code,narration,

                                    realise_amount_inpocket,realise_amount_outpocket,realise_amount_counsel,gross_amount,tax_amount,net_amount,dr_cr_ind,deficit_amount_inpocket,deficit_amount_outpocket,deficit_amount_counsel,part_full_ind)

                                    values ('$serial_no','1','$macct_to','$sacct_to','','','','','','','','$narr_from','','','','$gross_amount','','$gross_amount','D','','','','') ";

                $this->db->query($detail_sql);



                session()->setFlashdata('message', "Record with Serial NO: [".$serial_no."] Updated Sucessfully !!");

                return redirect()->to(session()->last_selected_end_menu);



            } else if ($user_option == 'Delete') {  

                $this->db->query("delete from voucher_header where serial_no             = '$serial_no'");

                $this->db->query("delete from voucher_detail where ref_voucher_serial_no = '$serial_no'");



                session()->setFlashdata('message', "Record with Serial NO: [".$serial_no."] Deleted Sucessfully !!");

                return redirect()->to(session()->last_selected_end_menu);



            } else if ($user_option == 'Print') {  

                $print = true; $response = $this->common_print_expenses($serial_no); // Surajit: window.open('rep_fin_voucher_payments_made.php?serial_no=$serial_no;');



                if(!is_object($response)) {

                    return view("pages/Finance/Vouchers/payment", ['print' => $print, "data" => $data, "displayId" => $displayId, 'params' => $response['params'], 'user_option' => $user_option, 'serial_no' => $serial_no]);

                } else return $response;



            } else if ($user_option == 'Approve') {  

                $month_code = substr($voucher_date, 5, 2) ;

                $final_doc_no = getLastDocNo($fin_year, $branch_code, $daybook_code_from, $month_code, 'D');





                $header_sql = "insert into ledger_trans_hdr (branch_code,fin_year,doc_type,doc_date,doc_no,daybook_code,instrument_type,instrument_no,instrument_dt,bank_name,narration,payee_payer_type,payee_payer_code,payee_payer_name,address_line_1,

                                address_line_2,address_line_3,address_line_4,pan_no,received_from,money_receipt_no,money_receipt_date,payment_type,gross_amount,tax_code,tax_percent,tax_amount,net_amount,status_code,ref_doc_serial_no,ref_doc_type,

                                ref_doc_no,ref_doc_date,prepared_by,prepared_on,approved_by,approved_on,paid_by,paid_on)

                            select

                                branch_code,'$fin_year',voucher_type,'$voucher_date','$final_doc_no',daybook_code,instrument_type,instrument_no,instrument_dt,bank_name,'$narr_to',payee_payer_type,payee_payer_code,payee_payer_name,'','','','','','','','','N',

                                gross_amount,tax_code,'',tax_amount,net_amount,'C',serial_no,trans_type,'','',prepared_by,prepared_on,'$global_userid','$global_sysdate','',''

                                from voucher_header where serial_no = '$serial_no' " ;

                                $this->db->query($header_sql) ;



                $header_qry = $this->db->query("select last_insert_id() lastid from ledger_trans_hdr ")->getRowArray();

                $ledger_serial_no  = $header_qry['lastid'] ; 



                $detail_sql = "insert into ledger_trans_dtl (ref_ledger_serial_no,branch_code,main_ac_code,sub_ac_code,client_code,matter_code,initial_code,expense_type,expense_code,narration,gross_amount,tax_amount,net_amount,dr_cr_ind,record_type,

                                ref_doc_type,ref_doc_year,ref_doc_no,ref_doc_date,ref_doc_serial_no)

                            select

                                '$ledger_serial_no','$branch_code',main_ac_code,sub_ac_code,client_code,matter_code,initial_code,expense_type,expense_code,narration,gross_amount,tax_amount,net_amount,dr_cr_ind,'E', 

                                'CB','','','',ref_voucher_serial_no 

                                from voucher_detail where ref_voucher_serial_no = '$serial_no' " ;

                $this->db->query($detail_sql);



                $detail_sql = "insert into ledger_trans_dtl (ref_ledger_serial_no,branch_code,main_ac_code,sub_ac_code,client_code,matter_code,initial_code,expense_type,expense_code,narration,gross_amount,tax_amount,net_amount,dr_cr_ind,record_type,

                                ref_doc_type,ref_doc_year,ref_doc_no,ref_doc_date,ref_doc_serial_no)

                            select

                                '$ledger_serial_no','$branch_code','$macct_from','$sacct_from','','','','','','$narr_to','$gross_amount','','$gross_amount','C','G','CB','','','','$serial_no' " ;

                $this->db->query($detail_sql);



                if ($daybook_type_from == 'BB') {

                $bankfrom_sql = "insert into bank_recon (branch_code,ref_ledger_serial_no,fin_year,doc_type,doc_date,doc_no,daybook_code,instrument_no,instrument_dt,bank_name,narration,payee_payer_type,payee_payer_code,payee_payer_name,dr_cr_ind,amount,status_code)

                                select

                                    branch_code,'$ledger_serial_no','$fin_year',voucher_type,'$voucher_date','$final_doc_no',daybook_code,instrument_no,instrument_dt,bank_name,'$narr_to',payee_payer_type,payee_payer_code,payee_payer_name,'D',gross_amount,'A'

                                    from voucher_header where serial_no = '$serial_no' " ;

                $this->db->query($bankfrom_sql);

                }



                if ($daybook_type_to   == 'BB') {

                $bankto_sql   = "insert into bank_recon (branch_code,ref_ledger_serial_no,fin_year,doc_type,doc_date,doc_no,daybook_code,instrument_no,instrument_dt,bank_name,narration,payee_payer_type,payee_payer_code,payee_payer_name,dr_cr_ind,amount,status_code)

                                select

                                    branch_code,'$ledger_serial_no','$fin_year',voucher_type,'$voucher_date','$final_doc_no','$daybook_code_to',instrument_no,instrument_dt,bank_name,'$narr_from','O','$daybook_code_from','$dname_from','C',net_amount,'A'

                                    from voucher_header where serial_no = '$serial_no' " ;

                                    $this->db->query($bankto_sql);

                }



                $voucher_sql = "update voucher_header set status_code = 'C', ref_ledger_serial_no = '$ledger_serial_no', passed_by = '$global_userid', passed_on = '$global_sysdate' where serial_no = '$serial_no' " ;

                $this->db->query($voucher_sql);



                //--- Balance Updation

                $this->ledger_posting($ledger_serial_no);



                session()->setFlashdata('message', "Please Note Final Voucher No: ".$final_doc_no."");

                return redirect()->to(session()->last_selected_end_menu);

            } 	  					   

        }



        $params = [

            'serial_no' => $serial_no,

            'link_jv_serial_no' => isset($link_jv_serial_no) ? $link_jv_serial_no : '',

            // 'status_code' => $status_code,

            // 'status_desc' => $status_desc,

            // 'colour_s' => $colour_s,

            'entry_date' => $entry_date,

            // 'payee_payer_type' => $payee_payer_type,

            // 'associate_name' => $associate_name,

            // 'associate_code' => $associate_code,

            // 'payment_type' => $payment_type,

            // 'remarks' => $remarks,

            // 'dtl_data_sql' => $dtl_data_sql,

            'billable_ind_desc' => isset($billable_ind_desc) ? $billable_ind_desc : '',

            // 'daybook_qry' => $daybook_qry,

            // 'daybook_desc' => $daybook_desc,

            // 'daybook_type' => $daybook_type,

            'global_sysdate' => $global_sysdate,

            'global_curr_finyr_fymddate' => $global_curr_finyr_fymddate,

            'global_curr_finyr_lymddate' => $global_curr_finyr_lymddate,

            // 'daybook_code' => $daybook_code,

            // 'instrument_type' => $instrument_type,

            'instrument_no' => isset($instrument_no) ? $instrument_no : '',

            'instrument_dt' => isset($instrument_dt) ? $instrument_dt : '',

            'gross_amount' => isset($gross_amount) ? $gross_amount : '',

            'total_basic_amount' => isset($total_basic_amount) ? $total_basic_amount : '',

            'total_newtax_amount' => isset($total_newtax_amount) ? $total_newtax_amount : '',

            'total_newcess_amount' => isset($total_newcess_amount) ? $total_newcess_amount : '',

            'total_newhecess_amount' => isset($total_newhecess_amount) ? $total_newhecess_amount : '',

            'tax_code' => isset($tax_code) ? $tax_code : '',

            'tax_account_code' => isset($tax_account_code) ? $tax_account_code : '',

            'tax_sub_account_code' => isset($tax_sub_account_code) ? $tax_sub_account_code : '',

            'tax_percent' => isset($tax_percent) ? $tax_percent : '',

            'tax_amount' => isset($tax_amount) ? $tax_amount : '',

            'net_amount' => isset($net_amount) ? $net_amount : '',

            'row_count' => isset($row_count['totalRow']) ? $row_count['totalRow'] : 0,

            'trans_type' => isset($trans_type) ? $trans_type : '',

            'global_curr_finyear' => isset($global_curr_finyear) ? $global_curr_finyear : '',

            'tax_account_desc' => isset($tax_account_desc) ? $tax_account_desc : '',

            // 'pan_no' => $pan_no,

            // 'prepared_by' => $prepared_by,

            // 'prepared_on' => $prepared_on,

            // 'paid_by' => $paid_by,

            // 'paid_on' => $paid_on,

            'global_userid' => $global_userid,

            // 'instrument_no ' => $instrument_no ,

            // 'instrument_dt' => $instrument_dt,

            // 'final_voucher_date' => $final_voucher_date,

            'fin_year' => $fin_year,

            'daybook_code_from' => $daybook_code_from,

            'daybook_code_to' => $daybook_code_to,

            'daybook_type_to' => $daybook_type_to,

            'daybook_type_from' => $daybook_type_from,

            'bank_name' => isset($bank_name) ? $bank_name : '',

        ];



        return view("pages/Finance/Vouchers/cash_bank_cash", compact('params', 'data', 'tag_permissions', 'user_option', 'dbfrom_qry', 'dbto_qry', 'selemode', 'displayId'));

    }



    public function receipt_bill_adjustment_client() { 

        $global_userid = $user_id = session()->userId;

        $data = branches($user_id); $global_curr_finyear = session()->financialYear;

        $global_dmydate = date('d-m-Y'); $global_sysdate = date_conv($global_dmydate); 

        $data['requested_url'] = session()->requested_end_menu_url;

        $displayId = ['asso_code' => 4141, 'daybook_code' => 4114, 'matter_code' => 4202, 'bill_code' => 4526];

        

        $global_curr_finyr_fymddate = substr($global_curr_finyear, 0, 4).'-04-01';

        $global_curr_finyr_lymddate = substr($global_curr_finyear, 5, 4).'-03-31';



        $selemode   = isset($_REQUEST['selemode']) ? $_REQUEST['selemode'] : null;

        $user_option = isset($_REQUEST['user_option'])?$_REQUEST['user_option']:null;

        $serial_no   = isset($_REQUEST['serial_no'])?$_REQUEST['serial_no']:null;



        if($selemode != 'Y') {

            if ($user_option == 'Add' )    { $readonly = '' ;           $disview = ''; }

            if ($user_option == 'Edit')    { $readonly = '' ;           $disview = ''; }

            if ($user_option == 'View')    { $readonly = 'readonly' ;   $disview = 'disabled'; }

            if ($user_option == 'Delete')  { $readonly = 'readonly' ;   $disview = ''; }

            if ($user_option == 'Print')   { $readonly = 'readonly' ;   $disview = ''; }

            if ($user_option == 'Approve') { $readonly = 'readonly' ;   $disview = ''; }

            $tag_permissions = $readonly . ' ' . $disview;



            $voucherHeaderObj = $this->db->table("voucher_header"); // object : voucher header

            $voucherDetailObj = $this->db->table("voucher_detail"); // object : voucher detail



            // TDS Account Code

            $res = $this->db->query("select key_code,key_desc,key_value from control_keycodes where key_code = '014'")->getRowArray();

            $tax_account_code = isset($row['key_value']) ? $row['key_value'] : '';

            $tax_sub_account_code = ''; 



            // Service Tax Account Code

            $res = $this->db->query("select key_code,key_desc,key_value from control_keycodes where key_code = '028'")->getRowArray();

            $service_tax_account_code = isset($row['key_value']) ? $row['key_value'] : '';



            if($user_option == 'Add') {

                $entry_date       = date('d-m-Y');

                $payee_payer_type = 'C';

                $associate_code   = '';

                $associate_name   = '';

                $received_from    = '';

                $payment_type     = 'N';

                $instrument_type  = 'C';

                $remarks          = '';

                $daybook_type     = '';

                $daybook_code     = '';

                $daybook_desc     = '';

                $status_code      = 'A';

                $status_desc      = 'Active';

                $row_count        = 1 ;



            } else {

                $hdr_data = $this->db->query("select * from voucher_header where voucher_header.serial_no = '$serial_no'")->getRowArray();

            

                $matter_code           = isset($hdr_data['matter_code']) ? $hdr_data['matter_code'] : '';

                $branch_code           = $hdr_data['branch_code'];

                $entry_date            = date_conv($hdr_data['entry_date']);

                $trans_type            = $hdr_data['trans_type'];

                $payee_payer_type      = $hdr_data['payee_payer_type'];

                $associate_code        = $hdr_data['payee_payer_code'];

                $associate_name        = $hdr_data['payee_payer_name'];

                $received_from         = $hdr_data['received_from'];

                $payment_type          = $hdr_data['payment_type'];

                $daybook_code          = $hdr_data['daybook_code'];

                $instrument_type       = $hdr_data['instrument_type'];

                $instrument_no         = $hdr_data['instrument_no'];

                $instrument_dt         = date_conv($hdr_data['instrument_dt']);

                $bank_name             = $hdr_data['bank_name'];

                $gross_amount          = $hdr_data['gross_amount'];

                $tax_amount            = $hdr_data['tax_amount'];

                $net_amount            = $hdr_data['net_amount'];

                $remarks               = $hdr_data['remarks'];

                $status_code           = $hdr_data['status_code'];

                $ref_ledger_serial_no  = $hdr_data['ref_ledger_serial_no'];

                $ref_jv_serial_no      = $hdr_data['ref_jv_serial_no'];

                $ref_advance_serial_no = $hdr_data['ref_advance_serial_no'];

                $link_jv_serial_no     = $hdr_data['link_jv_serial_no'];

                $prepared_by           = $hdr_data['prepared_by'];

                $prepared_on           = date_conv($hdr_data['prepared_on']);

                $passed_by             = $hdr_data['passed_by'];

                $passed_on             = date_conv($hdr_data['passed_on']);

                $paid_by               = $hdr_data['paid_by'];

                $paid_on               = date_conv($hdr_data['paid_on']);

                $service_tax_amount    = $hdr_data['service_tax_amount'];

            

                $dtl_row = $this->db->query("select count(ref_voucher_serial_no) as totalRow from voucher_detail where voucher_detail.ref_voucher_serial_no = '$serial_no' and dr_cr_ind='C' and main_ac_code<>'1424'")->getRowArray()['totalRow'];

                $row_count = $dtl_row;

            

                // status description

                $row = $this->db->query("SELECT status_desc FROM status_master where table_name = 'voucher_header' and status_code = '$status_code'")->getRowArray();

                $status_desc = $row['status_desc'];

            

                // daybook type and description

                $row = $this->db->query("SELECT * FROM daybook_master where daybook_code = '$daybook_code'")->getRowArray();

                $daybook_type = isset($row['daybook_type']) ? $row['daybook_type'] : '';

                $daybook_desc = isset($row['daybook_desc']) ? $row['daybook_desc'] : '';

            }



            if($status_code == 'A') { $colour_s = "#0000FF"; } else { $colour_s = "#FF0000";} 



            if(($status_code != 'A' && $user_option == 'Edit') || ($status_code != 'A' && $user_option == 'Delete') || ($status_code != 'A' && $user_option == 'Approve')) {

                session()->setFlashdata('message', 'This operation is not allowed right now [See the Status]!!');

                return redirect()->to(session()->last_selected_end_menu);

            }

            $selemode = 'Y';

        } else {

            $serial_no = isset($_POST['serial_no'])?$_POST['serial_no']:null;

            $ref_voucher_serial_no = $serial_no;

            $row_count = isset($_POST['row_count'])?$_POST['row_count']:null;

            $branch_code = isset($_POST['branch_code'])?$_POST['branch_code']:null;



            if($_POST['tax_amount']>0) {$tax_code = $_POST['tax_code'];} else {$tax_code = 'NULL';}



            $voucherHeaderObj = $this->db->table("voucher_header"); // object : voucher header

            $voucherDetailObj = $this->db->table("voucher_detail"); // object : voucher detail

            $ledgerHeaderObj = $this->db->table("ledger_trans_hdr"); // object : ledger header

            $ledgerDetailObj = $this->db->table("ledger_trans_dtl"); // object : ledger detail

            $billRealisationHeaderObj = $this->db->table("bill_realisation_header"); // object : bill realisation header

            $billRealisationDetailObj = $this->db->table("bill_realisation_detail"); // object : bill realisation detail

            $advanceDetailObj = $this->db->table("advance_details"); // object : advance detail

            $tdsCertObj = $this->db->table("tds_certificate"); // object : tds certificate

            $billDetailObj = $this->db->table("bill_detail"); // object : bill detail

            $bankReconObj = $this->db->table("bank_recon"); // object : bank recon

            $post_array = $_POST;



            //------------------------------------ FOR INSERT/UPDATE/DELETE    : USING PEAR DB ------------------------------------// 

            if($user_option == 'Add') {  

                // new record insertion in: voucher header

                $h_array = array('serial_no'             => 'NULL',

                                'branch_code'           => $_POST['branch_code'],

                                'entry_date'            => date_conv($_POST['entry_date']),

                                'trans_type'            => 'RC',

                                'voucher_type'          => 'RV',

                                'payee_payer_type'      => $_POST['payee_payer_type'],

                                'payee_payer_code'      => $_POST['associate_code'],

                                'payee_payer_name'      => stripslashes($_POST['associate_name']),

                                'received_from'         => stripslashes($_POST['received_from']),

                                'payment_type'          => $_POST['payment_type'],

                                'instrument_type'       => $_POST['instrument_type'],

                                'instrument_no'         => $_POST['instrument_no'],

                                'instrument_dt'         => date_conv($_POST['instrument_dt']),

                                'bank_name'             => stripslashes($_POST['bank_name']),

                                'gross_amount'          => $_POST['gross_amount'],

                                'service_tax_amount'    => $_POST['service_tax_amount'],

                                'tax_code'              => 'NULL',

                                'tax_amount'            => $_POST['tax_amount'],

                                'net_amount'            => $_POST['net_amount'],

                                'remarks'               => stripslashes($_POST['remarks']),

                                'status_code'           => 'A',

                                'prepared_by'           => $global_userid,

                                'prepared_on'           => date_conv(date('d-m-Y')));

                $voucherHeaderObj->insert($h_array);

                $ref_voucher_serial_no = $this->db->insertID();



            } if($user_option == 'Edit' || $user_option == 'Delete') {  

                // updation of bill detail's booked column with old values

                for($i=1; $i <= $row_count; $i++) {

                    $old_ref_bill_year = $_POST['old_ref_bill_year'.$i] ;

                    $old_ref_bill_no   = $_POST['old_ref_bill_no'.$i] ;



                    if(!empty($old_ref_bill_year) && !empty($old_ref_bill_no)) {

                        $old_amount_inp_st  = (float) $_POST['old_realise_amount_inpocket_stax'.$i];

                        $old_amount_out_st  = (float) $_POST['old_realise_amount_outpocket_stax'.$i];

                        $old_amount_cns_st  = (float) $_POST['old_realise_amount_counsel_stax'.$i];

                        $old_amount_inp_nt  = (float) $_POST['old_realise_amount_inpocket_ntax'.$i];

                        $old_amount_out_nt  = (float) $_POST['old_realise_amount_outpocket_ntax'.$i];

                        $old_amount_cns_nt  = (float) $_POST['old_realise_amount_counsel_ntax'.$i];

                        $old_amount_stx     = (float) $_POST['old_realise_amount_service_tax'.$i];



                        $old_amount_inp     = (float) $_POST['old_realise_amount_inpocket_stax'.$i] + (float) $_POST['old_realise_amount_inpocket_ntax'.$i];

                        $old_amount_out     = (float) $_POST['old_realise_amount_outpocket_stax'.$i] + (float) $_POST['old_realise_amount_outpocket_ntax'.$i];

                        $old_amount_cns     = (float) $_POST['old_realise_amount_counsel_stax'.$i] + (float) $_POST['old_realise_amount_counsel_ntax'.$i];

                    

                        $updt_stmt   = "update bill_detail set booked_amount_inpocket_stax = ifnull(booked_amount_inpocket_stax,0) - $old_amount_inp_st,

                                                booked_amount_outpocket_stax    = ifnull(booked_amount_outpocket_stax,0)   - $old_amount_out_st,

                                                booked_amount_counsel_stax      = ifnull(booked_amount_counsel_stax,0)     - $old_amount_cns_st,

                                                booked_amount_inpocket_ntax     = ifnull(booked_amount_inpocket_ntax,0)    - $old_amount_inp_nt,

                                                booked_amount_outpocket_ntax    = ifnull(booked_amount_outpocket_ntax,0)   - $old_amount_out_nt,

                                                booked_amount_counsel_ntax      = ifnull(booked_amount_counsel_ntax,0)     - $old_amount_cns_nt,

                                                booked_amount_inpocket          = ifnull(booked_amount_inpocket,0)         - $old_amount_inp,

                                                booked_amount_outpocket         = ifnull(booked_amount_outpocket,0)        - $old_amount_out,

                                                booked_amount_counsel           = ifnull(booked_amount_counsel,0)          - $old_amount_cns,

                                                booked_amount_service_tax       = ifnull(booked_amount_service_tax,0)      - $old_amount_stx

                                        where fin_year = '".$old_ref_bill_year."' and bill_no = '".$old_ref_bill_no."'";



                        $updt_bill   = $this->db->query($updt_stmt);

                    }

                }

                // end of updation of bill detail's booked column with old values



                if($user_option == 'Edit') {  

                // voucher header

                $h_array = array('branch_code'        => $_POST['branch_code'],

                                'entry_date'         => date_conv($_POST['entry_date']),

                                'trans_type'         => 'RC',

                                'voucher_type'       => 'RV',

                                'payee_payer_type'   => $_POST['payee_payer_type'],

                                'payee_payer_code'   => $_POST['associate_code'],

                                'payee_payer_name'   => stripslashes($_POST['associate_name']),

                                'received_from'      => stripslashes($_POST['received_from']),

                                'payment_type'       => $_POST['payment_type'],

                                'instrument_type'    => $_POST['instrument_type'],

                                'instrument_no'      => $_POST['instrument_no'],

                                'instrument_dt'      => date_conv($_POST['instrument_dt']),

                                'bank_name'          => stripslashes($_POST['bank_name']),

                                'gross_amount'       => $_POST['gross_amount'],

                                'service_tax_amount' => $_POST['service_tax_amount'],

                                'tax_code'           => 'NULL',

                                'tax_amount'         => $_POST['tax_amount'],

                                'net_amount'         => $_POST['net_amount'],

                                'remarks'            => stripslashes($_POST['remarks']),

                                'status_code'        => 'A');

                $voucherHeaderObj->update($h_array, "serial_no = '".$serial_no."'");



                // voucher detail

                $v_detail_del = $voucherDetailObj->delete("ref_voucher_serial_no = '".$ref_voucher_serial_no."'");

                }

            }



            // insert records into details

            if($user_option == 'Add' || $user_option == 'Edit') {

                // voucher detail

                $cnt = 0 ;

                for($i=1; $i <= $row_count; $i++) {

                    if($_POST['voucher_ok_ind'.$i]=='Y' && !empty($_POST['ref_bill_year'.$i]) && !empty($_POST['matter_code'.$i]) && $_POST['total_amount'.$i] > 0) {

                        // main_ac_code, sub_ac_code selection

                        $narration = "Advance from Client";

                        if($_POST['ref_bill_year'.$i] == 'ON AC') {

                        $res = $this->db->query("select key_code,key_desc,key_value from control_keycodes where key_code = '022'")->getRowArray();

                        $sub_ac_code = $_POST['sub_ac_code'.$i];



                        } else {

                        $res = $this->db->query("select key_desc,key_value from control_keycodes where key_code = '008'")->getRowArray();

                        $sub_ac_code  = '';

                        if(!empty($_POST['ref_bill_no'.$i])) {

                            $narration = "Bill No. ".$_POST['ref_bill_no'.$i] . " of " . $_POST['ref_bill_year'.$i];

                        }

                        }

                        $main_ac_code = isset($row['key_value']) ? $row['key_value'] : '';

                        // end of main_ac_code,sub_ac_code selection



                        $cnt+=1;

                        $array = array('ref_voucher_serial_no'           => $ref_voucher_serial_no,

                                    'row_no'                          => $cnt,

                                    'main_ac_code'                    => $main_ac_code,

                                    'sub_ac_code'                     => $sub_ac_code,

                                    'ref_bill_year'                   => $_POST['ref_bill_year'.$i],

                                    'ref_bill_no'                     => $_POST['ref_bill_no'.$i],

                                    'client_code'                     => $_POST['client_code'.$i],

                                    'matter_code'                     => $_POST['matter_code'.$i],

                                    'initial_code'                    => $_POST['initial_code'.$i],

                                    'narration'                       => $narration,

                                    'realise_amount_inpocket_stax'    => $_POST['realise_amount_inpocket_stax'.$i],

                                    'realise_amount_outpocket_stax'   => $_POST['realise_amount_outpocket_stax'.$i],

                                    'realise_amount_counsel_stax'     => $_POST['realise_amount_counsel_stax'.$i],

                                    'realise_amount_inpocket_ntax'    => $_POST['realise_amount_inpocket_ntax'.$i],

                                    'realise_amount_outpocket_ntax'   => $_POST['realise_amount_outpocket_ntax'.$i],

                                    'realise_amount_counsel_ntax'     => $_POST['realise_amount_counsel_ntax'.$i],

                                    'realise_amount_service_tax'      => $_POST['realise_amount_service_tax'.$i],					   

                                    'realise_amount_inpocket'         => $_POST['realise_amount_inpocket_stax'.$i] + $_POST['realise_amount_inpocket_ntax'.$i],

                                    'realise_amount_outpocket'        => $_POST['realise_amount_outpocket_stax'.$i] + $_POST['realise_amount_outpocket_ntax'.$i] ,

                                    'realise_amount_counsel'          => $_POST['realise_amount_counsel_stax'.$i] + $_POST['realise_amount_counsel_ntax'.$i],

                                    'gross_amount'                    => $_POST['total_amount'.$i],

                                    'net_amount'                      => $_POST['total_amount'.$i],

                                    'dr_cr_ind'                       => 'C',

                                    'deficit_amount_inpocket_stax'    => $_POST['deficit_amount_inpocket_stax'.$i],

                                    'deficit_amount_outpocket_stax'   => $_POST['deficit_amount_outpocket_stax'.$i],

                                    'deficit_amount_counsel_stax'     => $_POST['deficit_amount_counsel_stax'.$i],

                                    'deficit_amount_inpocket_ntax'    => $_POST['deficit_amount_inpocket_ntax'.$i],

                                    'deficit_amount_outpocket_ntax'   => $_POST['deficit_amount_outpocket_ntax'.$i],

                                    'deficit_amount_counsel_ntax'     => $_POST['deficit_amount_counsel_ntax'.$i],

                                    'deficit_amount_service_tax'      => $_POST['deficit_amount_service_tax'.$i],					   					   

                                    'deficit_amount_inpocket'         => $_POST['deficit_amount_inpocket_stax'.$i] + $_POST['deficit_amount_inpocket_ntax'.$i] ,

                                    'deficit_amount_outpocket'        => $_POST['deficit_amount_outpocket_stax'.$i] + $_POST['deficit_amount_outpocket_ntax'.$i],

                                    'deficit_amount_counsel'          => $_POST['deficit_amount_counsel_stax'.$i] + $_POST['deficit_amount_counsel_ntax'.$i],

                                    'deficit_amount_service_tax'      => $_POST['deficit_amount_service_tax'.$i],

                                    'part_full_ind'                   => $_POST['part_full_ind'.$i]);

                        $voucherDetailObj->insert($array);



                        // updation of bill detail's booked column

                        if(!empty($_POST['ref_bill_no'.$i]) && $_POST['ref_bill_year'.$i] != 'ON AC' && $_POST['ref_bill_year'.$i] != 'ADVEXP' && $_POST['ref_bill_year'.$i] != 'UNKNOWN') {

                            $r_inp_st_amt    = $_POST['realise_amount_inpocket_stax'.$i]*1;

                            $r_out_st_amt    = $_POST['realise_amount_outpocket_stax'.$i]*1;

                            $r_cns_st_amt    = $_POST['realise_amount_counsel_stax'.$i]*1;

                            $r_inp_nt_amt    = $_POST['realise_amount_inpocket_ntax'.$i]*1;

                            $r_out_nt_amt    = $_POST['realise_amount_outpocket_ntax'.$i]*1;

                            $r_cns_nt_amt    = $_POST['realise_amount_counsel_ntax'.$i]*1;

                            $r_stx_amt       = $_POST['realise_amount_service_tax'.$i]*1;

                            $r_amt_inpocket  = $_POST['realise_amount_inpocket_stax'.$i]*1 + $_POST['realise_amount_inpocket_ntax'.$i]*1;

                            $r_amt_outpocket = $_POST['realise_amount_outpocket_stax'.$i]*1 + $_POST['realise_amount_outpocket_ntax'.$i]*1;

                            $r_amt_counsel   = $_POST['realise_amount_counsel_stax'.$i]*1 + $_POST['realise_amount_counsel_ntax'.$i]*1;



                            $updt_stmt   = "update bill_detail set booked_amount_inpocket_stax = ifnull(booked_amount_inpocket_stax,0) + $r_inp_st_amt,

                                                    booked_amount_outpocket_stax    = ifnull(booked_amount_outpocket_stax,0)   + $r_out_st_amt,

                                                    booked_amount_counsel_stax      = ifnull(booked_amount_counsel_stax,0)     + $r_cns_st_amt,

                                                    booked_amount_inpocket_ntax     = ifnull(booked_amount_inpocket_ntax,0)    + $r_inp_nt_amt,

                                                    booked_amount_outpocket_ntax    = ifnull(booked_amount_outpocket_ntax,0)   + $r_out_nt_amt,

                                                    booked_amount_counsel_ntax      = ifnull(booked_amount_counsel_ntax,0)     + $r_cns_nt_amt,

                                                    booked_amount_inpocket          = ifnull(booked_amount_inpocket,0)         + $r_amt_inpocket,

                                                    booked_amount_outpocket         = ifnull(booked_amount_outpocket,0)        + $r_amt_outpocket,

                                                    booked_amount_counsel           = ifnull(booked_amount_counsel,0)          + $r_amt_counsel,

                                                    booked_amount_service_tax       = ifnull(booked_amount_service_tax,0)      + $r_stx_amt

                                            where fin_year = '".$_POST['ref_bill_year'.$i]."' and bill_no = '".$_POST['ref_bill_no'.$i]."'";



                            $updt_bill   = $this->db->query($updt_stmt);

                        } // end of updation of bill detail's booked column

                    }

                }



                // debit voucher detail 

                if($_POST['tax_amount'] > 0) {

                    $cnt+=1;

                    $array = array('ref_voucher_serial_no'    => $ref_voucher_serial_no,

                                    'row_no'                   => $cnt,

                                    'main_ac_code'             => $_POST['tax_account_code'],

                                    'sub_ac_code'              => $_POST['tax_sub_account_code'],

                                    'narration'                => 'TDS',

                                    'gross_amount'             => $_POST['tax_amount'],

                                    'net_amount'               => $_POST['tax_amount'],

                                    'dr_cr_ind'                => 'D');

                    $voucherDetailObj->insert($array);

                }



                // credit voucher detail 

                if($_POST['service_tax_amount'] > 0) {

                    $cnt+=1;

                    $array = array('ref_voucher_serial_no'    => $ref_voucher_serial_no,

                                    'row_no'                   => $cnt,

                                    'main_ac_code'             => $_POST['service_tax_account_code'],

                                    'sub_ac_code'              => '',

                                    'narration'                => 'SERVICE TAX',

                                    'gross_amount'             => $_POST['service_tax_amount'],

                                    'net_amount'               => $_POST['service_tax_amount'],

                                    'dr_cr_ind'                => 'C');

                    $voucherDetailObj->insert($array);

                }

                

                if($user_option == 'Add') { 

                    session()->setFlashdata('message', 'Please Note Generated Serial No : ' . $ref_voucher_serial_no);

                    return redirect()->to(session()->last_selected_end_menu);

                } else {

                    session()->setFlashdata('message', "Record with Serial NO: [".$serial_no."] Updated Sucessfully !!");

                    return redirect()->to(session()->last_selected_end_menu);

                }

            }



            if($user_option == 'Delete') {  

                // voucher header

                $h_array = array('status_code' => 'X');

                $v_header = $voucherHeaderObj->update($h_array, "serial_no = '".$serial_no."'");



                if($v_header) {

                    session()->setFlashdata('message', "Record with Serial NO: [".$serial_no."] Deleted Sucessfully !!");

                    return redirect()->to(session()->last_selected_end_menu);

                }

            }



            if($user_option == 'Print') {  

                // voucher header

                $h_array = array('status_code' => 'A');

                $v_header = $voucherHeaderObj->update($h_array,"serial_no = '".$serial_no."'");

                $print = true; $response = $this->common_print_expenses($serial_no); // Surajit: window.open('rep_fin_voucher_receipts_made_client.php?serial_no=$serial_no');



                if(!is_object($response)) {

                    return view("pages/Finance/Vouchers/payment", ['print' => $print, "data" => $data, "displayId" => $displayId, 'params' => $response['params'], 'user_option' => $user_option, 'serial_no' => $serial_no]);

                } else return $response;         

            }



            if($user_option == 'Approve') {  

                // daybook main as code and sub ac code

                $row = $this->db->query("SELECT * FROM daybook_master where daybook_code = '".$_POST['daybook_code']."'")->getRowArray();

                $db_main_ac_code = isset($row['main_ac_code']) ? $row['main_ac_code'] : '';

                $db_sub_ac_code  = isset($row['sub_ac_code']) ? $row['sub_ac_code'] : '';



                // generation of doc_no

                $voucher_date = isset($_POST['voucher_date'])?$_POST['voucher_date']:null;

                $voucher_date = date_conv($voucher_date) ; 

                $month_code = substr($voucher_date, 5, 2) ;

                $rv_doc_no = getLastDocNo($global_curr_finyear, $_POST['branch_code'], $_POST['daybook_code'], $month_code, 'C');



                // ledger header

                $lh_array = array('serial_no'             => 'NULL',

                                'branch_code'           => $_POST['branch_code'],

                                'fin_year'              => $global_curr_finyear,

                                'doc_type'              => 'RV',

                                'doc_date'              => $voucher_date,

                                'doc_no'                => $rv_doc_no,

                                'daybook_code'          => $_POST['daybook_code'],

                                'instrument_type'       => $_POST['instrument_type'],

                                'instrument_no'         => $_POST['instrument_no'],

                                'instrument_dt'         => date_conv($_POST['instrument_dt']),

                                'bank_name'             => $_POST['bank_name'],

                                'narration'             => 'RECEIVED FROM '.stripslashes($_POST['associate_name']),

                                'payee_payer_type'      => $_POST['payee_payer_type'],

                                'payee_payer_code'      => $_POST['associate_code'],

                                'payee_payer_name'      => stripslashes($_POST['associate_name']),

                                'received_from'         => stripslashes($_POST['received_from']),

                                'payment_type'          => $_POST['payment_type'],

                                'gross_amount'          => $_POST['gross_amount'],

                                'service_tax_amount'    => $_POST['service_tax_amount'],

                                'tax_code'              => 'NULL',

                                'tax_amount'            => $_POST['tax_amount'],

                                'net_amount'            => $_POST['net_amount'],

                                'status_code'           => 'C',

                                'ref_doc_serial_no'     => $serial_no,

                                'ref_doc_type'          => $_POST['trans_type'],

                                'prepared_by'           => $global_userid,

                                'prepared_on'           => $global_sysdate,

                                'approved_by'           => $global_userid,

                                'approved_on'           => $global_sysdate);

                $ledgerHeaderObj->insert($lh_array);

                $ref_ledger_serial_no = $this->db->insertID();



                // bill realisation header insertion

                $bh_array = array('serial_no'             => 'NULL',

                                'branch_code'           => $_POST['branch_code'],

                                'fin_year'              => $global_curr_finyear,

                                'ref_ledger_serial_no'  => $ref_ledger_serial_no,

                                'client_code'           => $_POST['associate_code'],

                                'realised_amount'       => $_POST['gross_amount'],

                                'tds_amount'            => $_POST['tax_amount'],

                                'service_tax_amount'    => $_POST['service_tax_amount'],

                                'received_amount'       => $_POST['net_amount']);

                $billRealisationHeaderObj->insert($bh_array);

                $ref_realisation_serial_no = $this->db->insertID();

                // end of bill realisation header insertion



                // ledger detail

                $cnt = 0 ;

                for($i=1; $i <= $row_count; $i++) {

                    $cnt+=1;

                    $ld_array = array('ref_ledger_serial_no' => $ref_ledger_serial_no,

                                        'branch_code'          => isset($branch_code) ? $branch_code : '',

                                        'main_ac_code'         => $_POST['main_ac_code'.$i],

                                        'sub_ac_code'          => $_POST['sub_ac_code'.$i],

                                        'client_code'          => $_POST['client_code'.$i],

                                        'matter_code'          => $_POST['matter_code'.$i],

                                        'narration'            => stripslashes($_POST['narration'.$i]),

                                        'gross_amount'         => $_POST['total_amount'.$i],

                                        'net_amount'           => $_POST['total_amount'.$i],

                                        'dr_cr_ind'            => 'C',

                                        'record_type'          => 'G',

                                        'ref_doc_serial_no'    => $serial_no,

                                        'ref_doc_type'         => $_POST['trans_type']);

                    $ledgerDetailObj->insert($ld_array);



                    // insert into advance detail table

                    $ref_advance_serial_no = NULL;

                    if($_POST['ref_bill_year'.$i] == 'ON AC') {

                        $adv_array = array('serial_no'             => 'NULL',

                                        'branch_code'           => $_POST['branch_code'],

                                        'fin_year'              => $global_curr_finyear,

                                        'ref_ledger_serial_no'  => $ref_ledger_serial_no,

                                        'advance_type'          => 'R',

                                        'payee_payer_type'      => $_POST['payee_payer_type'],

                                        'payee_payer_code'      => $_POST['associate_code'],

                                        'payee_payer_name'      => stripslashes($_POST['associate_name']),

                                        'matter_code'           => $_POST['matter_code'.$i],

                                        'client_code'           => $_POST['client_code'.$i],

                                        'instrument_type'       => $instrument_type,

                                        'instrument_no'         => $_POST['instrument_no'],

                                        'instrument_dt'         => date_conv($_POST['instrument_dt']),

                                        'gross_amount'          => $_POST['total_amount'.$i],

                                        'net_amount'            => $_POST['total_amount'.$i],

                                        'status_code'           => 'A');

                        $advanceDetailObj->insert($adv_array);

                        $ref_advance_serial_no = $this->db->insertID();

                    } // end of advance record



                    // bill realisation detail insertion

                    $sele_ref_bill_serial_no_stmt = "select serial_no from bill_detail where fin_year='".$_POST['ref_bill_year'.$i]."' and bill_no='".$_POST['ref_bill_no'.$i]."'";

                    $sele_ref_bill_serial_no_qry  = $this->db->query($sele_ref_bill_serial_no_stmt)->getRowArray();

                    $ref_bill_serial_no = isset($sele_ref_bill_serial_no_qry['serial_no']) ? $sele_ref_bill_serial_no_qry['serial_no'] : '';

                    $bd_array = array('ref_realisation_serial_no'       => $ref_realisation_serial_no,

                                        'row_no'                          => $cnt,

                                        'branch_code'                     => isset($branch_code) ? $branch_code : '',

                                        'ref_bill_serial_no'              => $ref_bill_serial_no,

                                        'ref_bill_year'                   => $_POST['ref_bill_year'.$i],

                                        'ref_bill_no'                     => $_POST['ref_bill_no'.$i],

                                        'client_code'                     => $_POST['client_code'.$i],

                                        'matter_code'                     => $_POST['matter_code'.$i],

                                        'initial_code'                    => $_POST['initial_code'.$i],

                                        'realise_amount_inpocket_stax'    => $_POST['realise_amount_inpocket_stax'.$i],

                                        'realise_amount_outpocket_stax'   => $_POST['realise_amount_outpocket_stax'.$i],

                                        'realise_amount_counsel_stax'     => $_POST['realise_amount_counsel_stax'.$i],

                                        'realise_amount_inpocket_ntax'    => $_POST['realise_amount_inpocket_ntax'.$i],

                                        'realise_amount_outpocket_ntax'   => $_POST['realise_amount_outpocket_ntax'.$i],

                                        'realise_amount_counsel_ntax'     => $_POST['realise_amount_counsel_ntax'.$i],

                                        'realise_amount_service_tax'      => $_POST['realise_amount_service_tax'.$i],

                                        'realise_amount_inpocket'         => $_POST['realise_amount_inpocket_stax'.$i] + $_POST['realise_amount_inpocket_ntax'.$i],

                                        'realise_amount_outpocket'        => $_POST['realise_amount_outpocket_stax'.$i] + $_POST['realise_amount_outpocket_ntax'.$i] ,

                                        'realise_amount_counsel'          => $_POST['realise_amount_counsel_stax'.$i] + $_POST['realise_amount_counsel_ntax'.$i],

                                        'realise_amount_service_tax'      => $_POST['realise_amount_service_tax'.$i],

                                        'realised_amount'                 => $_POST['total_amount'.$i],

                                        'deficit_amount_inpocket_stax'    => $_POST['deficit_amount_inpocket_stax'.$i],

                                        'deficit_amount_outpocket_stax'   => $_POST['deficit_amount_outpocket_stax'.$i],

                                        'deficit_amount_counsel_stax'     => $_POST['deficit_amount_counsel_stax'.$i],

                                        'deficit_amount_inpocket_ntax'    => $_POST['deficit_amount_inpocket_ntax'.$i],

                                        'deficit_amount_outpocket_ntax'   => $_POST['deficit_amount_outpocket_ntax'.$i],

                                        'deficit_amount_counsel_ntax'     => $_POST['deficit_amount_counsel_ntax'.$i],

                                        'deficit_amount_service_tax'      => $_POST['deficit_amount_service_tax'.$i],		

                                        'deficit_amount_inpocket'         => (($_POST['deficit_amount_inpocket_stax'.$i] != '') ? $_POST['deficit_amount_inpocket_stax'.$i] : 0) + (($_POST['deficit_amount_inpocket_ntax'.$i] != '') ? $_POST['deficit_amount_inpocket_ntax'.$i] : 0) ,

                                        'deficit_amount_outpocket'        => (($_POST['deficit_amount_outpocket_stax'.$i] != '') ? $_POST['deficit_amount_outpocket_stax'.$i] : 0) + (($_POST['deficit_amount_outpocket_ntax'.$i] != '') ? $_POST['deficit_amount_outpocket_ntax'.$i] : 0),

                                        'deficit_amount_counsel'          => (($_POST['deficit_amount_counsel_stax'.$i] != '') ? $_POST['deficit_amount_counsel_stax'.$i] : 0) + (($_POST['deficit_amount_counsel_ntax'.$i] != '') ? $_POST['deficit_amount_counsel_ntax'.$i] : 0),

                                        'deficit_amount_service_tax' => isset($_POST['deficit_amount_serviec_tax'.$i]) ? $_POST['deficit_amount_serviec_tax'.$i] : '',

                                        'part_full_ind'                   => $_POST['part_full_ind'.$i],

                                        'ref_advance_serial_no'           => $ref_advance_serial_no);

                    $billRealisationDetailObj->insert($bd_array);

                    // end of bill realisation detail insertion



                    // bill_detail updation

                    if(!empty($_POST['ref_bill_no'.$i]) && $_POST['ref_bill_year'.$i] != 'ON AC' && $_POST['ref_bill_year'.$i] != 'ADVEXP' && $_POST['ref_bill_year'.$i] != 'UNKNOWN') {

                        $p_f_ind         = $_POST['part_full_ind'.$i];

                        $r_inp_st_amt    = $_POST['realise_amount_inpocket_stax'.$i]*1;

                        $r_out_st_amt    = $_POST['realise_amount_outpocket_stax'.$i]*1;

                        $r_cns_st_amt    = $_POST['realise_amount_counsel_stax'.$i]*1;

                        $r_inp_nt_amt    = $_POST['realise_amount_inpocket_ntax'.$i]*1;

                        $r_out_nt_amt    = $_POST['realise_amount_outpocket_ntax'.$i]*1;

                        $r_cns_nt_amt    = $_POST['realise_amount_counsel_ntax'.$i]*1;

                        $r_stx_amt       = $_POST['realise_amount_service_tax'.$i]*1;

                        $d_inp_st_amt    = $_POST['deficit_amount_inpocket_stax'.$i]*1;

                        $d_out_st_amt    = $_POST['deficit_amount_outpocket_stax'.$i]*1;

                        $d_cns_st_amt    = $_POST['deficit_amount_counsel_stax'.$i]*1;

                        $d_inp_nt_amt    = $_POST['deficit_amount_inpocket_ntax'.$i]*1;

                        $d_out_nt_amt    = $_POST['deficit_amount_outpocket_ntax'.$i]*1;

                        $d_cns_nt_amt    = $_POST['deficit_amount_counsel_ntax'.$i]*1;

                        $d_stx_amt       = $_POST['deficit_amount_service_tax'.$i]*1;

                        $d_amt_inpocket  = $_POST['deficit_amount_inpocket_stax'.$i]*1 + $_POST['deficit_amount_inpocket_ntax'.$i]*1;

                        $d_amt_outpocket = $_POST['deficit_amount_outpocket_stax'.$i]*1 + $_POST['deficit_amount_outpocket_ntax'.$i]*1;

                        $d_amt_counsel   = $_POST['deficit_amount_counsel_stax'.$i]*1 + $_POST['deficit_amount_counsel_ntax'.$i]*1;

                        $r_amt_inpocket  = $_POST['realise_amount_inpocket_stax'.$i]*1 + $_POST['realise_amount_inpocket_ntax'.$i]*1;

                        $r_amt_outpocket = $_POST['realise_amount_outpocket_stax'.$i]*1 + $_POST['realise_amount_outpocket_ntax'.$i]*1;

                        $r_amt_counsel   = $_POST['realise_amount_counsel_stax'.$i]*1 + $_POST['realise_amount_counsel_ntax'.$i]*1;



                        $updt_stmt   = "update bill_detail set part_full_ind = '$p_f_ind',

                                            booked_amount_inpocket_stax     = ifnull(booked_amount_inpocket_stax,0)    - $r_inp_st_amt,

                                            booked_amount_outpocket_stax    = ifnull(booked_amount_outpocket_stax,0)   - $r_out_st_amt,

                                            booked_amount_counsel_stax      = ifnull(booked_amount_counsel_stax,0)     - $r_cns_st_amt,

                                            booked_amount_inpocket_ntax     = ifnull(booked_amount_inpocket_ntax,0)    - $r_inp_nt_amt,

                                            booked_amount_outpocket_ntax    = ifnull(booked_amount_outpocket_ntax,0)   - $r_out_nt_amt,

                                            booked_amount_counsel_ntax      = ifnull(booked_amount_counsel_ntax,0)     - $r_cns_nt_amt,

                                            booked_amount_inpocket          = ifnull(booked_amount_inpocket,0)         - $r_amt_inpocket,

                                            booked_amount_outpocket         = ifnull(booked_amount_outpocket,0)        - $r_amt_outpocket,

                                            booked_amount_counsel           = ifnull(booked_amount_counsel,0)          - $r_amt_counsel,



                                            booked_amount_service_tax       = ifnull(booked_amount_service_tax,0)      - $r_stx_amt,

                                            realise_amount_inpocket_stax    = ifnull(realise_amount_inpocket_stax,0)   + $r_inp_st_amt,

                                            realise_amount_outpocket_stax   = ifnull(realise_amount_outpocket_stax,0)  + $r_out_st_amt,

                                            realise_amount_counsel_stax     = ifnull(realise_amount_counsel_stax,0)    + $r_cns_st_amt,

                                            realise_amount_inpocket_ntax    = ifnull(realise_amount_inpocket_ntax,0)   + $r_inp_nt_amt,

                                            realise_amount_outpocket_ntax   = ifnull(realise_amount_outpocket_ntax,0)  + $r_out_nt_amt,

                                            realise_amount_counsel_ntax     = ifnull(realise_amount_counsel_ntax,0)    + $r_cns_nt_amt,

                                            realise_amount_inpocket         = ifnull(realise_amount_inpocket,0)        + $r_amt_inpocket,

                                            realise_amount_outpocket        = ifnull(realise_amount_outpocket,0)       + $r_amt_outpocket,

                                            realise_amount_counsel          = ifnull(realise_amount_counsel,0)         + $r_amt_counsel,							   

                                            realise_amount_service_tax      = ifnull(realise_amount_service_tax,0)     + $r_stx_amt,

                                            deficit_amount_inpocket         = ifnull(deficit_amount_inpocket,0)        + $d_amt_inpocket,

                                            deficit_amount_outpocket        = ifnull(deficit_amount_outpocket,0)       + $d_amt_outpocket,

                                            deficit_amount_counsel          = ifnull(deficit_amount_counsel,0)         + $d_amt_counsel,

                                            deficit_amount_inpocket_stax    = ifnull(deficit_amount_inpocket_stax,0)   + $d_inp_st_amt,

                                            deficit_amount_outpocket_stax   = ifnull(deficit_amount_outpocket_stax,0)  + $d_out_st_amt,

                                            deficit_amount_counsel_stax     = ifnull(deficit_amount_counsel_stax,0)    + $d_cns_st_amt,

                                            deficit_amount_inpocket_ntax    = ifnull(deficit_amount_inpocket_ntax,0)   + $d_inp_nt_amt,

                                            deficit_amount_outpocket_ntax   = ifnull(deficit_amount_outpocket_ntax,0)  + $d_out_nt_amt,

                                            deficit_amount_counsel_ntax     = ifnull(deficit_amount_counsel_ntax,0)    + $d_cns_nt_amt,

                                            deficit_amount_service_tax      = ifnull(deficit_amount_service_tax,0)     + $d_stx_amt

                                        where fin_year = '".$_POST['ref_bill_year'.$i]."' and bill_no = '".$_POST['ref_bill_no'.$i]."'";



                        $this->db->query($updt_stmt);

                    } // end of bill_detail updation

                }



                // cash/bank record

                $ld_array = array('ref_ledger_serial_no' => $ref_ledger_serial_no,

                                'branch_code'          => isset($branch_code) ? $branch_code : 0,

                                'main_ac_code'         => $db_main_ac_code,

                                'sub_ac_code'          => $db_sub_ac_code,

                                'narration'            => 'RECEIVED FROM '.stripslashes($_POST['associate_name']),

                                'gross_amount'         => $_POST['net_amount'],

                                'net_amount'           => $_POST['net_amount'],

                                'dr_cr_ind'            => 'D',

                                'record_type'          => 'G',

                                'ref_doc_serial_no'    => $serial_no,

                                'ref_doc_type'         => $_POST['trans_type']);

                $ledgerDetailObj->insert($ld_array);



                // debit voucher detail 

                if($_POST['tax_amount'] > 0) {

                    $cnt+=1;

                    $ld_array = array('ref_ledger_serial_no' => $ref_ledger_serial_no,

                                        'branch_code'          => $branch_code,

                                        'main_ac_code'         => $_POST['tax_account_code'],

                                        'sub_ac_code'          => $_POST['tax_sub_account_code'],

                                        'narration'            => 'TDS',

                                        'gross_amount'         => $_POST['tax_amount'],

                                        'net_amount'           => $_POST['tax_amount'],

                                        'dr_cr_ind'            => 'D',

                                        'record_type'          => 'G',

                                        'ref_doc_serial_no'    => $serial_no,

                                        'ref_doc_type'         => $_POST['trans_type']);

                    $ledgerDetailObj->insert($ld_array);



                    // insert into tds certificate table

                    $tc_array = array('serial_no'            => NULL,

                                        'branch_code'          => $branch_code,

                                        'pay_rcpt_ind'         => 'R',

                                        'ref_ledger_serial_no' => $ref_ledger_serial_no,

                                        'fin_year'             => $global_curr_finyear,

                                        'daybook_code'         => $_POST['daybook_code'],

                                        'doc_no'               => $rv_doc_no,

                                        'doc_date'             => $voucher_date,

                                        'instrument_no'        => $_POST['instrument_no'],

                                        'instrument_dt'        => date_conv($_POST['instrument_dt']),

                                        'bank_name'            => $_POST['bank_name'],

                                        'dr_cr_ind'            => 'C',

                                        'payee_payer_type'     => $_POST['payee_payer_type'],

                                        'payee_payer_code'     => $_POST['associate_code'],

                                        'payee_payer_name'     => stripslashes($_POST['associate_name']),

                                        'nature_of_service'    => '',

                                        'gross_amount'         => $_POST['gross_amount'],

                                        'tax_code'             => $tax_code,

                                        'tax_amount'           => $_POST['tax_amount'],

                                        'net_amount'           => $_POST['net_amount'],

                                        'tds_deposit_ind'      => 'N');

                    $ins_8 = $tdsCertObj->insert($tc_array);

                }

                

                // insert into bank recon table

                if($_POST['instrument_type'] == 'Q' || $_POST['instrument_type'] == 'D') {

                    $br_array = array('serial_no'             => 'NULL',

                                    'ref_ledger_serial_no'  => $ref_ledger_serial_no,

                                    'fin_year'              => $global_curr_finyear,

                                    'branch_code'           => $_POST['branch_code'],

                                    'doc_type'              => 'RV',

                                    'doc_date'              => $voucher_date,

                                    'doc_no'                => $rv_doc_no,

                                    'daybook_code'          => $_POST['daybook_code'],

                                    'instrument_no'         => $_POST['instrument_no'],

                                    'instrument_dt'         => date_conv($_POST['instrument_dt']),

                                    'bank_name'             => $_POST['bank_name'],

                                    'narration'             => 'RECEIVED FROM '.stripslashes($_POST['associate_name']),

                                    'payee_payer_type'      => $_POST['payee_payer_type'],

                                    'payee_payer_code'      => $_POST['associate_code'],

                                    'payee_payer_name'      => stripslashes($_POST['associate_name']),

                                    // 'payment_type'          => $_POST['payment_type'],

                                    'dr_cr_ind'             => 'C',

                                    'amount'                => $_POST['net_amount'],

                                    'status_code'           => 'A');

                    $bankReconObj->insert($br_array);

                }

                

                // debit voucher detail 

                if($_POST['service_tax_amount'] > 0) {

                    $cnt+=1;

                    $ld_array = array('ref_ledger_serial_no' => $ref_ledger_serial_no,

                                        'branch_code'          => $branch_code,

                                        'main_ac_code'         => $_POST['service_tax_account_code'],

                                        'sub_ac_code'          => '',

                                        'narration'            => 'SERVICE TAX',

                                        'gross_amount'         => $_POST['service_tax_amount'],

                                        'net_amount'           => $_POST['service_tax_amount'],

                                        'dr_cr_ind'            => 'C',

                                        'record_type'          => 'G',

                                        'ref_doc_serial_no'    => $serial_no,

                                        'ref_doc_type'         => $_POST['trans_type']);

                    $ledgerDetailObj->insert($ld_array);

                }



                // update voucher header

                $h_array = array('status_code'           => 'C',

                                'ref_ledger_serial_no'  => $ref_ledger_serial_no,

                                'daybook_code'          => $_POST['daybook_code'],

                                'instrument_type'       => $_POST['instrument_type'],

                                'instrument_no'         => $_POST['instrument_no'],

                                'instrument_dt'         => date_conv($_POST['instrument_dt']),

                                'passed_by'             => $global_userid,

                                'passed_on'             => $global_sysdate);

                $voucherHeaderObj->update($h_array,"serial_no = '".$serial_no."'");



                // account balance updation

                $ledger_serial_no = $ref_ledger_serial_no ;

                $this->ledger_posting($ledger_serial_no);

                // end of account balance updation



                // alert final voucher and final jv no

                $message = 'Please note Final Voucher No : ' . $rv_doc_no ;        

                if($rv_doc_no) {

                    session()->setFlashdata('message', $message);

                    return redirect()->to(session()->last_selected_end_menu);

                }

            }

        }



        $clause = ($user_option == 'Add') ? "limit 1" : "";

        $dtl_qry = $this->db->query("Select * from voucher_detail where voucher_detail.ref_voucher_serial_no = '$serial_no' and dr_cr_ind='C' and main_ac_code<>'1424'".$clause)->getResultArray();

        $dtl_data_arr = [];



        foreach($dtl_qry as $key => $dtl_data) {

            $dtl_data_arr[$key]['main_ac_code'] = $main_ac_code = $dtl_data['main_ac_code'];

            $dtl_data_arr[$key]['sub_ac_code'] = $sub_ac_code = $dtl_data['sub_ac_code'];

            $dtl_data_arr[$key]['ref_bill_year'] = $ref_bill_year = $dtl_data['ref_bill_year'];

            $dtl_data_arr[$key]['ref_bill_no'] = $ref_bill_no = $dtl_data['ref_bill_no'];

            $dtl_data_arr[$key]['client_code']                    = $dtl_data['client_code'];

            $dtl_data_arr[$key]['matter_code']                    = $dtl_data['matter_code'];

            $dtl_data_arr[$key]['matter_name']                    = $dtl_data['matter_code'];

            $dtl_data_arr[$key]['initial_code']                   = $dtl_data['initial_code'];

            $dtl_data_arr[$key]['realise_amount_inpocket_stax'] = $dtl_data['realise_amount_inpocket_stax'];

            $dtl_data_arr[$key]['realise_amount_outpocket_stax']  = $dtl_data['realise_amount_outpocket_stax'];

            $dtl_data_arr[$key]['realise_amount_counsel_stax']    = $dtl_data['realise_amount_counsel_stax'];

            $dtl_data_arr[$key]['realise_amount_inpocket_ntax']   = $dtl_data['realise_amount_inpocket_ntax'];

            $dtl_data_arr[$key]['realise_amount_outpocket_ntax']  = $dtl_data['realise_amount_outpocket_ntax'];

            $dtl_data_arr[$key]['realise_amount_counsel_ntax']    = $dtl_data['realise_amount_counsel_ntax'];

            // $dtl_data_arr[$key]['realise_amount_reim']            = $dtl_data['realise_amount_reim'];

            $dtl_data_arr[$key]['realise_amount_service_tax']     = $dtl_data['realise_amount_service_tax'];

            $dtl_data_arr[$key]['deficit_amount_inpocket_stax']   = $dtl_data['deficit_amount_inpocket_stax'];

            $dtl_data_arr[$key]['deficit_amount_outpocket_stax']  = $dtl_data['deficit_amount_outpocket_stax'];

            $dtl_data_arr[$key]['deficit_amount_counsel_stax']    = $dtl_data['deficit_amount_counsel_stax'];

            $dtl_data_arr[$key]['deficit_amount_inpocket_ntax']   = $dtl_data['deficit_amount_inpocket_ntax'];

            $dtl_data_arr[$key]['deficit_amount_outpocket_ntax']  = $dtl_data['deficit_amount_outpocket_ntax'];

            $dtl_data_arr[$key]['deficit_amount_counsel_ntax']    = $dtl_data['deficit_amount_counsel_ntax'];

            // $dtl_data_arr[$key]['deficit_amount_reim']            = $dtl_data['deficit_amount_reim'];

            $dtl_data_arr[$key]['deficit_amount_service_tax']     = $dtl_data['deficit_amount_service_tax'];

            $dtl_data_arr[$key]['narration']                      = $dtl_data['narration'];

            $dtl_data_arr[$key]['total_amount']                   = $dtl_data['gross_amount'];

            $dtl_data_arr[$key]['part_full_ind']                  = $dtl_data['part_full_ind'];

            $dtl_data_arr[$key]['os_amount_inpocket']             = '';

            $dtl_data_arr[$key]['os_amount_outpocket']            = '';

            $dtl_data_arr[$key]['os_amount_counsel']              = '';

            $dtl_data_arr[$key]['os_amount_service_tax']          = '';

            

            // os amount calculation

            if(!empty($ref_bill_no) && $ref_bill_year != 'ON AC' && $ref_bill_year != 'ADVEXP' && $ref_bill_year != 'UNKNOWN') {

                $res_stmt = "select * from bill_detail where fin_year = '".$ref_bill_year."' and bill_no = '".$ref_bill_no."'";

                $row = $this->db->query($res_stmt)->getRowArray();

                

                $dtl_data_arr[$key]['bill_amount_inpocket_stax']     = (empty($row) || isset($dtl_data['realise_amount_inpocket_stax'])) ? 0 : number_format(($dtl_data['realise_amount_inpocket_stax']    + $row['bill_amount_inpocket_stax'])  - (isset($row['advance_amount_inpocket_stax']) ? $row['advance_amount_inpocket_stax'] : 0  + $row['realise_amount_inpocket_stax']    + $row['deficit_amount_inpocket_stax']    + $row['booked_amount_inpocket_stax']),2,'.','');

                $dtl_data_arr[$key]['bill_amount_outpocket_stax']    = (empty($row) || isset($dtl_data['realise_amount_outpocket_stax'])) ? 0 : number_format(($dtl_data['realise_amount_outpocket_stax']   + $row['bill_amount_outpocket_stax']) - (isset($row['advance_amount_outpocket_stax']) ? $row['advance_amount_outpocket_stax'] : 0 + $row['realise_amount_outpocket_stax']   + $row['deficit_amount_outpocket_stax']   + $row['booked_amount_outpocket_stax']),2,'.','');

                $dtl_data_arr[$key]['bill_amount_counsel_stax']      = (empty($row) || isset($dtl_data['realise_amount_counsel_stax'])) ? 0 : number_format(($dtl_data['realise_amount_counsel_stax']     + $row['bill_amount_counsel_stax'])   - (isset($row['advance_amount_counsel_stax']) ? $row['advance_amount_counsel_stax'] : 0   + $row['realise_amount_counsel_stax']     + $row['deficit_amount_counsel_stax']     + $row['booked_amount_counsel_stax']),2,'.','');

                $dtl_data_arr[$key]['bill_amount_inpocket_ntax']     = (empty($row) || isset($dtl_data['realise_amount_inpocket_ntax'])) ? 0 : number_format(($dtl_data['realise_amount_inpocket_ntax']    + $row['bill_amount_inpocket_ntax'])  - (isset($row['advance_amount_inpocket_ntax']) ? $row['advance_amount_inpocket_ntax'] : 0  + $row['realise_amount_inpocket_ntax']    + $row['deficit_amount_inpocket_ntax']    + $row['booked_amount_inpocket_ntax']),2,'.','');

                $dtl_data_arr[$key]['bill_amount_counsel_ntax']      = (empty($row) || isset($dtl_data['realise_amount_counsel_ntax'])) ? 0 : number_format(($dtl_data['realise_amount_counsel_ntax']     + $row['bill_amount_counsel_ntax'])   - (isset($row['advance_amount_counsel_ntax']) ? $row['advance_amount_counsel_ntax'] : 0   + $row['realise_amount_counsel_ntax']     + $row['deficit_amount_counsel_ntax']     + $row['booked_amount_counsel_ntax']),2,'.','');

                $dtl_data_arr[$key]['bill_amount_outpocket_ntax']    = (empty($row) || isset($dtl_data['realise_amount_outpocket_ntax'])) ? 0 : number_format(($dtl_data['realise_amount_outpocket_ntax']   + $row['bill_amount_outpocket_ntax']) - (isset($row['advance_amount_outpocket_ntax']) ? $row['advance_amount_outpocket_ntax'] : 0 + $row['realise_amount_outpocket_ntax']   + $row['deficit_amount_outpocket_ntax']   + $row['booked_amount_outpocket_ntax']),2,'.','');

                $dtl_data_arr[$key]['os_amount_service_tax']         = (empty($row) || isset($dtl_data['realise_amount_service_tax'])) ? 0 : number_format(($dtl_data['realise_amount_service_tax']      + $row['service_tax_amount'])         - (isset($row['advance_amount_service_tax']) ? $row['advance_amount_service_tax'] : 0    + $row['realise_amount_service_tax']      + $row['deficit_amount_service_tax']      + $row['booked_amount_service_tax']),2,'.','');

            } // end of os amount calculation



            // account description 

            $row = $this->db->query("select main_ac_desc,sub_ac_ind from account_master where main_ac_code = '$main_ac_code'")->getRowArray();

            $dtl_data_arr[$key]['ac_desc'] = isset($row['main_ac_desc']) ? $row['main_ac_desc'] : '';

            $dtl_data_arr[$key]['sub_ac_ind'] = isset($row['sub_ac_ind']) ? $row['sub_ac_ind'] : '';



            // sub account description 

            $row = $this->db->query("select sub_ac_desc from sub_account_master where main_ac_code = '$main_ac_code' and sub_ac_code='$sub_ac_code'")->getRowArray();

            $dtl_data_arr[$key]['sub_ac_desc'] = isset($row['sub_ac_desc']) ? $row['sub_ac_desc'] : '';

        }



        // financial year selection 

        $years = $this->db->query("select fin_year from params order by fin_year desc")->getResultArray();

        

        $params = [

            'serial_no' => $serial_no,

            'link_jv_serial_no' => isset($link_jv_serial_no) ? $link_jv_serial_no : '',

            'status_code' => $status_code,

            'status_desc' => $status_desc,

            'colour_s' => $colour_s,

            'entry_date' => $entry_date,

            'payee_payer_type' => $payee_payer_type,

            'associate_name' => $associate_name,

            'associate_code' => $associate_code,

            'payment_type' => $payment_type,

            'remarks' => $remarks,

            // 'dtl_data_sql' => $dtl_data_sql,

            'billable_ind_desc' => isset($billable_ind_desc) ? $billable_ind_desc : '',

            // 'daybook_qry' => $daybook_qry,

            'daybook_desc' => $daybook_desc,

            'daybook_type' => $daybook_type,

            'global_sysdate' => $global_sysdate,

            'global_curr_finyr_fymddate' => $global_curr_finyr_fymddate,

            'global_curr_finyr_lymddate' => $global_curr_finyr_lymddate,

            'daybook_code' => $daybook_code,

            'instrument_type' => $instrument_type,

            'instrument_no' => isset($instrument_no) ? $instrument_no : '',

            'instrument_dt' => isset($instrument_dt) ? $instrument_dt : '',

            'gross_amount' => isset($gross_amount) ? $gross_amount : '',

            'total_basic_amount' => isset($total_basic_amount) ? $total_basic_amount : '',

            'total_newtax_amount' => isset($total_newtax_amount) ? $total_newtax_amount : '',

            'total_newcess_amount' => isset($total_newcess_amount) ? $total_newcess_amount : '',

            'total_newhecess_amount' => isset($total_newhecess_amount) ? $total_newhecess_amount : '',

            'tax_code' => isset($tax_code) ? $tax_code : '',

            'tax_account_code' => isset($tax_account_code) ? $tax_account_code : '',

            'tax_sub_account_code' => isset($tax_sub_account_code) ? $tax_sub_account_code : '',

            'tax_percent' => isset($tax_percent) ? $tax_percent : '',

            'tax_amount' => isset($tax_amount) ? $tax_amount : '',

            'net_amount' => isset($net_amount) ? $net_amount : '',

            'row_count' => isset($row_count['totalRow']) ? $row_count['totalRow'] : $row_count,

            'trans_type' => isset($trans_type) ? $trans_type : '',

            'global_curr_finyear' => isset($global_curr_finyear) ? $global_curr_finyear : '',

            'tax_account_desc' => isset($tax_account_desc) ? $tax_account_desc : '',

            // 'pan_no' => $pan_no,

            // 'prepared_by' => $prepared_by,

            // 'prepared_on' => $prepared_on,

            // 'paid_by' => $paid_by,

            // 'paid_on' => $paid_on,

            'global_userid' => $global_userid,

            'received_from' => $received_from,

            'service_tax_amount' => isset($service_tax_amount) ? $service_tax_amount : '',

            'service_tax_account_code' => isset($service_tax_account_code) ? $service_tax_account_code : '',

            // 'instrument_no ' => $instrument_no ,

            // 'instrument_dt' => $instrument_dt,

            // 'final_voucher_date' => $final_voucher_date,

            'bank_name' => isset($bank_name) ? $bank_name : '',

        ];



        return view("pages/Finance/Vouchers/receipt_bill_adjustment_client", compact('params', 'data', 'tag_permissions', 'user_option', 'status_code', 'years', 'dtl_data_arr', 'selemode', 'displayId'));

    }



    public function receipt_voucher_bulk() { 

        $global_userid = $user_id = session()->userId;

        $data = branches($user_id); $global_curr_finyear = session()->financialYear;

        $global_dmydate = date('d-m-Y'); $global_sysdate = date_conv($global_dmydate); 

        $data['requested_url'] = session()->requested_end_menu_url;

        $displayId = ['advance_help_id' => 4541];

        

        $global_curr_finyr_fymddate = substr($global_curr_finyear, 0, 4).'-04-01';

        $global_curr_finyr_lymddate = substr($global_curr_finyear, 5, 4).'-03-31';



        $selemode   = isset($_REQUEST['selemode']) ? $_REQUEST['selemode'] : null;

        $user_option = isset($_REQUEST['user_option'])?$_REQUEST['user_option']:null;

        $serial_no   = isset($_REQUEST['serial_no'])?$_REQUEST['serial_no']:null;



        if($selemode != 'Y') { 

            $branch_qry  = $this->db->query(session()->branch_selection_stmt)->getResultArray();

            $finyr_qry   = $this->db->query("select fin_year from params order by fin_year desc ")->getResultArray();



            if ($selemode != 'Y') {

                $rowoptn = ''; $billyr = ''; $billno = ''; $matr_code = ''; $iposamt_stax = ''; $oposamt_stax = ''; $cnosamt_stax = ''; $iposamt_ntax = ''; $oposamt_ntax = ''; $cnosamt_ntax = ''; $stosamt = '';

                $ipcolamt_stax = ''; $opcolamt_stax = ''; $cncolamt_stax = ''; $ipcolamt_ntax = ''; $opcolamt_ntax = ''; $cncolamt_ntax = ''; $stcolamt = ''; $pfind = ''; $lineno = '';  $voucher_row_no = ''; $old_billyr = '';

                $old_billno = ''; $old_matr_code = ''; $old_ipcolamt_stax = ''; $old_opcolamt_stax = ''; $old_cncolamt_stax = ''; $old_ipcolamt_ntax = ''; $old_opcolamt_ntax = ''; $old_cncolamt_ntax = ''; $old_stcolamt = '';

                $old_ipdefamt_stax = ''; $old_opdefamt_stax = ''; $old_cndefamt_stax = '';  $old_ipdefamt_ntax = ''; $old_opdefamt_ntax = ''; $old_cndefamt_ntax = ''; $old_stdefamt = ''; $old_pfind = ''; 



                if ($user_option == 'Add') {

                    $redv = '' ;  $disv = '' ;

                    

                    $voucher_serial_no   = isset($_REQUEST['voucher_serial_no'])?$_REQUEST['voucher_serial_no']:'';

                    $branch_code         = isset($_REQUEST['branch_code'])?$_REQUEST['branch_code']:session()->user_qry['branch_code'] ;

                    $fin_year            = isset($_REQUEST['fin_year'])?$_REQUEST['fin_year']:$global_curr_finyear ;

                    $voucher_serial_date = isset($_REQUEST['voucher_serial_date'])?$_REQUEST['voucher_serial_date']:$global_dmydate ;

                    $advance_serial_no   = isset($_REQUEST['advance_serial_no'])?$_REQUEST['advance_serial_no']:'';

                    $client_code         = isset($_REQUEST['client_code'])?$_REQUEST['client_code']:'';

                    $matter_code         = isset($_REQUEST['matter_code'])?$_REQUEST['matter_code']:'';

                    $client_name         = isset($_REQUEST['client_name'])?$_REQUEST['client_name']:'';

                    $matter_desc         = isset($_REQUEST['matter_desc'])?$_REQUEST['matter_desc']:'';

                    $advance_amount      = isset($_REQUEST['advance_amount'])?$_REQUEST['advance_amount']:0 ;

                    $adjusted_amount     = isset($_REQUEST['adjusted_amount'])?$_REQUEST['adjusted_amount']:0 ;

                    $balance_amount      = isset($_REQUEST['balance_amount'])?$_REQUEST['balance_amount']:0 ;

                    $now_adjusted_amount = isset($_REQUEST['now_adjusted_amount'])?$_REQUEST['now_adjusted_amount']:0 ;



                } else if ($user_option == 'Edit') {

                    $redv = 'readonly' ;  $disv = 'disabled' ;

               

                    $fin_year            = isset($_REQUEST['fin_year'])?$_REQUEST['fin_year']:$global_curr_finyear ;

                    $voucher_serial_no   = isset($_REQUEST['voucher_serial_no'])?$_REQUEST['voucher_serial_no']:'';

                

                    $vchhdr_qry          = $this->db->query("select * from voucher_header where serial_no = '$voucher_serial_no' ")->getRowArray();

                    $branch_code         = $vchhdr_qry['branch_code'] ;

                    $voucher_serial_date = date_conv($vchhdr_qry['entry_date']) ;

                    $advance_serial_no   = $vchhdr_qry['ref_advance_serial_no'] ;

                    $now_adjusted_amount = $vchhdr_qry['gross_amount'] ;

                    $client_code         = $vchhdr_qry['client_code'] ;

                    $client_name         = getClientName($client_code,$link);

                    $advance_qry         = $this->db->query("select * from voucher_header where serial_no = '$voucher_serial_no' ")->getRowArray();

                    $client_code         = $advance_qry['client_code'] ;

                    $matter_code         = $advance_qry['matter_code'] ;

                    $advance_amount      = $advance_qry['gross_amount'] ;

                    $adjusted_amount     = $advance_qry['adjusted_amount'] ;

                    $balance_amount      = ($advance_qry['gross_amount'] - $advance_qry['adjusted_amount'] - $advance_qry['booked_amount']) + $now_adjusted_amount ;

                    $client_name         = getClientName($client_code,$link) ;

                    $matter_desc         = getMatterDesc($client_code,$matter_code,$link) ;

                } 

            } else {

                $redv = 'readonly' ;  $disv = 'disabled' ;

                

                $voucher_serial_no   = isset($_REQUEST['voucher_serial_no'])?$_REQUEST['voucher_serial_no']:'';

                $branch_code         = isset($_REQUEST['branch_code'])?$_REQUEST['branch_code']:session()->user_qry['branch_code'] ;

                $fin_year            = isset($_REQUEST['fin_year'])?$_REQUEST['fin_year']:$global_curr_finyear ;

                $voucher_serial_date = isset($_REQUEST['voucher_serial_date'])?$_REQUEST['voucher_serial_date']:$global_dmydate ;

                $advance_serial_no   = isset($_REQUEST['advance_serial_no'])?$_REQUEST['advance_serial_no']:'';

                $client_code         = isset($_REQUEST['client_code'])?$_REQUEST['client_code']:'';

                $matter_code         = isset($_REQUEST['matter_code'])?$_REQUEST['matter_code']:'';

                $advance_amount      = isset($_REQUEST['advance_amount'])?$_REQUEST['advance_amount']:0 ;

                $adjusted_amount     = isset($_REQUEST['adjusted_amount'])?$_REQUEST['adjusted_amount']:0 ;

                $balance_amount      = isset($_REQUEST['balance_amount'])?$_REQUEST['balance_amount']:0 ;

                $now_adjusted_amount = isset($_REQUEST['now_adjusted_amount'])?$_REQUEST['now_adjusted_amount']:0 ;

                $client_name         = getClientName($client_code,$link) ;

                $matter_desc         = getMatterDesc($client_code,$matter_code,$link) ;



                //---- Detail

                $vchdtl_sql  = "select * from voucher_detail a where a.ref_voucher_serial_no = '$voucher_serial_no' order by a.row_no " ;

                $vchdtl_qry = $this->db->query($vchdtl_sql)->getResultArray();

                $vchdtl_cnt = count($vchdtl_qry);

            }



        } else {

            $mode = isset($_REQUEST['mode'])?$_REQUEST['mode']:null;

            $msg  = isset($_REQUEST['error_string'])?$_REQUEST['error_string']:null;



            if ($mode == 'myCheckAdvanceSerial') {

               $voucher_serial_no = isset($_REQUEST['voucher_serial_no'])?$_REQUEST['voucher_serial_no']:null ;

          

               $my_sql1  = "select * from voucher_header where serial_no = '$voucher_serial_no' " ;

               $my_qry1  = $this->db->query($my_sql1)->getResultArray();

               $my_cnt1  = count($my_qry1) ; 

               $my_arr1  = $my_qry1[0];

          

               if ($my_cnt1 == 0) {

                  $retvalue = 'N'.'|'.'Voucher Details not found ......'.'|' ;

               } else {

                  $retvalue = 'Y'.'|'.'Voucher Details found ......'.'|'.$my_arr1['client_code'].'|'.$my_arr1['matter_code'].'|'.$my_arr1['gross_amount'].'|'.($my_arr1['adjusted_amount']+$my_arr1['booked_amount']).'|'.($my_arr1['gross_amount']-($my_arr1['adjusted_amount']+$my_arr1['booked_amount'])).'|'.getClientName($my_arr1['client_code'],$link).'|'.getMatterDesc($my_arr1['client_code'],$my_arr1['matter_code'],$link).'|' ;

               }    

                    

               echo $retvalue ;



            } else if ($mode == 'myCheckBillDetails') {

               $clntcd = isset($_REQUEST['client_code'])?$_REQUEST['client_code']:null ;

               $matrcd = isset($_REQUEST['matter_code'])?$_REQUEST['matter_code']:null ;

               $billyr = isset($_REQUEST['bill_year'])?$_REQUEST['bill_year']:null ;

               $billno = isset($_REQUEST['bill_no'])?$_REQUEST['bill_no']:null ;

              

               $my_sql1  = "select * from bill_detail where fin_year = '$billyr' and bill_no = '$billno' " ;

               $my_qry1  = $this->db->query($my_sql1)->getResultArray();

               $my_cnt1  = count($my_qry1) ; 

               $my_arr1  = $my_qry1[0];

              

               $clnt_code      =  $my_arr1['client_code'] ;   

               $matr_code      =  $my_arr1['matter_code'] ;   

               $bill_amt       =  $my_arr1['bill_amount_inpocket']    + $my_arr1['bill_amount_outpocket']    + $my_arr1['bill_amount_counsel']     + $my_arr1['service_tax_amount'];   

               $adv_amt        =  $my_arr1['advance_amount_inpocket'] + $my_arr1['advance_amount_outpocket'] + $my_arr1['advance_amount_counsel']  + $my_arr1['advance_amount_service_tax'];   

               $real_amt       =  $my_arr1['realise_amount_inpocket'] + $my_arr1['realise_amount_outpocket'] + $my_arr1['realise_amount_counsel']  + $my_arr1['realise_amount_service_tax'];   

               $defc_amt       =  $my_arr1['deficit_amount_inpocket'] + $my_arr1['deficit_amount_outpocket'] + $my_arr1['deficit_amount_counsel']  + $my_arr1['deficit_amount_service_tax'];   

               $book_amt       =  $my_arr1['booked_amount_inpocket']  + $my_arr1['booked_amount_outpocket']  + $my_arr1['booked_amount_counsel']   + $my_arr1['booked_amount_service_tax'];   

               $os_amt         =  $bill_amt - ($adv_amt + $real_amt + $defc_amt + $book_amt) ;

               

               $iposamt_stax   =  $my_arr1['bill_amount_inpocket_stax']   - ($my_arr1['realise_amount_inpocket_stax']    + $my_arr1['deficit_amount_inpocket_stax']    + $my_arr1['booked_amount_inpocket_stax']) ;

               $oposamt_stax   =  $my_arr1['bill_amount_outpocket_stax']  - ($my_arr1['realise_amount_outpocket_stax']   + $my_arr1['deficit_amount_outpocket_stax']   + $my_arr1['booked_amount_outpocket_stax']) ;

               $cnosamt_stax   =  $my_arr1['bill_amount_counsel_stax']    - ($my_arr1['realise_amount_counsel_stax']     + $my_arr1['deficit_amount_counsel_stax']     + $my_arr1['booked_amount_counsel_stax']) ;

               $iposamt_ntax   =  $my_arr1['bill_amount_inpocket_ntax']   - ($my_arr1['realise_amount_inpocket_ntax']    + $my_arr1['deficit_amount_inpocket_ntax']    + $my_arr1['booked_amount_inpocket_ntax']) ;

               $oposamt_ntax   =  $my_arr1['bill_amount_outpocket_ntax']  - ($my_arr1['realise_amount_outpocket_ntax']   + $my_arr1['deficit_amount_outpocket_ntax']   + $my_arr1['booked_amount_outpocket_ntax']) ;

               $cnosamt_ntax   =  $my_arr1['bill_amount_counsel_ntax']    - ($my_arr1['realise_amount_counsel_ntax']     + $my_arr1['deficit_amount_counsel_ntax']     + $my_arr1['booked_amount_counsel_ntax']) ;

               

               $iposamt        = $iposamt_stax + $iposamt_ntax ;

               $oposamt        = $oposamt_stax + $oposamt_ntax ;

               $cnosamt        = $cnosamt_stax + $cnosamt_ntax ;

               

               $stosamt       =  $my_arr1['service_tax_amount'] - ($my_arr1['advance_amount_service_tax'] + $my_arr1['realise_amount_service_tax'] + $my_arr1['deficit_amount_service_tax'] + $my_arr1['booked_amount_service_tax']) ;

               

               if ($my_cnt1 == 0) {

                  $retvalue = 'N'.'|'.'Bill Details not found ......'.'|' ;

               } else if ($clnt_code != $clntcd) {

                  $retvalue = 'N'.'|'.'Bill does not belongs to the selected Client ......'.'|' ;

               } else if ($matrcd != $clntcd && $matr_code != $matrcd) {

                  $retvalue = 'N'.'|'.'Bill does not belongs to the selected Matter ......'.'|' ;

               } else if ($os_amt <= 0) {

                  $retvalue = 'N'.'|'.'Bill has already been SETTLED ......'.'|' ;

               } else {

                  $retvalue = 'Y'.'|'.'Bill Details found ......'.'|'.$matr_code.'|'.$iposamt_stax.'|'.$oposamt_stax.'|'.$cnosamt_stax.'|'.$iposamt_ntax.'|'.$oposamt_ntax.'|'.$cnosamt_ntax.'|'.$stosamt.'|' ;          

               }    

               echo $retvalue ;

                    

            } else if ($mode == 'myGetBillOs') {

               $billyr = isset($_REQUEST['bill_year'])?$_REQUEST['bill_year']:null ;

               $billno = isset($_REQUEST['bill_no'])?$_REQUEST['bill_no']:null ;

               

               $my_sql1   = "select * from bill_detail where fin_year = '$billyr' and bill_no = '$billno' " ;

               $my_qry1   = $this->db->query($my_sql1)->getResultArray();

               $my_cnt1   = count($my_qry1) ; 

               $my_arr1   = $my_qry1[0];

                

               $matr_code =  $my_arr1['matter_code'];  

          

               $iposamt_stax   =  $my_arr1['bill_amount_inpocket_stax']  - ($my_arr1['realise_amount_inpocket_stax']  + $my_arr1['deficit_amount_inpocket_stax']  + $my_arr1['booked_amount_inpocket_stax']);

               $oposamt_stax   =  $my_arr1['bill_amount_outpocket_stax'] - ($my_arr1['realise_amount_outpocket_stax'] + $my_arr1['deficit_amount_outpocket_stax'] + $my_arr1['booked_amount_outpocket_stax']);

               $cnosamt_stax   =  $my_arr1['bill_amount_counsel_stax']   - ($my_arr1['realise_amount_counsel_stax']   + $my_arr1['deficit_amount_counsel_stax']   + $my_arr1['booked_amount_counsel_stax']);

               $iposamt_ntax   =  $my_arr1['bill_amount_inpocket_ntax']  - ($my_arr1['realise_amount_inpocket_ntax']  + $my_arr1['deficit_amount_inpocket_ntax']  + $my_arr1['booked_amount_inpocket_ntax']);

               $oposamt_ntax   =  $my_arr1['bill_amount_outpocket_ntax'] - ($my_arr1['realise_amount_outpocket_ntax'] + $my_arr1['deficit_amount_outpocket_ntax'] + $my_arr1['booked_amount_outpocket_ntax']);

               $cnosamt_ntax   =  $my_arr1['bill_amount_counsel_ntax']   - ($my_arr1['realise_amount_counsel_ntax']   + $my_arr1['deficit_amount_counsel_ntax']   + $my_arr1['booked_amount_counsel_ntax']);

          

               $iposamt = $iposamt_stax + $iposamt_ntax ;

               $oposamt = $oposamt_stax + $oposamt_ntax ;

               $cnosamt = $cnosamt_stax + $cnosamt_ntax ;

          

                $stosamt =  $my_arr1['service_tax_amount'] - ($my_arr1['advance_amount_service_tax'] + $my_arr1['realise_amount_service_tax'] + $my_arr1['deficit_amount_service_tax'] + $my_arr1['booked_amount_service_tax']) ;

               

                if ($my_cnt1 == 0) {

                    $retvalue = 'N'.'|'.'Bill Details not found ......'.'|' ;

                } else {

                    $retvalue = 'Y'.'|'.'Bill Details found ......'.'|'.$matr_code.'|'.$iposamt_stax.'|'.$oposamt_stax.'|'.$cnosamt_stax.'|'.$iposamt_ntax.'|'.$oposamt_ntax.'|'.$cnosamt_ntax.'|'.$stosamt.'|' ;

                }    

                echo $retvalue;

                    

            } else if ($mode == 'myBillJVData') {

               $voucher_serial_no   = isset($_REQUEST['voucher_serial_no'])?$_REQUEST['voucher_serial_no']:null ; 

               $branch_code         = isset($_REQUEST['branch_code'])?$_REQUEST['branch_code']:null ;

               $fin_year            = isset($_REQUEST['fin_year'])?$_REQUEST['fin_year']:null ;

               $voucher_serial_date = isset($_REQUEST['voucher_serial_date'])?$_REQUEST['voucher_serial_date']:null ;

               $advance_serial_no   = isset($_REQUEST['advance_serial_no'])?$_REQUEST['advance_serial_no']:null ; 

               $client_code         = isset($_REQUEST['client_code'])?$_REQUEST['client_code']:null ;

               $matter_code         = isset($_REQUEST['matter_code'])?$_REQUEST['matter_code']:null ;

               //

               $rowoptn             = isset($_REQUEST['rowoptn'])?$_REQUEST['rowoptn']:null ;

               $bill_year           = isset($_REQUEST['bill_year'])?$_REQUEST['bill_year']:null ;

               $bill_no             = isset($_REQUEST['bill_no'])?$_REQUEST['bill_no']:null ;

               $clntcd              = $client_code ;

               $matrcd              = isset($_REQUEST['matrcd'])?$_REQUEST['matrcd']:null ;

               $intlcd              = getMatterInitial($matrcd,$link);

          

               $iposamt_stax        = !empty($_REQUEST['iposamt_stax'])?$_REQUEST['iposamt_stax']:0 ;

               $oposamt_stax        = !empty($_REQUEST['oposamt_stax'])?$_REQUEST['oposamt_stax']:0 ;

               $cnosamt_stax        = !empty($_REQUEST['cnosamt_stax'])?$_REQUEST['cnosamt_stax']:0 ;

          

               $iposamt_ntax        = !empty($_REQUEST['iposamt_ntax'])?$_REQUEST['iposamt_ntax']:0 ;

               $oposamt_ntax        = !empty($_REQUEST['oposamt_ntax'])?$_REQUEST['oposamt_ntax']:0 ;

               $cnosamt_ntax        = !empty($_REQUEST['cnosamt_ntax'])?$_REQUEST['cnosamt_ntax']:0 ;

          

               $iposamt             = $iposamt_stax + $iposamt_ntax ;

               $oposamt             = $oposamt_stax + $oposamt_ntax ;

               $cnosamt             = $cnosamt_stax + $cnosamt_ntax ;

          

               $stosamt             = !empty($_REQUEST['stosamt'])?$_REQUEST['stosamt']:0 ;

          

               $ipcolamt_stax       = !empty($_REQUEST['ipcolamt_stax'])?$_REQUEST['ipcolamt_stax']:0 ;

               $opcolamt_stax       = !empty($_REQUEST['opcolamt_stax'])?$_REQUEST['opcolamt_stax']:0 ;

               $cncolamt_stax       = !empty($_REQUEST['cncolamt_stax'])?$_REQUEST['cncolamt_stax']:0 ;

          

               $ipcolamt_ntax       = !empty($_REQUEST['ipcolamt_ntax'])?$_REQUEST['ipcolamt_ntax']:0 ;

               $opcolamt_ntax       = !empty($_REQUEST['opcolamt_ntax'])?$_REQUEST['opcolamt_ntax']:0 ;

               $cncolamt_ntax       = !empty($_REQUEST['cncolamt_ntax'])?$_REQUEST['cncolamt_ntax']:0 ;

          

          

          

               $ipcolamt            = $ipcolamt_stax + $ipcolamt_ntax ;

               $opcolamt            = $opcolamt_stax + $opcolamt_ntax ;

               $cncolamt            = $cncolamt_stax + $cncolamt_ntax ;

          

               $stcolamt            = isset($_REQUEST['stcolamt'])?$_REQUEST['stcolamt']:null ;

          

               $pfind               = isset($_REQUEST['pfind'])?$_REQUEST['pfind']:null ;

          

          

               $ipdefamt_stax       = 0.00;

               $opdefamt_stax       = 0.00;

               $cndefamt_stax		  = 0.00;

                  

               $ipdefamt_ntax       = 0.00;

               $opdefamt_ntax       = 0.00;

               $cndefamt_ntax       = 0.00;

          

               $ipdefamt            = 0.00; 

               $opdefamt            = 0.00; 

               $cndefamt            = 0.00; 

          

               $stdefamt            = 0.00; 

          

               $totcolamt           = number_format(($ipcolamt_stax+$opcolamt_stax+$cncolamt_stax+$ipcolamt_ntax+$opcolamt_ntax+$cncolamt_ntax+$stcolamt),2,'.','') ;

          

               if($pfind == 'F') { 

                   $ipdefamt_stax =  ($iposamt_stax - $ipcolamt_stax); 

                   $opdefamt_stax =  ($oposamt_stax - $opcolamt_stax);

                   $cndefamt_stax =  ($cnosamt_stax - $cncolamt_stax); 

             

                   $ipdefamt_ntax =  ($iposamt_ntax - $ipcolamt_ntax); 

                   $opdefamt_ntax =  ($oposamt_ntax - $opcolamt_ntax); 

                   $cndefamt_ntax =  ($cnosamt_ntax - $cncolamt_ntax); 

             

             

             

                   $ipdefamt      =  $ipdefamt_stax + $ipdefamt_ntax ; 

                   $opdefamt      =  $opdefamt_stax + $opdefamt_ntax ; 

                   $cndefamt      =  $cndefamt_stax + $cndefamt_ntax ;

              

                   $stdefamt      =  ($stosamt - $stcolamt); 

                

                } 

               

               $voucher_row_no      = isset($_REQUEST['voucher_row_no'])?$_REQUEST['voucher_row_no']:null ;

               $old_bill_year       = isset($_REQUEST['old_bill_year'])?$_REQUEST['old_bill_year']:null ;

               $old_bill_no         = isset($_REQUEST['old_bill_no'])?$_REQUEST['old_bill_no']:null ;

               $old_matrcd          = isset($_REQUEST['old_matrcd'])?$_REQUEST['old_matrcd']:null ;

          

               $old_ipcolamt_stax   = !empty($_REQUEST['old_ipcolamt_stax'])?$_REQUEST['old_ipcolamt_stax']:0 ;

               $old_opcolamt_stax   = !empty($_REQUEST['old_opcolamt_stax'])?$_REQUEST['old_opcolamt_stax']:0 ;

               $old_cncolamt_stax   = !empty($_REQUEST['old_cncolamt_stax'])?$_REQUEST['old_cncolamt_stax']:0 ;

          

               $old_ipcolamt_ntax   = !empty($_REQUEST['old_ipcolamt_ntax'])?$_REQUEST['old_ipcolamt_ntax']:0 ;

               $old_opcolamt_ntax   = !empty($_REQUEST['old_opcolamt_ntax'])?$_REQUEST['old_opcolamt_ntax']:0 ;

               $old_cncolamt_ntax   = !empty($_REQUEST['old_cncolamt_ntax'])?$_REQUEST['old_cncolamt_ntax']:0 ;

          

          

               $old_ipcolamt =  $old_ipcolamt_stax + $old_ipcolamt_ntax;

               $old_opcolamt =  $old_opcolamt_stax + $old_opcolamt_ntax;

               $old_cncolamt =  $old_cncolamt_stax + $old_cncolamt_ntax;

          

               $old_stcolamt = !empty($_REQUEST['old_stcolamt'])?$_REQUEST['old_stcolamt']:0 ;

          

               $old_ipdefamt_stax = !empty($_REQUEST['old_ipdefamt_stax'])?$_REQUEST['old_ipdefamt_stax']:0 ;

               $old_opdefamt_stax = !empty($_REQUEST['old_opdefamt_stax'])?$_REQUEST['old_opdefamt_stax']:0 ;

               $old_cndefamt_stax = !empty($_REQUEST['old_cndefamt_stax'])?$_REQUEST['old_cndefamt_stax']:0 ;

          

               $old_ipdefamt_ntax = !empty($_REQUEST['old_ipdefamt_ntax'])?$_REQUEST['old_ipdefamt_ntax']:0 ;

               $old_opdefamt_ntax = !empty($_REQUEST['old_opdefamt_ntax'])?$_REQUEST['old_opdefamt_ntax']:0 ;

               $old_cndefamt_ntax = !empty($_REQUEST['old_cndefamt_ntax'])?$_REQUEST['old_cndefamt_ntax']:0 ;



               $old_ipdefamt = $old_ipdefamt_stax + $old_ipdefamt_ntax ;

               $old_opdefamt = $old_opdefamt_stax + $old_opdefamt_ntax ;

               $old_cndefamt = $old_cndefamt_stax + $old_cndefamt_ntax ;

          

               $old_stdefamt        = isset($_REQUEST['old_stdefamt'])?$_REQUEST['old_stdefamt']:null ;

               $old_pfind           = isset($_REQUEST['pfind'])?$_REQUEST['old_pfind']:null ;

               $old_totcolamt       = number_format(($old_ipcolamt+$old_opcolamt+$old_cncolamt+$old_stcolamt), 2, '.', '');



               $voucherHeaderObj = $this->db->table("voucher_header"); // object : voucher header

               $voucherDetailObj = $this->db->table("voucher_detail"); // object : voucher detail

               $advanceDetailObj = $this->db->table("advance_details"); // object : advance details

               $billDetailObj = $this->db->table("bill_detail"); // object : bill detail



               $doc_type      = 'JV';

               $ref_doc_type  = 'BJ';

               $narration     = "BILL : ".$bill_year.'/'.$bill_no." ADJUSTED AGAINST ADVANCE NO ".$advance_serial_no ;



               $row = $this->db->query("select key_value from control_keycodes where key_code = '017'")->getRowArray();

               $daybook_code = $row['key_value'];



               $row = $this->db->query("select key_value from control_keycodes where key_code = '008'")->getRowArray();

               $main_ac_code = $row['key_value'];

               $sub_ac_code  = '';

               

               //--- Voucher Header

               if ($voucher_serial_no == '') {

                    $vh_array = array('serial_no'             => '',

                                    'branch_code'           => $branch_code,

                                    'entry_date'            => date_conv($voucher_serial_date),

                                    'trans_type'            => $ref_doc_type,

                                    'voucher_type'          => $doc_type,

                                    'payee_payer_type'      => NULL,

                                    'payee_payer_code'      => NULL,

                                    'payee_payer_name'      => NULL,

                                        'received_from'         => NULL,

                                    'payment_type'          => NULL,

                                    'daybook_code'          => $daybook_code,

                                    'instrument_type'       => NULL,

                                    'instrument_no'         => NULL,

                                    'instrument_dt'         => NULL,

                                    'bank_name'             => NULL,

                                    'gross_amount'          => 0,

                                    'tax_amount'            => 0,

                                    'net_amount'            => 0,

                                    'remarks'               => NULL,

                                    'status_code'           => 'A',

                                    'ref_ledger_serial_no'  => NULL,

                                    'ref_jv_serial_no'      => NULL,

                                    'ref_advance_serial_no' => $advance_serial_no,

                                    'link_jv_serial_no'     => NULL,

                                    'prepared_by'           => $global_userid,

                                    'prepared_on'           => $global_sysdate );

                    $voucherHeaderObj->insert($vh_array);            

                    $voucher_serial_no = $this->db->insertID();

               }

           

               //--- Voucher Detail

               if ($voucher_row_no == '') {

                    $maxrow_qry = $this->db->query("select ifnull(max(row_no),0)+1 as maxrow from voucher_detail where ref_voucher_serial_no = '$voucher_serial_no' ")->getRowArray();

                    $voucher_row_no = $maxrow_qry['maxrow'] ;

                    

                    $vd_array = array('ref_voucher_serial_no'          => $voucher_serial_no,

                                        'row_no'                         => $voucher_row_no,

                                        'main_ac_code'                   => $main_ac_code,

                                        'sub_ac_code'                    => $sub_ac_code,

                                        'ref_bill_year'                  => $bill_year,

                                        'ref_bill_no'                    => $bill_no,

                                        'client_code'                    => $clntcd,

                                        'matter_code'                    => $matrcd,

                                        'initial_code'                   => $intlcd,

                                        'expense_type'                   => NULL,

                                        'expense_code'                   => NULL,

                                        'narration'                      => $narration,

                                        'realise_amount_inpocket_stax'   => $ipcolamt_stax,

                                        'realise_amount_outpocket_stax'  => $opcolamt_stax,

                                        'realise_amount_counsel_stax'    => $cncolamt_stax,

                                        'realise_amount_inpocket_ntax'   => $ipcolamt_ntax,

                                        'realise_amount_outpocket_ntax'  => $opcolamt_ntax,

                                        'realise_amount_counsel_ntax'    => $cncolamt_ntax,

                                        'realise_amount_inpocket'        => ($ipcolamt_stax + $ipcolamt_ntax),

                                        'realise_amount_outpocket'       => ($opcolamt_stax + $opcolamt_ntax) ,

                                        'realise_amount_counsel'         => ($cncolamt_stax + $cncolamt_ntax),

                                        'realise_amount_service_tax'     => $stcolamt,

                                        'gross_amount'                   => $totcolamt,

                                        'tax_amount'                     => 0,

                                        'net_amount'                     => $totcolamt,

                                        'dr_cr_ind'                      => 'C',

                                        'deficit_amount_inpocket_stax'   => $ipdefamt_stax,

                                        'deficit_amount_outpocket_stax'  => $opdefamt_stax,

                                        'deficit_amount_counsel_stax'    => $cndefamt_stax,

                                        'deficit_amount_inpocket_ntax'   => $ipdefamt_ntax,

                                        'deficit_amount_outpocket_ntax'  => $opdefamt_ntax,

                                        'deficit_amount_counsel_ntax'    => $cndefamt_ntax,

                                        'deficit_amount_inpocket'        => ($ipdefamt_stax + $ipdefamt_ntax),

                                        'deficit_amount_outpocket'       => ($opdefamt_stax + $opdefamt_ntax) ,

                                        'deficit_amount_counsel'         => ($cndefamt_stax + $cndefamt_ntax),

                                        'deficit_amount_service_tax'     => $stdefamt,

                                        'part_full_ind'                  => $pfind );

                    $voucherDetailObj->insert($vd_array);

                    

               } else if ($voucher_row_no != '' && $rowoptn == 'Edit') {

                    $vd_array = array('main_ac_code'                   => $main_ac_code,

                                        'sub_ac_code'                    => $sub_ac_code,

                                        'ref_bill_year'                  => $bill_year,

                                        'ref_bill_no'                    => $bill_no,

                                        'client_code'                    => $clntcd,

                                        'matter_code'                    => $matrcd,

                                        'initial_code'                   => $intlcd,

                                        'expense_type'                   => NULL,

                                        'expense_code'                   => NULL,

                                        'narration'                      => $narration,

                                        'realise_amount_inpocket_stax'   => $ipcolamt_stax,

                                        'realise_amount_outpocket_stax'  => $opcolamt_stax,

                                        'realise_amount_counsel_stax'    => $cncolamt_stax,

                                        'realise_amount_inpocket_ntax'   => $ipcolamt_ntax,

                                        'realise_amount_outpocket_ntax'  => $opcolamt_ntax,

                                        'realise_amount_counsel_ntax'    => $cncolamt_ntax,

                                        'realise_amount_inpocket'        => $ipcolamt,

                                        'realise_amount_outpocket'       => $opcolamt,

                                        'realise_amount_counsel'         => $cncolamt,

                                        'realise_amount_service_tax'     => $stcolamt,

                                        'gross_amount'                   => $totcolamt,

                                        'tax_amount'                     => 0,

                                        'net_amount'                     => $totcolamt,

                                        'dr_cr_ind'                      => 'C',

                                        'deficit_amount_inpocket_stax'   => $ipdefamt_stax,

                                        'deficit_amount_outpocket_stax'  => $opdefamt_stax,

                                        'deficit_amount_counsel_stax'    => $cndefamt_stax,

                                        'deficit_amount_inpocket_ntax'   => $ipdefamt_ntax,

                                        'deficit_amount_outpocket_ntax'  => $opdefamt_ntax,

                                        'deficit_amount_counsel_ntax'    => $cndefamt_ntax,

                                        'deficit_amount_inpocket'        => $ipdefamt,

                                        'deficit_amount_outpocket'       => $opdefamt,

                                        'deficit_amount_counsel'         => $cndefamt,

                                        'deficit_amount_service_tax'     => $stdefamt,

                                        'part_full_ind'                  => $pfind

                                        );

                    $where = "ref_voucher_serial_no = '".$voucher_serial_no."' and row_no = '".$voucher_row_no."'" ;				

                    $vd_detail = $voucherDetailObj->update($vd_array, $where);



                } else if ($voucher_row_no != '' && $rowoptn == 'Delete') {

                    $where = "ref_voucher_serial_no = '".$voucher_serial_no."' and row_no = '".$voucher_row_no."'" ;				

                    $vd_detail = $voucherDetailObj->delete($where);

                }

          

               $vchsum_qry = $this->db->query("select sum(gross_amount) cramt from voucher_detail where ref_voucher_serial_no = '$voucher_serial_no' ")->getRowArray(); 

               $ret_cramt  = number_format($vchsum_qry['cramt'], 2, '.', '') ; 

           

               //--- Bill Detail

               if ($rowoptn == 'Edit' || $rowoptn == 'Delete') {

                  $billupdt_sql = "update bill_detail set booked_amount_inpocket = ifnull(booked_amount_inpocket,0) - $old_ipcolamt,

                                          booked_amount_outpocket = ifnull(booked_amount_outpocket,0) - $old_opcolamt,

                                          booked_amount_counsel = ifnull(booked_amount_counsel,0) - $old_cncolamt,

          

                                          booked_amount_inpocket_stax = ifnull(booked_amount_inpocket_stax,0) - $old_ipcolamt_stax,

                                          booked_amount_outpocket_stax = ifnull(booked_amount_outpocket_stax,0) - $old_opcolamt_stax,

                                          booked_amount_counsel_stax = ifnull(booked_amount_counsel_stax,0) - $old_cncolamt_stax,

          

                                          booked_amount_inpocket_ntax = ifnull(booked_amount_inpocket_ntax,0) - $old_ipcolamt_ntax,

                                          booked_amount_outpocket_ntax = ifnull(booked_amount_outpocket_ntax,0) - $old_opcolamt_ntax,

                                          booked_amount_counsel_ntax = ifnull(booked_amount_counsel_ntax,0) - $old_cncolamt_ntax,

          

                                          booked_amount_service_tax = ifnull(booked_amount_service_tax,0) - $old_stcolamt,

          

                                          deficit_amount_inpocket = ifnull(deficit_amount_inpocket,0) - $old_ipdefamt,

                                          deficit_amount_outpocket = ifnull(deficit_amount_outpocket,0) - $old_opdefamt,

                                          deficit_amount_counsel = ifnull(deficit_amount_counsel,0) - $old_cndefamt,

          

                                          deficit_amount_inpocket_stax = ifnull(deficit_amount_inpocket_stax,0) - $old_ipdefamt_stax,

                                          deficit_amount_outpocket_stax = ifnull(deficit_amount_outpocket_stax,0) - $old_opdefamt_stax,

                                          deficit_amount_counsel_stax = ifnull(deficit_amount_counsel_stax,0) - $old_cndefamt_stax,

          

                                          deficit_amount_inpocket_ntax = ifnull(deficit_amount_inpocket_ntax,0) - $old_ipdefamt_ntax,

                                          deficit_amount_outpocket_ntax = ifnull(deficit_amount_outpocket_ntax,0) - $old_opdefamt_ntax,

                                          deficit_amount_counsel_ntax = ifnull(deficit_amount_counsel_ntax,0) - $old_cndefamt_ntax,

          

                                          deficit_amount_service_tax = ifnull(deficit_amount_service_tax,0) - $old_stdefamt,

                                          part_full_ind = 'P' where fin_year = '".$old_bill_year."' and bill_no = '".$old_bill_no."'" ;

                  $billupdt_qry = $this->db->query($billupdt_sql);

               }

          

               if ($rowoptn == '' || $rowoptn == 'Edit') {

                  $billupdt_sql = "update bill_detail set booked_amount_inpocket = ifnull(booked_amount_inpocket,0) + $ipcolamt,

                                          booked_amount_outpocket = ifnull(booked_amount_outpocket,0) + $opcolamt,

                                          booked_amount_counsel = ifnull(booked_amount_counsel,0) + $cncolamt,

          

                                          booked_amount_inpocket_stax = ifnull(booked_amount_inpocket_stax,0) + $ipcolamt_stax,

                                          booked_amount_outpocket_stax = ifnull(booked_amount_outpocket_stax,0) + $opcolamt_stax,

                                          booked_amount_counsel_stax = ifnull(booked_amount_counsel_stax,0) + $cncolamt_stax,

          

                                          booked_amount_inpocket_ntax = ifnull(booked_amount_inpocket_ntax,0) + $ipcolamt_ntax,

                                          booked_amount_outpocket_ntax = ifnull(booked_amount_outpocket_ntax,0) + $opcolamt_ntax,

                                          booked_amount_counsel_ntax = ifnull(booked_amount_counsel_ntax,0) + $cncolamt_ntax,

          

                                          booked_amount_service_tax = ifnull(booked_amount_service_tax,0) + $stcolamt,

                                          deficit_amount_inpocket = ifnull(deficit_amount_inpocket,0) + $ipdefamt,

                                          deficit_amount_outpocket = ifnull(deficit_amount_outpocket,0) + $opdefamt,

                                          deficit_amount_counsel = ifnull(deficit_amount_counsel,0) + $cndefamt,

          

                                          deficit_amount_inpocket_stax = ifnull(deficit_amount_inpocket_stax,0) + $ipdefamt_stax,

                                          deficit_amount_outpocket_stax = ifnull(deficit_amount_outpocket_stax,0) + $opdefamt_stax,

                                          deficit_amount_counsel_stax = ifnull(deficit_amount_counsel_stax,0) + $cndefamt_stax,

          

                                          deficit_amount_inpocket_ntax = ifnull(deficit_amount_inpocket_ntax,0) + $ipdefamt_ntax,

                                          deficit_amount_outpocket_ntax = ifnull(deficit_amount_outpocket_ntax,0) + $opdefamt_ntax,

                                          deficit_amount_counsel_ntax = ifnull(deficit_amount_counsel_ntax,0) + $cndefamt_ntax,

          

                                          deficit_amount_service_tax = ifnull(deficit_amount_service_tax,0) + $stdefamt,

                                          part_full_ind = '$pfind' where fin_year = '".$bill_year."' and bill_no = '".$bill_no."'" ;

                  $billupdt_qry = $this->db->query($billupdt_sql);

               }



               //--- Advance Details

               if ($rowoptn == 'Edit' || $rowoptn == 'Delete') {

                  $advupdt_sql  = "update advance_details set booked_amount  = ifnull(booked_amount,0)  - $old_totcolamt where serial_no = '".$advance_serial_no."'" ;

                  $advupdt_qry = $this->db->query($advupdt_sql);

               }

          

               if ($rowoptn == '' || $rowoptn == 'Edit') {

                  $advupdt_sql  = "update advance_details set booked_amount  = ifnull(booked_amount,0)  + $totcolamt where serial_no = '".$advance_serial_no."'" ;

                  $advupdt_qry = $this->db->query($advupdt_sql);

               }



               //--- Voucher Header

               $vh_array = array('gross_amount' => $ret_cramt, 'tax_amount' => 0, 'net_amount' => $ret_cramt );

               $where = "serial_no = '".$voucher_serial_no."'" ;	

          

               $vh_header = $voucherHeaderObj->update($vh_array, $where);



               $retvalue = 'Y'.'|'.'Data Updated ....'.'|'.$voucher_serial_no.'|'.$ret_cramt.'|'.$rowoptn.'|' ; 

               echo $retvalue ;   

            }   

        }

    }



    /************************************JOURNALS******************************************/

    public function adjustment() { 

        $global_userid = $user_id = session()->userId;

        $data = branches($user_id); $global_curr_finyear = session()->financialYear;

        $global_dmydate = date('d-m-Y'); $global_sysdate = date_conv($global_dmydate); 

        $data['requested_url'] = session()->requested_end_menu_url;

        $displayId = ['mainac_help_id' => 4538, 'subac_help_id' => 4539, 'matter_help_id' => 4540];

        

        $global_curr_finyr_fymddate = substr($global_curr_finyear, 0, 4).'-04-01';

        $global_curr_finyr_lymddate = substr($global_curr_finyear, 5, 4).'-03-31';



        $global_curr_finyr_fdmydate = '01-04-'.substr($global_curr_finyear,0,4);

        $global_curr_finyr_ldmydate = '31-03-'.substr($global_curr_finyear,5,4);



        $selemode   = isset($_REQUEST['selemode']) ? $_REQUEST['selemode'] : null;

        $user_option = isset($_REQUEST['user_option'])?$_REQUEST['user_option']:null;

        $action = isset($_REQUEST['action'])?$_REQUEST['action']:null;

        $serial_no   = isset($_REQUEST['serial_no'])?$_REQUEST['serial_no']:null;



        $daybook_code_from = $daybook_code_to = $daybook_type_to = $daybook_type_from = ''; $memdtl_qry = []; $memdtl_cnt = 0;

        $redk = $redv = $disk = $disv = $disb1 = $disb2 = $disb3 = $disb4 = $voucher_date = $current_date = $finyr_start_date = $finyr_end_date = '';

        $branch_qry = $this->db->query(session()->branch_selection_stmt)->getResultArray();



        if($selemode != 'Y') {

            $rowno = ''; $mainac_code = ''; $subac_code = ''; $clnt_code = ''; $matr_code = '';  $narr = '';  $dramt = ''; $cramt = ''; 

            

            if ($user_option == 'Add') {

               $branch_code         = isset($_REQUEST['branch_code'])?$_REQUEST['branch_code']:session()->user_qry['branch_code'] ;

               $fin_year            = isset($_REQUEST['fin_year'])?$_REQUEST['fin_year']:$global_curr_finyear ;

               $voucher_serial_date = isset($_REQUEST['voucher_serial_date'])?$_REQUEST['voucher_serial_date']:$global_dmydate ;

               $voucher_serial_no   = isset($_REQUEST['voucher_serial_no'])?$_REQUEST['voucher_serial_no']:'';

               $total_debit_amount  = isset($_REQUEST['total_debit_amount'])?$_REQUEST['total_debit_amount']:0 ;

               $total_credit_amount = isset($_REQUEST['total_credit_amount'])?$_REQUEST['total_credit_amount']:0 ;



            } else if ($user_option == 'Edit') {

                $selemode = 'Y';

                $fin_year            = isset($_REQUEST['fin_year'])?$_REQUEST['fin_year']:$global_curr_finyear ;

                $voucher_serial_no   = isset($_REQUEST['voucher_serial_no'])?$_REQUEST['voucher_serial_no']:'';

                

                $vchhdr_qry          = $this->db->query("select branch_code,entry_date from voucher_header where serial_no = '$voucher_serial_no' ")->getRowArray();

                $branch_code         = $vchhdr_qry['branch_code'] ;

                $voucher_serial_date = date_conv($vchhdr_qry['entry_date']) ;

                

                $vchdtl_qry          = $this->db->query("select sum(if(dr_cr_ind='D',gross_amount,0)) dramt, sum(if(dr_cr_ind='C',gross_amount,0)) cramt from voucher_detail where ref_voucher_serial_no = '$voucher_serial_no' ")->getRowArray();

                $total_debit_amount  = $vchdtl_qry['dramt'] ;  

                $total_credit_amount = $vchdtl_qry['cramt'] ;  



            } else {

                $selemode = 'Y';

                $voucher_serial_no   = isset($_REQUEST['voucher_serial_no'])?$_REQUEST['voucher_serial_no']:'';

                $fin_year            = isset($_REQUEST['fin_year'])?$_REQUEST['fin_year']:$global_curr_finyear ;

                                

                $vchhdr_qry          = $this->db->query("select branch_code,entry_date from voucher_header where serial_no = '$voucher_serial_no' ")->getRowArray();

                $branch_code         = $vchhdr_qry['branch_code'] ;

                $voucher_serial_date = date_conv($vchhdr_qry['entry_date']) ;

                $branch_sql          = $this->db->query("select branch_name from branch_master where branch_code = '$branch_code'")->getRowArray();

                $branch_name         = $branch_sql['branch_name'] ;

                

                $vchdtl_qry          = $this->db->query("select sum(if(dr_cr_ind='D',gross_amount,0)) dramt, sum(if(dr_cr_ind='C',gross_amount,0)) cramt from voucher_detail where ref_voucher_serial_no = '$voucher_serial_no' ")->getRowArray();

                $total_debit_amount  = $vchdtl_qry['dramt'] ;  

                $total_credit_amount = $vchdtl_qry['cramt'] ;  

            }

        } else {

            $voucher_serial_no = isset($_REQUEST['voucher_serial_no'])?$_REQUEST['voucher_serial_no']:null;

            $branch_code       = isset($_REQUEST['branch_code'])?$_REQUEST['branch_code']:null;

            $fin_year          = isset($_REQUEST['fin_year'])?$_REQUEST['fin_year']:null;

            $voucher_date      = isset($_REQUEST['voucher_date'])?$_REQUEST['voucher_date']:null;

            $doc_type = 'JV'; $ref_doc_type = 'AJ';

            $doc_date = date_conv($voucher_date) ;



            if($user_option == 'Add' || $user_option == 'Edit') {

                $branch_code         = isset($_REQUEST['branch_code'])?$_REQUEST['branch_code']:null ;

                $fin_year            = isset($_REQUEST['fin_year'])?$_REQUEST['fin_year']:null ;

                $voucher_serial_date = isset($_REQUEST['voucher_serial_date'])?$_REQUEST['voucher_serial_date']:null ;

                $voucher_serial_no   = isset($_REQUEST['voucher_serial_no'])?$_REQUEST['voucher_serial_no']:null ; 

                $rowno               = isset($_REQUEST['rowno'])?$_REQUEST['rowno']:null ;

                $rowoptn             = isset($_REQUEST['rowoptn'])?$_REQUEST['rowoptn']:null ;

                $main_ac_code        = isset($_REQUEST['mainac_code'])?strtoupper($_REQUEST['mainac_code']):null ;

                $sub_ac_code         = isset($_REQUEST['subac_code'])?strtoupper($_REQUEST['subac_code']):null ;

                $matter_code         = isset($_REQUEST['matr_code'])?strtoupper($_REQUEST['matr_code']):null ;

                $client_code         = isset($_REQUEST['clnt_code'])?strtoupper($_REQUEST['clnt_code']):null ;

                $narration 	         = isset($_REQUEST['narr'])?stripslashes(strtoupper($_REQUEST['narr'])):null ;

                $dramt               = isset($_REQUEST['dramt'])?$_REQUEST['dramt']:null ;

                $cramt               = isset($_REQUEST['cramt'])?$_REQUEST['cramt']:null ;

            

                $matter_qry          = $this->db->query("select initial_code from fileinfo_header where matter_code = '$matter_code' ")->getRowArray();

                $initial_code        = isset($matter_qry['initial_code']) ? $matter_qry['initial_code'] : '';



                //---- Header 

                if ($voucher_serial_no == '') {

                    $entry_date_ymd  = date_conv($voucher_serial_date) ;

                    $prepared_by     = $global_userid  ;

                    $prepared_on_ymd = $global_sysdate ;

                    $trans_type = 'AJ'; $voucher_type = 'JV'; $status_code = 'A' ;

                    

                    $daybook_qry  = $this->db->query("select key_value from control_keycodes where key_code = '017' ")->getRowArray();

                    $daybook_code = $daybook_qry['key_value'] ;

                    

                    $vchhdr_sql = "insert into voucher_header (branch_code,entry_date,trans_type,voucher_type,daybook_code,gross_amount,tax_amount,net_amount,status_code,prepared_by,prepared_on)

                                    values ('$branch_code','$entry_date_ymd','$trans_type','$voucher_type','$daybook_code',0,0,0,'$status_code','$prepared_by','$prepared_on_ymd')";

                    $this->db->query($vchhdr_sql);					  

                      

                    $vchid_qry         = $this->db->query("select last_insert_id() as lastid from voucher_header ")->getRowArray();

                    $voucher_serial_no = $vchid_qry['lastid'] ; 	   

                }

            

                //---- Detail 

                if ($dramt > 0) { $dr_cr_ind = 'D' ; $gross_amount = $dramt ; } else { $dr_cr_ind = 'C' ; $gross_amount = $cramt ; }

                

                if ($rowno == '') {

                    $maxrow_qry = $this->db->query("select ifnull(max(row_no),0)+1 as maxrow from voucher_detail where ref_voucher_serial_no = '$voucher_serial_no' ")->getRowArray();

                    $row_no     = $maxrow_qry['maxrow'] ;

                    

                    $vchdtl_sql = "insert into voucher_detail (ref_voucher_serial_no,row_no,main_ac_code,sub_ac_code,client_code,matter_code,initial_code,narration,gross_amount,tax_amount,net_amount,dr_cr_ind)

                                    values ('$voucher_serial_no','$row_no','$main_ac_code','$sub_ac_code','$client_code','$matter_code','$initial_code','$narration','$gross_amount',0,'$gross_amount','$dr_cr_ind') ";

                    $this->db->query($vchdtl_sql);



                } else if ($rowno != '' && $rowoptn == 'Edit') {

                    $row_no     = $rowno ;

                    $vchdtl_sql = "update voucher_detail

                                        set main_ac_code  = '$main_ac_code',

                                            sub_ac_code   = '$sub_ac_code',

                                            client_code   = '$client_code',

                                            matter_code   = '$matter_code',

                                            initial_code  = '$initial_code',

                                            narration     = '$narration',

                                            gross_amount  = '$gross_amount',

                                            tax_amount    = 0,

                                            net_amount    = '$gross_amount',

                                            dr_cr_ind     = '$dr_cr_ind'

                                    where ref_voucher_serial_no = '$voucher_serial_no' and row_no = '$row_no' ";

                    $this->db->query($vchdtl_sql);



                } else if ($rowno != '' && $rowoptn == 'Delete') {

                    $row_no     = $rowno ;

                    $vchdtl_sql = "delete from voucher_detail where ref_voucher_serial_no = '$voucher_serial_no' and row_no = '$row_no' ";

                    $this->db->query($vchdtl_sql);					  

                }

            

                $vchsum_qry = $this->db->query("select sum(if(dr_cr_ind='D',gross_amount,0)) dramt, sum(if(dr_cr_ind='C',gross_amount,0)) cramt from voucher_detail where ref_voucher_serial_no = '$voucher_serial_no' ")->getRowArray(); 

                $ret_dramt  = number_format($vchsum_qry['dramt'],2,'.','') ; 

                $ret_cramt  = number_format($vchsum_qry['cramt'],2,'.','') ; 

            

                $vchhdr_sql = "update voucher_header set gross_amount = '$ret_dramt', net_amount = '$ret_dramt' where serial_no = '$voucher_serial_no' " ;

                $this->db->query($vchhdr_sql);					  

            

                // $retvalue = 'Y'.'|'.'Data Updated ....'.'|'.$voucher_serial_no.'|'.$ret_dramt.'|'.$ret_cramt.'|'.$rowoptn.'|' ; 

                // echo $retvalue ;  

                

                if ($user_option == 'Add') { 

                    session()->setFlashdata('message', 'Please Note Generated Serial No : ' . $voucher_serial_no);

                    

                } else if($rowoptn == 'Edit') {

                    session()->setFlashdata('message', "Record with Row NO: [".$rowno."] Updated Sucessfully !!");



                } else if ($user_option == 'Edit' && $rowno == '') {

                    session()->setFlashdata('message', "Record with Row NO: [".$row_no."] Added Sucessfully !!");



                } else if($rowoptn == 'Delete') {

                    session()->setFlashdata('message', "Record with Row NO: [".$rowno."] Deleted Sucessfully !!");

                }



                $user_option = 'Edit'; $selemode = 'Y';



                $vchhdr_qry          = $this->db->query("select branch_code,entry_date from voucher_header where serial_no = '$voucher_serial_no' ")->getRowArray();

                $branch_code         = $vchhdr_qry['branch_code'] ;

                $voucher_serial_date = date_conv($vchhdr_qry['entry_date']) ;

                

                $vchdtl_qry          = $this->db->query("select sum(if(dr_cr_ind='D',gross_amount,0)) dramt, sum(if(dr_cr_ind='C',gross_amount,0)) cramt from voucher_detail where ref_voucher_serial_no = '$voucher_serial_no' ")->getRowArray();

                $total_debit_amount  = $vchdtl_qry['dramt'] ;  

                $total_credit_amount = $vchdtl_qry['cramt'] ;  



            } else if ($user_option == 'Delete') {

                $this->db->query("delete from voucher_header where serial_no = '$voucher_serial_no' ");

                $this->db->query("delete from voucher_detail where ref_voucher_serial_no = '$voucher_serial_no' ");



                session()->setFlashdata('message', "Record with Serial NO: [".$voucher_serial_no."] Deleted Sucessfully !!");

                return redirect()->to(session()->last_selected_end_menu);



            } else if ($user_option == 'Approve') {

                $daybook_qry  = $this->db->query("select key_value from control_keycodes where key_code = '017' ")->getRowArray();

                $daybook_code = $daybook_qry['key_value'] ;

                

                $doc_no = getLastDocNo($fin_year,$branch_code,$daybook_code,'00','J');



                $ldghdr_sql = "insert into ledger_trans_hdr (branch_code,fin_year,doc_type,doc_date,doc_no,daybook_code,narration,gross_amount,tax_amount,net_amount,status_code,ref_doc_serial_no,ref_doc_type,prepared_by,prepared_on,approved_by,approved_on)

                                select '$branch_code','$fin_year','$doc_type','$doc_date','$doc_no',daybook_code,'ADJUSTMENT JOURNAL',gross_amount,tax_amount,net_amount,'C','$voucher_serial_no','$ref_doc_type',prepared_by,prepared_on,'$global_userid','$global_sysdate' 

                                from voucher_header where serial_no = '$voucher_serial_no' " ; 

                $this->db->query($ldghdr_sql);

                

                $lastrow_qry = $this->db->query("select last_insert_id() as lastid from ledger_trans_hdr ")->getRowArray();

                $ledger_serial_no = $lastrow_qry['lastid'] ; 	   



                $ldgdtl_sql = "insert into ledger_trans_dtl (ref_ledger_serial_no,branch_code,main_ac_code,sub_ac_code,client_code,matter_code,initial_code,expense_type,expense_code,narration,gross_amount,tax_amount,net_amount,dr_cr_ind,record_type,ref_doc_serial_no,ref_doc_type)

                                select '$ledger_serial_no','$branch_code',main_ac_code,sub_ac_code,client_code,matter_code,initial_code,'','',narration,gross_amount,tax_amount,net_amount,dr_cr_ind,'G','$voucher_serial_no','$ref_doc_type'   

                                from voucher_detail where ref_voucher_serial_no = '$voucher_serial_no' " ; 

                $this->db->query($ldgdtl_sql);



                $vchhdr_sql = "update voucher_header set status_code = 'C', ref_ledger_serial_no = '$ledger_serial_no', passed_by = '$global_userid', passed_on = '$global_sysdate' where serial_no = '$voucher_serial_no' " ;

                $this->db->query($vchhdr_sql);



                $this->ledger_posting($ledger_serial_no);

                $message = 'Please note Final Voucher No : ' . $doc_no ;



                session()->setFlashdata('message', $message);

                return redirect()->to(session()->last_selected_end_menu);

            } else if ($user_option == 'Print') {

                $params['serial_no'] = $serial_no = isset($_REQUEST['serial_no'])?$_REQUEST['serial_no']:null;

                $params['type'] = $type = isset($_REQUEST['type'])?$_REQUEST['type']:null;

                $print = true; $lines_per_page = 65; $page_no = 1; $line_count = 0;

                

                $hdr_row = $this->db->query("select a.* from voucher_header a where a.serial_no = '$serial_no'")->getRowArray();

                $params['entry_date'] = $entry_date           = date_conv((isset($hdr_row['entry_date']) ? $hdr_row['entry_date'] : ''));

                $params['daybook_code'] = $daybook_code         = (isset($hdr_row['daybook_code']) ? $hdr_row['daybook_code'] : ''); 

                $params['payee_payer_name'] = $payee_payer_name     = (isset($hdr_row['payee_payer_name']) ? $hdr_row['payee_payer_name'] : ''); 

                $params['remarks'] = $remarks              = (isset($hdr_row['remarks']) ? $hdr_row['remarks'] : ''); 

                $params['hdr_gross_amount'] = $hdr_gross_amount     = (isset($hdr_row['gross_amount']) ? $hdr_row['gross_amount'] : ''); 

                $params['hdr_tax_amount'] = $hdr_tax_amount       = (isset($hdr_row['tax_amount']) ? $hdr_row['tax_amount'] : ''); 

                $params['hdr_net_amount'] = $hdr_net_amount       = (isset($hdr_row['net_amount']) ? $hdr_row['net_amount'] : '');

                $params['ref_ledger_serial_no'] = $ref_ledger_serial_no = (isset($hdr_row['ref_ledger_serial_no']) ? $hdr_row['ref_ledger_serial_no'] : ''); 

                $params['passed_on'] = $passed_on            = date_conv((isset($hdr_row['passed_on']) ? $hdr_row['passed_on'] : '')); 



                $params['hdr_net_rs_arr'] = $hdr_net_rs_arr = explode(".", (isset($hdr_row['net_amount']) ? $hdr_row['net_amount'] : '0.00'));

                $params['hdr_net_rs'] = $hdr_net_rs     = $hdr_net_rs_arr[0]*1;

                $params['hdr_net_paise'] = $hdr_net_paise  = $hdr_net_rs_arr[1]*1;    

                $params['net_riw'] = $net_riw        = int_to_words($hdr_net_rs) ;

                $params['paise_riw'] = $paise_riw      = int_to_words($hdr_net_paise) ;



                $res2 = $this->db->query("select * from voucher_detail where ref_voucher_serial_no = '$serial_no' order by dr_cr_ind desc")->getResultArray();

                $total_rows = count($res2);

                    

                if($paise_riw != '') {$params['hdr_net_riw'] = $hdr_net_riw = '(Rupees '.$net_riw.' and paise '.$paise_riw.' only)';} else {$params['hdr_net_riw'] = $hdr_net_riw = '(Rupees '.$net_riw.' only)';} 

                $line_count = 11; $break_cnt = 'N'; $cnt = 1; $ind = 0; $print_flag = 1; $cr_cnt = 1; $dr_cr_txt = '';



                while($cnt <= $total_rows) {

                    $dtl_row = $res2[$cnt-1];

                    $params['data'][$cnt-1]['narration'] = $narration    = $dtl_row['narration'];

                    $params['data'][$cnt-1]['main_ac_code'] = $main_ac_code = $dtl_row['main_ac_code'];

                    $params['data'][$cnt-1]['sub_ac_code'] = $sub_ac_code  = $dtl_row['sub_ac_code'];

                    $params['data'][$cnt-1]['matter_code'] = $matter_code  = $dtl_row['matter_code'];

                    $params['data'][$cnt-1]['client_code'] = $client_code  = $dtl_row['client_code'];

                    $params['data'][$cnt-1]['expense_code'] = $expense_code = $dtl_row['expense_code'];

                    $params['data'][$cnt-1]['gross_amount'] = $gross_amount = $dtl_row['gross_amount'];

                    $params['data'][$cnt-1]['dr_cr_ind'] = $dr_cr_ind    = $dtl_row['dr_cr_ind'];

                    

                    if($params['data'][$cnt-1]['dr_cr_ind'] == 'C' && $cr_cnt == 1) {  $params['data'][$cnt-1]['print_flag'] = $print_flag = 1; $params['data'][$cnt-1]['cr_cnt'] = $cr_cnt = 0; }

                    if($print_flag == 0) { $txt = " style='line-height:2px;'"; } else { $txt = " style='line-height:24px;'"; $line_count = $line_count + 2;}

                    if($params['data'][$cnt-1]['dr_cr_ind'] == 'D' && $ind == 0){ $params['data'][$cnt-1]['dr_cr_txt'] = $dr_cr_txt = 'Debit :'; $ind = 1; $print_flag = 0; } else if($params['data'][$cnt-1]['dr_cr_ind'] = $dr_cr_ind == 'C' && $ind == 1){ $params['data'][$cnt-1]['dr_cr_txt'] = $dr_cr_txt = 'To : '; $ind = 0; $print_flag = 0;} else { $params['data'][$cnt-1]['dr_cr_txt'] = $dr_cr_txt = '';} 



                    if($line_count > $lines_per_page) {

                        $line_count = 30; $page_no = $page_no + 1; $break_cnt  = 'Y';



                    } else {

                        $main_ac_row  = $this->db->query("select main_ac_desc,sub_ac_ind from account_master where main_ac_code = '$main_ac_code'")->getRowArray();

                        $params['data'][$cnt-1]['main_ac_desc'] = $main_ac_desc = $main_ac_row['main_ac_desc'];

                        $params['data'][$cnt-1]['sub_ac_ind'] = $sub_ac_ind   = $main_ac_row['sub_ac_ind'];

                        $params['data'][$cnt-1]['sub_ac_desc'] = $sub_ac_desc  = '';



                        if($sub_ac_ind == 'Y') {

                            $sub_ac_stmt = "select sub_ac_desc from sub_account_master where main_ac_code = '$main_ac_code' and sub_ac_code  = '$sub_ac_code'";

                            $sub_ac_row = $this->db->query($sub_ac_stmt)->getRowArray();

                            $params['data'][$cnt-1]['sub_ac_desc'] = $sub_ac_desc = $sub_ac_row['sub_ac_desc'];

                        }



                        $break_cnt  = 'N';

                    }

                    $cnt = $cnt+1; $line_count = $line_count + 1;

                }

                return view("pages/Finance/Journals/adjustment_normal", compact('print', 'params', 'data', 'user_option', 'total_rows'));

            }      

        }



        //---- Detail

        $vchdtl_sql  = "select a.row_no,a.main_ac_code,a.sub_ac_code,a.client_code,a.matter_code,a.narration,a.dr_cr_ind,a.gross_amount

                        from voucher_detail a where a.ref_voucher_serial_no = '$voucher_serial_no' order by a.row_no " ;



        $vchdtl_qry = $this->db->query($vchdtl_sql)->getResultArray();

        $vchdtl_cnt = count($vchdtl_qry);

   

        if ($vchdtl_cnt == 0) {

            // alert('No record(s) found ......... ');

        }



        $params = [

            'voucher_serial_no' => isset($voucher_serial_no) ? $voucher_serial_no : '',

            'global_sysdate' => $global_sysdate,

            'global_curr_finyr_fymddate' => $global_curr_finyr_fymddate,

            'global_curr_finyr_lymddate' => $global_curr_finyr_lymddate,

            'global_curr_finyear' => isset($global_curr_finyear) ? $global_curr_finyear : '',

            'global_userid' => isset($global_userid) ? $global_userid : '',

            'fin_year' => isset($fin_year) ? $fin_year : '',

            'voucher_serial_date ' => isset($voucher_serial_date) ? $voucher_serial_date : '' ,

            'global_dmydate' => isset($global_dmydate) ? $global_dmydate : '',

            'total_debit_amount' => isset($total_debit_amount ) ? $total_debit_amount  : 0,

            'total_credit_amount' => isset($total_credit_amount ) ? $total_credit_amount  : 0,

            'voucher_serial_date' => isset($voucher_serial_date ) ? $voucher_serial_date  : 0,

            'total_row_count' => isset($total_row_count ) ? $total_row_count  : 0,

            'mainac_code' => isset($mainac_code ) ? $mainac_code  : '',

            'subac_code' => isset($subac_code ) ? $subac_code  : '',

            'matr_code' => isset($matr_code ) ? $matr_code  : '',

            'clnt_code' => isset($clnt_code ) ? $clnt_code  : '',

            'narr' => isset($narr ) ? $narr  : '',

            'dramt' => '0.00', //isset($dramt ) ? $dramt : 0.00,

            'cramt' => '0.00', //isset($cramt ) ? $cramt : 0.00,

            'rowno' => '', //isset($rowno ) ? $rowno : '',

            'rowoptn' => '', //isset($rowoptn ) ? $rowoptn : '',

            'subac_ind' => isset($subac_ind ) ? $subac_ind : '',

        ];



        return view("pages/Finance/Journals/adjustment_normal", compact('params', 'data', 'user_option', 'vchdtl_qry', 'vchdtl_cnt', 'selemode', 'displayId', 'redv', 'disv'));

    }



    public function advance_adjustment() {

        $global_userid = $user_id = session()->userId;

        $data = branches($user_id); $global_curr_finyear = session()->financialYear;

        $global_dmydate = date('d-m-Y'); $global_sysdate = date_conv($global_dmydate); 

        $data['requested_url'] = session()->requested_end_menu_url;

        $displayId = ['payee_name_code' => 4554, 'advanced_code' => 4553];

        

        $global_curr_finyr_fymddate = substr($global_curr_finyear, 0, 4).'-04-01';

        $global_curr_finyr_lymddate = substr($global_curr_finyear, 5, 4).'-03-31';



        $global_curr_finyr_fdmydate = '01-04-'.substr($global_curr_finyear,0,4);

        $global_curr_finyr_ldmydate = '31-03-'.substr($global_curr_finyear,5,4);



        $selemode   = isset($_REQUEST['selemode']) ? $_REQUEST['selemode'] : null;

        $user_option = isset($_REQUEST['user_option'])?$_REQUEST['user_option']:null;

        $action = isset($_REQUEST['action'])?$_REQUEST['action']:null;

        $serial_no   = isset($_REQUEST['serial_no'])?$_REQUEST['serial_no']:null;



        $daybook_code_from = $daybook_code_to = $daybook_type_to = $daybook_type_from = ''; $memdtl_qry = []; $memdtl_cnt = 0;

        $redk = $redv = $disk = $disv = $disb1 = $disb2 = $disb3 = $disb4 = $voucher_date = $current_date = $finyr_start_date = $finyr_end_date = '';



        if($selemode == 'Y' && $action != 'Proceed') {

            $voucher_serial_no   = isset($_REQUEST['voucher_serial_no'])   ? $_REQUEST['voucher_serial_no']    : '' ;

            $branch_code         = isset($_REQUEST['branch_code'])         ? $_REQUEST['branch_code']          : session()->user_qry['branch_code'] ;

            $fin_year            = isset($_REQUEST['fin_year'])            ? $_REQUEST['fin_year']             : $global_curr_finyear ;

            $voucher_serial_date = isset($_REQUEST['voucher_serial_date']) ? $_REQUEST['voucher_serial_date']  : $global_dmydate ;

            $advance_serial_no   = isset($_REQUEST['advance_serial_no'])   ? $_REQUEST['advance_serial_no']    : '' ; 

            $payee_type_str      = isset($_REQUEST['payee_type_str'])      ? $_REQUEST['payee_type_str']       : '' ;

            $payee_code          = isset($_REQUEST['payee_code'])          ? $_REQUEST['payee_code']           : '' ;

            $payee_name          = isset($_REQUEST['payee_name'])          ? $_REQUEST['payee_name']           : '' ;

            $advance_amount      = isset($_REQUEST['advance_amount'])      ? $_REQUEST['advance_amount']       : 0  ;

            $adjusted_amount     = isset($_REQUEST['adjusted_amount'])     ? $_REQUEST['adjusted_amount']      : 0  ;

            $balance_amount      = isset($_REQUEST['balance_amount'])      ? $_REQUEST['balance_amount']       : 0  ;

            $now_adjusted_amount = isset($_REQUEST['now_adjusted_amount']) ? $_REQUEST['now_adjusted_amount']  : 0  ;

            $old_adjusted_amount = isset($_REQUEST['old_adjusted_amount']) ? $_REQUEST['old_adjusted_amount']  : NULL ;  if(empty($old_adjusted_amount)){ $old_adjusted_amount = 0 ; }

            $voucher_date        = isset($_REQUEST['voucher_date'])        ? $_REQUEST['voucher_date']         : NULL ;

            $memostr             = isset($_REQUEST['memostr'])             ? $_REQUEST['memostr']              : '' ;

            $memdtl_cnt          = isset($_REQUEST['memdtl_cnt'])          ? $_REQUEST['memdtl_cnt']          : 0  ;



            $entry_date_ymd      = date_conv($voucher_serial_date) ;

            $trans_type          = 'CJ';

            $voucher_type        = 'JV';

            $doc_type            = 'JV';

            $ref_doc_type        = 'CJ';

            $payee_type          = substr($payee_type_str,0,1) ;

            $narration_hdr       = 'ADJUSTMENT OF MEMO(s) AGAINST ADVANCE NO : '.$advance_serial_no ; 

            

            $voucherHeaderObj = $this->db->table("voucher_header"); // object : voucher header

            $voucherDetailObj = $this->db->table("voucher_detail"); // object : voucher detail

            $ledgerHeaderObj = $this->db->table("ledger_trans_hdr"); // object : ledger header

            $ledgerDetailObj = $this->db->table("ledger_trans_dtl"); // object : ledger detail

            $advAdjHeaderObj = $this->db->table("advance_adjustment_header"); // object : advance_adjustment_header

            $advAdjDetailObj = $this->db->table("advance_adjustment_detail"); // object : advance_adjustment_detail

            $advanceDetailObj = $this->db->table("advance_details"); // object : advance detail

            $memoHeaderObj = $this->db->table("counsel_memo_header"); // object : counsel_memo_header

            $arbrExpenseObj = $this->db->table("arbitrator_expense"); // object : arbitrator_expense

            $stenoExpenseObj = $this->db->table("steno_expense"); // object : steno_expense             

            

            $row = $this->db->query("select key_value from control_keycodes where key_code = '017'")->getRowArray();

            $daybook_code = $row['key_value'];



            $row = $this->db->query("select key_value from control_keycodes where key_code = '007'")->getRowArray();

            $counsel_clearing_code = $row['key_value'];



            if($user_option == 'Add' || $user_option == 'Edit') {  

                $prepared_by         = $global_userid  ;

                $prepared_on_ymd     = $global_sysdate ;

                $status_code         = 'A' ;



                //---- Voucher Header

                if ($user_option == 'Add') {

                    $vh_array = array(  'serial_no'                 => NULL,

                                        'branch_code'               => $branch_code,

                                        'entry_date'                => $entry_date_ymd,

                                        'trans_type'                => $trans_type,

                                        'voucher_type'              => $voucher_type,

                                        'payee_payer_type'          => $payee_type,

                                        'payee_payer_code'          => $payee_code,

                                        'payee_payer_name'          => $payee_name,

                                        'received_from'             => NULL,

                                        'payment_type'              => NULL,

                                        'daybook_code'              => $daybook_code,

                                        'instrument_type'           => NULL,

                                        'instrument_no'             => NULL,

                                        'instrument_dt'             => NULL,

                                        'bank_name'                 => NULL,

                                        'basic_amount'              => NULL,

                                        'new_tax_amount'            => NULL,

                                        'new_tax_cess_amount'       => NULL,

                                        'new_tax_hecess_amount'     => NULL,

                                        'new_tax_total_amount'      => NULL,

                                        'service_tax_amount'        => NULL,

                                        'gross_amount'              => $now_adjusted_amount,

                                        'tax_code'                  => NULL,

                                        'tax_amount'                => NULL,

                                        'net_amount'                => $now_adjusted_amount,

                                        'remarks'                   => $narration_hdr,

                                        'status_code'               => $status_code,

                                        'ref_ledger_serial_no'      => NULL,

                                        'ref_jv_serial_no'          => NULL,

                                        'ref_advance_serial_no'     => $advance_serial_no,

                                        'link_jv_serial_no'         => NULL,

                                        'backlog_counsel_fee'       => NULL,

                                        'prepared_by'               => $prepared_by,

                                        'prepared_on'               => $prepared_on_ymd,

                                        'passed_by'                 => NULL,

                                        'passed_on'                 => NULL,

                                        'paid_by'                   => NULL,

                                        'paid_on'                   => NULL

                                        );

                    $voucherHeaderObj->insert($vh_array);

                    $voucher_serial_no = $this->db->insertID();

                    $message = 'Please note Voucher Serial No : ' . $voucher_serial_no ; 

                } else {

                    $vh_array = array('branch_code'               => $branch_code,

                                        'entry_date'                => $entry_date_ymd,

                                        'trans_type'                => $trans_type,

                                        'voucher_type'              => $voucher_type,

                                        'payee_payer_type'          => $payee_type,

                                        'payee_payer_code'          => $payee_code,

                                        'payee_payer_name'          => $payee_name,

                                        'received_from'             => NULL,

                                        'payment_type'              => NULL,

                                        'daybook_code'              => $daybook_code,

                                        'instrument_type'           => NULL,

                                        'instrument_no'             => NULL,

                                        'instrument_dt'             => NULL,

                                        'bank_name'                 => NULL,

                                        'basic_amount'              => NULL,

                                        'new_tax_amount'            => NULL,

                                        'new_tax_cess_amount'       => NULL,

                                        'new_tax_hecess_amount'     => NULL,

                                        'new_tax_total_amount'      => NULL,

                                        'service_tax_amount'        => NULL,

                                        'gross_amount'              => $now_adjusted_amount,

                                        'tax_code'                  => NULL,

                                        'tax_amount'                => NULL,

                                        'net_amount'                => $now_adjusted_amount,

                                        'remarks'                   => $narration_hdr,

                                        'status_code'               => $status_code,

                                        'ref_ledger_serial_no'      => NULL,

                                        'ref_jv_serial_no'          => NULL,

                                        'ref_advance_serial_no'     => $advance_serial_no,

                                        'link_jv_serial_no'         => NULL,

                                        'backlog_counsel_fee'       => NULL,

                                        'prepared_by'               => $prepared_by,

                                        'prepared_on'               => $prepared_on_ymd,

                                        'passed_by'                 => NULL,

                                        'passed_on'                 => NULL,

                                        'paid_by'                   => NULL,

                                        'paid_on'                   => NULL

                                        );

                    $vch_where  = "serial_no = '".$voucher_serial_no."'" ; 					 

                    $vch_header = $voucherHeaderObj->update($vh_array, $vch_where);

                }



                //---- Voucher Detail

                $this->db->query("delete from voucher_detail where ref_voucher_serial_no = '$voucher_serial_no' "); 

                

                $memorow = explode('|',$memostr);

                $memocnt = count($memorow)-1 ;

                $voucher_row_no = 0 ;



                for ($k=0; $k<$memocnt; $k++) {

                    $memoarr         = explode('^',$memorow[$k]) ; 

                    $memo_serial_no  = $memoarr[0];

                    $memo_no         = $memoarr[1];

                    $memo_date       = $memoarr[2];

                    $memoadj_amount  = $memoarr[3];   if(empty($memoadj_amount)) { $memoadj_amount = 0 ; }

                    $memoold_amount  = $memoarr[4];   if(empty($memoold_amount)) { $memoold_amount = 0 ; } 

    

                    if ($memoadj_amount > 0) {

                        $voucher_row_no ++ ;

                        $narration_dtl  = 'ADJUSTMENT OF MEMO '.$memo_no.' DATED '.$memo_date.' AGAINST ADVANCE NO : '.$advance_serial_no ; 



                        $vd_array = array('ref_voucher_serial_no'      => $voucher_serial_no,

                                        'row_no'                     => $voucher_row_no,

                                        'main_ac_code'               => $counsel_clearing_code,

                                        'sub_ac_code'                => $payee_code,

                                        'ref_bill_year'              => NULL,

                                        'ref_bill_no'                => NULL,

                                        'client_code'                => NULL,

                                        'matter_code'                => NULL,

                                        'initial_code'               => NULL,

                                        'expense_type'               => NULL,

                                        'expense_code'               => NULL,

                                        'narration'                  => $narration_dtl,

                                        'realise_amount_inpocket'    => NULL,

                                        'realise_amount_outpocket'   => NULL,

                                        'realise_amount_counsel'     => NULL,

                                        'realise_amount_service_tax' => NULL,

                                        'bill_no'                    => $memo_no,

                                        'bill_date'                  => date_conv($memo_date),

                                        'basic_amount'               => NULL,

                                        'new_tax_code'               => NULL,

                                        'new_tax_percent'            => NULL,

                                        'new_tax_amount'             => NULL,

                                        'new_tax_cess_percent'       => NULL,

                                        'new_tax_cess_amount'        => NULL,

                                        'new_tax_hecess_percent'     => NULL,

                                        'new_tax_hecess_amount'      => NULL,

                                        'new_tax_total_percent'      => NULL,

                                        'new_tax_total_amount'       => NULL,

                                        'service_tax_amount'         => NULL,

                                        'gross_amount'               => $memoadj_amount,

                                        'tax_amount'                 => 0,

                                        'net_amount'                 => $memoadj_amount,

                                        'dr_cr_ind'                  => 'D',

                                        'deficit_amount_inpocket'    => NULL,

                                        'deficit_amount_outpocket'   => NULL,

                                        'deficit_amount_counsel'     => NULL,

                                        'deficit_amount_service_tax' => NULL,

                                        'part_full_ind'              => NULL,

                                        'ref_doc_serial_no'          => $memo_serial_no

                                        );

                        $vch_detail = $voucherDetailObj->insert($vd_array);

                    }

                }



                $voucher_row_no ++ ;

                $narration_dtl  = 'ADJUSTMENT OF MEMO(s) AGAINST ADVANCE NO '.$advance_serial_no ; 



                $vd_array = array('ref_voucher_serial_no'      => $voucher_serial_no,

                                'row_no'                     => $voucher_row_no,

                                'main_ac_code'               => $counsel_clearing_code,

                                'sub_ac_code'                => $payee_code,

                                'ref_bill_year'              => NULL,

                                'ref_bill_no'                => NULL,

                                'client_code'                => NULL,

                                'matter_code'                => NULL,

                                'initial_code'               => NULL,

                                'expense_type'               => NULL,

                                'expense_code'               => NULL,

                                'narration'                  => $narration_dtl,

                                'realise_amount_inpocket'    => NULL,

                                'realise_amount_outpocket'   => NULL,

                                'realise_amount_counsel'     => NULL,

                                'realise_amount_service_tax' => NULL,

                                'bill_no'                    => NULL,

                                'bill_date'                  => NULL,

                                'basic_amount'               => NULL,

                                'new_tax_code'               => NULL,

                                'new_tax_percent'            => NULL,

                                'new_tax_amount'             => NULL,

                                'new_tax_cess_percent'       => NULL,

                                'new_tax_cess_amount'        => NULL,

                                'new_tax_hecess_percent'     => NULL,

                                'new_tax_hecess_amount'      => NULL,

                                'new_tax_total_percent'      => NULL,

                                'new_tax_total_amount'       => NULL,

                                'service_tax_amount'         => NULL,

                                'gross_amount'               => $now_adjusted_amount,

                                'tax_amount'                 => 0,

                                'net_amount'                 => $now_adjusted_amount,

                                'dr_cr_ind'                  => 'C',

                                'deficit_amount_inpocket'    => NULL,

                                'deficit_amount_outpocket'   => NULL,

                                'deficit_amount_counsel'     => NULL,

                                'deficit_amount_service_tax' => NULL,

                                'part_full_ind'              => NULL,

                                'ref_doc_serial_no'          => NULL

                                );

                $vch_detail = $voucherDetailObj->insert($vd_array);



                //---- Advance Details

                $advupdt_sql = "update advance_details set booked_amount = ifnull(booked_amount,0) - '$old_adjusted_amount' + '$now_adjusted_amount' where serial_no = '".$advance_serial_no."'" ;

                $this->db->query($advupdt_sql);



                //---- Counsel Memo (Header) / Arbitrator Memo / Stenographer Memo

                $memorow = explode('|',$memostr);

                $memocnt = count($memorow)-1 ;



                for ($i=0; $i<$memocnt; $i++) {

                    $memoarr         = explode('^',$memorow[$i]) ;

                    $memo_serial_no  = $memoarr[0];

                    $memo_no         = $memoarr[1];

                    $memo_date       = $memoarr[2];

                    $memoadj_amount  = $memoarr[3];   if(empty($memoadj_amount)) { $memoadj_amount = 0 ; }

                    $memoold_amount  = $memoarr[4];   if(empty($memoold_amount)) { $memoold_amount = 0 ; }

          

                    if ($memoadj_amount > 0 || $memoold_amount > 0) {

                        if ($payee_type == 'C') {

                            $memupdt_sql = "update counsel_memo_header set counsel_booked_amount = ifnull(counsel_booked_amount,0) - '$memoold_amount' + '$memoadj_amount' where serial_no = '".$memo_serial_no."'" ;

                            $this->db->query($memupdt_sql);

                        

                        } else if ($payee_type == 'K') {

                            $memupdt_sql = "update counsel_memo_header set clerk_booked_amount = ifnull(clerk_booked_amount,0) - '$memoold_amount' + '$memoadj_amount' where serial_no = '".$memo_serial_no."'" ;

                            $this->db->query($memupdt_sql);

                        

                        } else if ($payee_type == 'A') {

                            $memupdt_sql = "update arbitrator_expense set booked_amount = ifnull(booked_amount,0) - '$memoold_amount' + '$memoadj_amount' where serial_no = '".$memo_serial_no."'" ;

                            $this->db->query($memupdt_sql);

                        

                        } else if ($payee_type == 'T') {

                            $memupdt_sql = "update steno_expense      set booked_amount = ifnull(booked_amount,0) - '$memoold_amount' + '$memoadj_amount' where serial_no = '".$memo_serial_no."'" ;

                            $this->db->query($memupdt_sql);

                        }

                    }

                }

                

                if($user_option == 'Add') { 

                    session()->setFlashdata('message', $message);

                    return redirect()->to(session()->last_selected_end_menu);

                } else {

                    session()->setFlashdata('message', "Record with Serial NO: [".$voucher_serial_no."] Updated Sucessfully !!");

                    return redirect()->to(session()->last_selected_end_menu);

                }

                $selemode = '';

            } else if($user_option == 'Delete') {  

                //--- Voucher Header

                $vch_header = $voucherHeaderObj->delete("serial_no = '".$voucher_serial_no."'") ;



                //--- Voucher Detail

                $vch_detail = $voucherDetailObj->delete("ref_voucher_serial_no = '".$voucher_serial_no."'");

                

                //---- Advance Details

                $advupdt_sql = "update advance_details set booked_amount = ifnull(booked_amount,0) - '$now_adjusted_amount' where serial_no = '".$advance_serial_no."'" ;

                $this->db->query($advupdt_sql);



                //---- Counsel Memo (Header) / Arbitrator Memo / Stenographer Memo

                $memorow = explode('|',$memostr); $memocnt = count($memorow)-1 ; $voucher_row_no = 0 ;



                for ($j=0; $j<$memocnt; $j++) {

                    $memoarr         = explode('^',$memorow[$j]) ;

                    $memo_serial_no  = $memoarr[0];

                    $memo_no         = $memoarr[1];

                    $memo_date       = $memoarr[2];

                    $memoadj_amount  = $memoarr[3];   if(empty($memoadj_amount)) { $memoadj_amount = 0 ; }

                    $memoold_amount  = $memoarr[4];   if(empty($memoold_amount)) { $memoold_amount = 0 ; }

    

                    if ($memoadj_amount > 0) {

                        if ($payee_type == 'C') {

                            $memupdt_sql = "update counsel_memo_header set counsel_booked_amount = ifnull(counsel_booked_amount,0) - '$memoadj_amount' where serial_no = '".$memo_serial_no."'" ;

                            $this->db->query($memupdt_sql);

                            

                        } else if ($payee_type == 'K') {

                            $memupdt_sql = "update counsel_memo_header set clerk_booked_amount = ifnull(clerk_booked_amount,0) - '$memoadj_amount' where serial_no = '".$memo_serial_no."'" ;

                            $this->db->query($memupdt_sql);

                            

                        } else if ($payee_type == 'A') {

                            $memupdt_sql = "update arbitrator_expense set booked_amount = ifnull(booked_amount,0) - '$memoadj_amount' where serial_no = '".$memo_serial_no."'" ;

                            $this->db->query($memupdt_sql);

                            

                        } else if ($payee_type == 'T') {

                            $memupdt_sql = "update steno_expense      set booked_amount = ifnull(booked_amount,0) - '$memoadj_amount' where serial_no = '".$memo_serial_no."'" ;

                            $this->db->query($memupdt_sql);

                            

                        }

                    }

                }

                

                session()->setFlashdata('message', "Record with Serial NO: [".$voucher_serial_no."] Deleted Sucessfully !!");

                return redirect()->to(session()->last_selected_end_menu);



            } else if($user_option == 'Approve') {  

                $doc_no    = getLastDocNo($fin_year,$branch_code,$daybook_code,'00','J');

                $doc_date  = date_conv($voucher_date) ;  if ($doc_date == '0000-00-00') { $doc_date = '' ; } 



                //--- Ledger Header

                $lh_array = array('serial_no'             => NULL,

                                'branch_code'           => $branch_code,

                                'fin_year'              => $fin_year,

                                'doc_type'              => $doc_type,

                                'doc_date'              => $doc_date,

                                'doc_no'                => $doc_no,

                                'daybook_code'          => $daybook_code,

                                'instrument_type'       => NULL,

                                'instrument_no'         => NULL,

                                'instrument_dt'         => NULL,

                                'bank_name'             => NULL,

                                'narration'             => $narration_hdr,

                                'payee_payer_type'      => $payee_type,

                                'payee_payer_code'      => $payee_code,

                                'payee_payer_name'      => $payee_name,

                                'address_line_1'        => NULL,

                                'address_line_2'        => NULL,

                                'address_line_3'        => NULL,

                                'address_line_4'        => NULL,

                                'pan_no'                => NULL,

                                'received_from'         => NULL,

                                'money_receipt_no'      => NULL,

                                'money_receipt_date'    => NULL,

                                'payment_type'          => NULL,

                                'basic_amount'          => NULL,

                                'new_tax_amount'        => NULL,

                                'new_tax_cess_amount'   => NULL,

                                'new_tax_hecess_amount' => NULL,

                                'new_tax_total_amount'  => NULL,

                                'service_tax_amount'    => NULL,

                                'gross_amount'          => $now_adjusted_amount,

                                'tax_code'              => NULL,

                                'tax_percent'           => NULL,

                                'tax_amount'            => NULL,

                                'net_amount'            => $now_adjusted_amount,

                                'status_code'           => 'C',

                                'ref_doc_serial_no'     => $voucher_serial_no,

                                'ref_doc_type'          => $ref_doc_type,

                                'ref_doc_no'            => NULL,

                                'ref_doc_date'          => NULL,

                                'prepared_by'           => $global_userid,

                                'prepared_on'           => $global_sysdate,

                                'approved_by'           => $global_userid,

                                'approved_on'           => $global_sysdate,

                                'paid_by'               => NULL,

                                'paid_on'               => NULL

                                );

                $ldg_header = $ledgerHeaderObj->insert($lh_array);

                $ledger_serial_no = $this->db->insertID();



                //--- Advance Adjustment Header

                $ah_array = array('serial_no'             => '',

                                'branch_code'           => $branch_code,

                                'ref_ledger_serial_no'  => $ledger_serial_no,

                                'ref_advance_serial_no' => $advance_serial_no,

                                'adjusted_amount'       => $now_adjusted_amount,

                                'status_code'           => 'C',

                                'prepared_by'           => $global_userid,

                                'prepared_on'           => $global_sysdate,

                                'updated_by'            => NULL,

                                'updated_on'            => NULL,

                                'approved_by'           => $global_userid,

                                'approved_on'           => $global_sysdate );

                $adj_header = $advAdjHeaderObj->insert($ah_array);

                $adjustment_serial_no = $this->db->insertID();



                //--- Ledger Detail / Counsel Memo (Header) / Arbitrator Expense / Steno Expense / Adjustment (Detail)

                $vchdtl_qry = $this->db->query("select * from voucher_detail where ref_voucher_serial_no = '$voucher_serial_no' order by row_no ")->getResultArray(); 

                foreach($vchdtl_qry as $vchdtl_row) {

                    //------- Ledger Detail

                    $ld_array = array('ref_ledger_serial_no'   => $ledger_serial_no,

                                        'branch_code'            => $branch_code,

                                        'main_ac_code'           => $vchdtl_row['main_ac_code'],

                                        'sub_ac_code'            => $vchdtl_row['sub_ac_code'],

                                        'client_code'            => $vchdtl_row['client_code'],

                                        'matter_code'            => $vchdtl_row['matter_code'],

                                        'initial_code'           => $vchdtl_row['initial_code'],

                                        'expense_type'           => $vchdtl_row['expense_type'],

                                        'expense_code'           => $vchdtl_row['expense_code'],

                                        'narration'              => $vchdtl_row['narration'],

                                        'bill_no'                => $vchdtl_row['bill_no'],

                                        'bill_date'              => $vchdtl_row['bill_date'],

                                        'basic_amount'           => $vchdtl_row['basic_amount'],

                                        'new_tax_code'           => $vchdtl_row['new_tax_code'],

                                        'new_tax_percent'        => $vchdtl_row['new_tax_percent'],

                                        'new_tax_amount'         => $vchdtl_row['new_tax_amount'],

                                        'new_tax_cess_percent'   => $vchdtl_row['new_tax_cess_percent'],

                                        'new_tax_cess_amount'    => $vchdtl_row['new_tax_cess_amount'],

                                        'new_tax_hecess_percent' => $vchdtl_row['new_tax_hecess_percent'],

                                        'new_tax_hecess_amount'  => $vchdtl_row['new_tax_hecess_amount'],

                                        'new_tax_total_percent'  => $vchdtl_row['new_tax_total_percent'],

                                        'new_tax_total_amount'   => $vchdtl_row['new_tax_total_amount'],

                                        'service_tax_amount'     => $vchdtl_row['service_tax_amount'],

                                        'gross_amount'           => $vchdtl_row['gross_amount'],

                                        'tax_amount'             => $vchdtl_row['tax_amount'],

                                        'net_amount'             => $vchdtl_row['net_amount'],

                                        'dr_cr_ind'              => $vchdtl_row['dr_cr_ind'],

                                        'record_type'            => 'G',

                                        'ref_doc_serial_no'      => $vchdtl_row['ref_doc_serial_no'],

                                        'ref_doc_type'           => NULL,

                                        'ref_doc_year'           => NULL,

                                        'ref_doc_no'             => NULL,

                                        'ref_doc_date'           => NULL

                                    );

                    $ldg_detail = $ledgerDetailObj->insert($ld_array);



                    //--- Advance Adjustment Detail

                    if ($vchdtl_row['dr_cr_ind'] == 'D') {

                        $ad_array = array('ref_adjustment_serial_no' => $adjustment_serial_no,

                                        'branch_code'              => $branch_code,

                                        'ref_doc_serial_no'        => $vchdtl_row['ref_doc_serial_no'],

                                        'ref_doc_year'             => NULL,

                                        'ref_doc_no'               => $vchdtl_row['bill_no'],

                                        'ref_doc_date'             => $vchdtl_row['bill_date'],

                                        'adjusted_amount'          => $vchdtl_row['gross_amount'],

                                        );

                        $adj_detail = $advAdjDetailObj->insert($ad_array);

                    }



                    //--- Counsel Memo / Arbitrator Expense / Stengrapher Expense

                    if ($payee_type == 'C') {

                        $memupdt_sql = "update counsel_memo_header set counsel_booked_amount = ifnull(counsel_booked_amount,0) - '$vchdtl_row[gross_amount]', counsel_adjusted_amount = ifnull(counsel_adjusted_amount,0) + '$vchdtl_row[gross_amount]'  where serial_no = '".$vchdtl_row['ref_doc_serial_no']."'" ;

                        $this->db->query($memupdt_sql);

                    

                    } else if ($payee_type == 'K') {

                        $memupdt_sql = "update counsel_memo_header set clerk_booked_amount = ifnull(clerk_booked_amount,0) - '$vchdtl_row[gross_amount]', clerk_adjusted_amount = ifnull(clerk_adjusted_amount,0) + '$vchdtl_row[gross_amount]'  where serial_no = '".$vchdtl_row['ref_doc_serial_no']."'" ;

                        $this->db->query($memupdt_sql);



                    } else if ($payee_type == 'A') {

                        $memupdt_sql = "update arbitrator_expense set booked_amount = ifnull(booked_amount,0) - '$vchdtl_row[gross_amount]', adjusted_amount = ifnull(adjusted_amount,0) + '$vchdtl_row[gross_amount]'  where serial_no = '".$vchdtl_row['ref_doc_serial_no']."'" ;

                        $this->db->query($memupdt_sql);



                    } else if ($payee_type == 'T') {

                        $memupdt_sql = "update steno_expense      set booked_amount = ifnull(booked_amount,0) - '$vchdtl_row[gross_amount]', adjusted_amount = ifnull(adjusted_amount,0) + '$vchdtl_row[gross_amount]'  where serial_no = '".$vchdtl_row['ref_doc_serial_no']."'" ;

                        $this->db->query($memupdt_sql);

                    }

                }



                //--- Advance Details

                $advupdt_sql = "update advance_details set adjusted_amount = ifnull(adjusted_amount,0) + '$now_adjusted_amount', booked_amount = ifnull(booked_amount,0) - '$now_adjusted_amount' where serial_no = '".$advance_serial_no."'" ;

                $this->db->query($advupdt_sql);



                //--- Voucher Header

                $vchhdr_sql = "update voucher_header set status_code = 'C', ref_ledger_serial_no = '$ledger_serial_no', passed_by = '$global_userid', passed_on = '$global_sysdate' where serial_no = '$voucher_serial_no' " ;

                $this->db->query($vchhdr_sql);



                //--- ledger_posting

                $this->ledger_posting($ledger_serial_no);

                $message = 'Please note Final Voucher No : ' . $doc_no;

                

                if($doc_no) {

                    session()->setFlashdata('message', $message);

                    return redirect()->to(session()->last_selected_end_menu);

                }

            } else if($user_option == 'Print') {

                $print = true; $response = $this->common_print_expenses($voucher_serial_no); // Surajit: window.open('rep_fin_voucher_receipts_made_client.php?serial_no=$serial_no');



                if(!is_object($response)) {

                    return view("pages/Finance/Journals/advance_adjustment", ['print' => $print, "data" => $data, "displayId" => $displayId, 'params' => $response['params'], 'user_option' => $user_option, 'serial_no' => $voucher_serial_no]);

                } else return $response;  

            }

        }

        

        if($selemode != 'Y' || $action == 'Proceed') {

            $branch_qry  = $this->db->query(session()->branch_selection_stmt)->getResultArray();

            $finyr_qry   = $this->db->query("select fin_year from params order by fin_year desc")->getResultArray();

            $payee_qry   = $this->db->query("select code_desc, code_code from code_master where type_code = '027' order by code_code")->getResultArray();

            

            if ($user_option == 'Add' && $selemode != 'Y')     { $redk = '' ;          $redv = '';          $disv = ''         ; $disv = ''         ; $disb1 = '' ;         $disb2 = 'disabled' ; $disb3 = 'disabled' ;  $disb4 = 'disabled' ; }

            if ($user_option == 'Add' && $selemode == 'Y')     { $redk = 'readonly' ;  $redv = '';          $disk = 'disabled' ; $disv = ''         ; $disb1 = 'disabled' ; $disb2 = '' ;         $disb3 = '' ;          $disb4 = 'disabled' ; }

            if ($user_option == 'Edit')                        { $redk = 'readonly' ;  $redv = '';          $disk = 'disabled' ; $disv = ''         ; $disb1 = 'disabled' ; $disb2 = 'disabled' ; $disb3 = '' ;          $disb4 = 'disabled' ; }

            if ($user_option == 'Delete')                      { $redk = 'readonly' ;  $redv = 'readonly';  $disk = 'disabled' ; $disv = 'disabled' ; $disb1 = 'disabled' ; $disb2 = 'disabled' ; $disb3 = '' ;          $disb4 = 'disabled' ; }

            if ($user_option == 'View')                        { $redk = 'readonly' ;  $redv = 'readonly';  $disk = 'disabled' ; $disv = 'disabled' ; $disb1 = 'disabled' ; $disb2 = 'disabled' ; $disb3 = 'disabled' ;  $disb4 = 'disabled' ; }

            if ($user_option == 'Approve')                     { $redk = 'readonly' ;  $redv = 'readonly';  $disk = 'disabled' ; $disv = 'disabled' ; $disb1 = 'disabled' ; $disb2 = 'disabled' ; $disb3 = '' ;          $disb4 = 'disabled' ; }

            if ($user_option == 'Print')                       { $redk = 'readonly' ;  $redv = 'readonly';  $disk = 'disabled' ; $disv = 'disabled' ; $disb1 = 'disabled' ; $disb2 = 'disabled' ; $disb3 = 'disabled' ;  $disb4 = '' ; }



            $selemode            = isset($_REQUEST['selemode'])            ? $_REQUEST['selemode']            : null;

            $voucher_serial_no   = isset($_REQUEST['voucher_serial_no'])   ? $_REQUEST['voucher_serial_no']   : '';

            $branch_code         = isset($_REQUEST['branch_code'])         ? $_REQUEST['branch_code']         : session()->user_qry['branch_code'] ;

            $fin_year            = isset($_REQUEST['fin_year'])            ? $_REQUEST['fin_year']            : $global_curr_finyear ;

            $voucher_serial_date = isset($_REQUEST['voucher_serial_date']) ? $_REQUEST['voucher_serial_date'] : $global_dmydate ;

            $advance_serial_no   = isset($_REQUEST['advance_serial_no'])   ? $_REQUEST['advance_serial_no']   : '';

            $payee_type_str      = isset($_REQUEST['payee_type_str'])      ? $_REQUEST['payee_type_str']      : '';

            $payee_code          = isset($_REQUEST['payee_code'])          ? $_REQUEST['payee_code']          : '';

            $payee_name          = isset($_REQUEST['payee_name'])          ? $_REQUEST['payee_name']          : '';

            $advance_amount      = isset($_REQUEST['advance_amount'])      ? $_REQUEST['advance_amount']      : 0 ;

            $adjusted_amount     = isset($_REQUEST['adjusted_amount'])     ? $_REQUEST['adjusted_amount']     : 0 ;

            $balance_amount      = isset($_REQUEST['balance_amount'])      ? $_REQUEST['balance_amount']      : 0 ;

            $now_adjusted_amount = isset($_REQUEST['now_adjusted_amount']) ? $_REQUEST['now_adjusted_amount'] : 0 ;

            $payee_type          = substr($payee_type_str, 0, 1);



            if ($user_option == 'Add') {

                if ($payee_type == 'C') {

                  $memdtl_sql  = "select a.serial_no, a.memo_no, date_format(a.memo_date,'%d-%m-%Y') memo_date, 

                                         (ifnull(a.counsel_fee,0)+ifnull(a.service_tax_fee,0)) memo_amount,

                                         (ifnull(a.counsel_fee_jv,0)+ifnull(a.service_tax_fee_jv,0)+ifnull(a.counsel_adjusted_amount,0)+ifnull(a.counsel_booked_amount,0)) paid_amount,

                                         ((ifnull(a.counsel_fee,0)+ifnull(a.service_tax_fee,0))-(ifnull(a.counsel_fee_jv,0)+ifnull(a.service_tax_fee_jv,0)+ifnull(a.counsel_adjusted_amount,0)+ifnull(a.counsel_booked_amount,0))) baln_amount,

                                         0    cadj_amount

                                    from counsel_memo_header a

                                   where a.branch_code     like '$branch_code'

                                     and a.counsel_code    like '$payee_code'

                                     and ((ifnull(a.counsel_fee,0)+ifnull(a.service_tax_fee,0))-(ifnull(a.counsel_fee_jv,0)+ifnull(a.service_tax_fee_jv,0)+ifnull(a.counsel_adjusted_amount,0)+ifnull(a.counsel_booked_amount,0))) > 0

                                   order by a.serial_no " ;

                  $memdtl_qry   = $this->db->query($memdtl_sql)->getResultArray();

                  $memdtl_cnt   = count($memdtl_qry);



                } else if ($payee_type == 'K') {

                  $memdtl_sql  = "select a.serial_no, a.memo_no, date_format(a.memo_date,'%d-%m-%Y') memo_date, 

                                         (ifnull(a.clerk_fee,0)) memo_amount,

                                         (ifnull(a.clerk_fee_jv,0)+ifnull(a.clerk_adjusted_amount,0)+ifnull(a.clerk_booked_amount,0)) paid_amount,

                                         (ifnull(a.clerk_fee,0)-(ifnull(a.clerk_fee_jv,0)+ifnull(a.clerk_adjusted_amount,0)+ifnull(a.clerk_booked_amount,0))) baln_amount,

                                         0    cadj_amount

                                    from counsel_memo_header a

                                   where a.branch_code     like '$branch_code'

                                     and a.clerk_code      like '$payee_code'

                                     and (ifnull(a.clerk_fee,0)-(ifnull(a.clerk_fee_jv,0)+ifnull(a.clerk_adjusted_amount,0)+ifnull(a.clerk_booked_amount,0))) > 0

                                   order by a.serial_no " ;

                  $memdtl_qry   = $this->db->query($memdtl_sql)->getResultArray();

                  $memdtl_cnt   = count($memdtl_qry);



                } else if ($payee_type == 'A') {

                  $memdtl_sql  = "select a.serial_no, a.memo_no, date_format(a.memo_date,'%d-%m-%Y') memo_date, 

                                         (ifnull(a.amount,0)) memo_amount,

                                         (ifnull(a.passed_amount,0)+ifnull(a.adjusted_amount,0)+ifnull(a.booked_amount,0)) paid_amount,

                                         (ifnull(a.amount,0) -(ifnull(a.passed_amount,0)+ifnull(a.adjusted_amount,0)+ifnull(a.booked_amount,0))) baln_amount,

                                         0    cadj_amount

                                    from arbitrator_expense a

                                   where a.branch_code     like '$branch_code'

                                     and a.associate_code  like '$payee_code'

                                     and (ifnull(a.amount,0) -(ifnull(a.passed_amount,0)+ifnull(a.adjusted_amount,0)+ifnull(a.booked_amount,0))) > 0

                                   order by a.serial_no " ;

                  $memdtl_qry   = $this->db->query($memdtl_sql)->getResultArray();

                  $memdtl_cnt   = count($memdtl_qry);



                } else if ($payee_type == 'T') {

                  $memdtl_sql  = "select a.serial_no, a.memo_no, date_format(a.memo_date,'%d-%m-%Y') memo_date, 

                                         (ifnull(a.amount,0)) memo_amount,

                                         (ifnull(a.passed_amount,0)+ifnull(a.adjusted_amount,0)+ifnull(a.booked_amount,0)) paid_amount,

                                         (ifnull(a.amount,0) -(ifnull(a.passed_amount,0)+ifnull(a.adjusted_amount,0)+ifnull(a.booked_amount,0))) baln_amount,

                                         0    cadj_amount

                                    from steno_expense a

                                   where a.branch_code     like '$branch_code'

                                     and a.associate_code  like '$payee_code'

                                     and (ifnull(a.amount,0) -(ifnull(a.passed_amount,0)+ifnull(a.adjusted_amount,0)+ifnull(a.booked_amount,0))) > 0

                                   order by a.serial_no " ;

                  $memdtl_qry   = $this->db->query($memdtl_sql)->getResultArray();

                  $memdtl_cnt   = count($memdtl_qry);

                }

                

            } else if ($user_option == 'Edit') {

               $voucher_serial_no   = isset($_REQUEST['voucher_serial_no']) ?$_REQUEST['voucher_serial_no'] : 0 ;

               $selemode = 'Y';

          

               //--- Header 

               $vchhdr_qry          = $this->db->query("select * from voucher_header where serial_no = '$voucher_serial_no' ")->getRowArray();

               $branch_code         = $vchhdr_qry['branch_code'];

               $fin_year            = getFinYear($vchhdr_qry['entry_date']);

               $voucher_serial_date = date_conv($vchhdr_qry['entry_date']);

               $payee_type          = $vchhdr_qry['payee_payer_type'];

               $payee_code          = $vchhdr_qry['payee_payer_code'];

               $payee_name          = $vchhdr_qry['payee_payer_name'];

               $advance_serial_no   = $vchhdr_qry['ref_advance_serial_no'];

               $now_adjusted_amount = $vchhdr_qry['gross_amount'];



               $advance_qry         = $this->db->query("select * from advance_details where serial_no = '$advance_serial_no' ")->getRowArray();

               $advance_amount      = isset($advance_qry['gross_amount']) ? $advance_qry['gross_amount'] : 0;

               $adjusted_amount     = isset($advance_qry['adjusted_amount']) ? $advance_qry['adjusted_amount'] : 0;

               $balance_amount      = (isset($advance_qry['gross_amount']) ? $advance_qry['gross_amount'] : 0 - (isset($advance_qry['adjusted_amount']) ? $advance_qry['adjusted_amount'] : 0) - (isset($advance_qry['booked_amount']) ? $advance_qry['booked_amount'] : 0)) + $now_adjusted_amount;

          

               //--- Detail 

               if ($payee_type == 'C') {

                    $memdtl_sql  = "select a.serial_no, a.memo_no, date_format(a.memo_date,'%d-%m-%Y') memo_date, 

                                        (ifnull(a.counsel_fee,0)+ifnull(a.service_tax_fee,0)) memo_amount,

                                        (ifnull(a.counsel_fee_jv,0)+ifnull(a.service_tax_fee_jv,0)+ifnull(a.counsel_adjusted_amount,0)+ifnull(a.counsel_booked_amount,0)-ifnull(b.gross_amount,0)) paid_amount,

                                        ((ifnull(a.counsel_fee,0)+ifnull(a.service_tax_fee,0))-(ifnull(a.counsel_fee_jv,0)+ifnull(a.service_tax_fee_jv,0)+ifnull(a.counsel_adjusted_amount,0)+ifnull(a.counsel_booked_amount,0))+ifnull(b.gross_amount,0)) baln_amount,

                                        ifnull(b.gross_amount,0) cadj_amount

                                    from counsel_memo_header a left outer join voucher_detail b on b.ref_voucher_serial_no = '$voucher_serial_no' and b.ref_doc_serial_no = a.serial_no and b.dr_cr_ind = 'D'

                                    where a.branch_code like '$branch_code' and a.counsel_code like '$payee_code'

                                    and ((ifnull(a.counsel_fee,0)+ifnull(a.service_tax_fee,0))-(ifnull(a.counsel_fee_jv,0)+ifnull(a.service_tax_fee_jv,0)+ifnull(a.counsel_adjusted_amount,0)+ifnull(a.counsel_booked_amount,0))+ifnull(b.gross_amount,0)) > 0

                                    order by a.serial_no " ;

                    $memdtl_qry   = $this->db->query($memdtl_sql)->getResultArray();

                    $memdtl_cnt   = count($memdtl_qry);



               } else if ($payee_type == 'K') {

                $memdtl_sql  = "select a.serial_no, a.memo_no, date_format(a.memo_date,'%d-%m-%Y') memo_date, 

                                        (ifnull(a.clerk_fee,0)) memo_amount,

                                        (ifnull(a.clerk_fee_jv,0)+ifnull(a.clerk_adjusted_amount,0)+ifnull(a.clerk_booked_amount,0)-ifnull(b.gross_amount,0)) paid_amount,

                                        (ifnull(a.clerk_fee,0)-(ifnull(a.clerk_fee_jv,0)+ifnull(a.clerk_adjusted_amount,0)+ifnull(a.clerk_booked_amount,0))+ifnull(b.gross_amount,0)) baln_amount,

                                        ifnull(b.gross_amount,0) cadj_amount

                                   from counsel_memo_header a

                                           left outer join voucher_detail b on b.ref_voucher_serial_no = '$voucher_serial_no' and b.ref_doc_serial_no = a.serial_no and b.dr_cr_ind = 'D'

                                  where a.branch_code     like '$branch_code'

                                    and a.clerk_code      like '$payee_code' and

                                        (ifnull(a.clerk_fee,0)-(ifnull(a.clerk_fee_jv,0)+ifnull(a.clerk_adjusted_amount,0)+ifnull(a.clerk_booked_amount,0))+ifnull(b.gross_amount,0)) > 0

                                  order by a.serial_no " ;

          

                 $memdtl_qry   = $this->db->query($memdtl_sql)->getResultArray();

                 $memdtl_cnt   = count($memdtl_qry);



               } else if ($payee_type == 'A') {

                 $memdtl_sql  = "select a.serial_no, a.memo_no, date_format(a.memo_date,'%d-%m-%Y') memo_date, 

                                        (ifnull(a.amount,0)) memo_amount,

                                        (ifnull(a.passed_amount,0)+ifnull(a.adjusted_amount,0)+ifnull(a.booked_amount,0)-ifnull(b.gross_amount,0)) paid_amount,

                                        (ifnull(a.amount,0) -(ifnull(a.passed_amount,0)+ifnull(a.adjusted_amount,0)+ifnull(a.booked_amount,0))+ifnull(b.gross_amount,0)) baln_amount,

                                        0    cadj_amount

                                   from arbitrator_expense a

                                           left outer join voucher_detail b on b.ref_voucher_serial_no = '$voucher_serial_no' and b.ref_doc_serial_no = a.serial_no and b.dr_cr_ind = 'D'

                                  where a.branch_code     like '$branch_code'

                                    and a.associate_code  like '$payee_code'

                                    and (ifnull(a.amount,0) -(ifnull(a.passed_amount,0)+ifnull(a.adjusted_amount,0)+ifnull(a.booked_amount,0))+ifnull(b.gross_amount,0)) > 0

                                  order by a.serial_no " ;

                 $memdtl_qry   = $this->db->query($memdtl_sql)->getResultArray();

                 $memdtl_cnt   = count($memdtl_qry);



               } else if ($payee_type == 'T') {

                 $memdtl_sql  = "select a.serial_no, a.memo_no, date_format(a.memo_date,'%d-%m-%Y') memo_date, 

                                        (ifnull(a.amount,0)) memo_amount,

                                        (ifnull(a.passed_amount,0)+ifnull(a.adjusted_amount,0)+ifnull(a.booked_amount,0)-ifnull(b.gross_amount,0)) paid_amount,

                                        (ifnull(a.amount,0) -(ifnull(a.passed_amount,0)+ifnull(a.adjusted_amount,0)+ifnull(a.booked_amount,0))+ifnull(b.gross_amount,0)) baln_amount,

                                        0    cadj_amount

                                   from steno_expense a

                                           left outer join voucher_detail b on b.ref_voucher_serial_no = '$voucher_serial_no' and b.ref_doc_serial_no = a.serial_no and b.dr_cr_ind = 'D'

                                  where a.branch_code     like '$branch_code'

                                    and a.associate_code  like '$payee_code'

                                    and (ifnull(a.amount,0) -(ifnull(a.passed_amount,0)+ifnull(a.adjusted_amount,0)+ifnull(a.booked_amount,0))+ifnull(b.gross_amount,0)) > 0

                                  order by a.serial_no " ;

                 $memdtl_qry   = $this->db->query($memdtl_sql)->getResultArray();

                 $memdtl_cnt   = count($memdtl_qry);

               }

            } else {

               $voucher_serial_no = isset($_REQUEST['voucher_serial_no']) ?$_REQUEST['voucher_serial_no'] : 0 ;

               $selemode = 'Y';

               

                if($user_option == 'Approve') {

                    $voucher_date     = $global_dmydate ;

                    $current_date     = $global_dmydate ;

                    $finyr_start_date = $global_curr_finyr_fdmydate ;  

                    $finyr_end_date   = $global_curr_finyr_ldmydate ;  

                }

          

                //--- Header 

                $vchhdr_qry          = $this->db->query("select * from voucher_header where serial_no = '$voucher_serial_no' ")->getRowArray();



                $branch_code         = isset($vchhdr_qry['branch_code']) ? $vchhdr_qry['branch_code'] : '';

                $fin_year            = isset($vchhdr_qry['entry_date']) ? getFinYear($vchhdr_qry['entry_date']) : '';

                $voucher_serial_date = isset($vchhdr_qry['entry_date']) ? date_conv($vchhdr_qry['entry_date']) : '';

                $payee_type          = isset($vchhdr_qry['payee_payer_type']) ? $vchhdr_qry['payee_payer_type'] : '';

                $payee_code          = isset($vchhdr_qry['payee_payer_code']) ? $vchhdr_qry['payee_payer_code'] : '';

                $payee_name          = isset($vchhdr_qry['payee_payer_name']) ? $vchhdr_qry['payee_payer_name'] : '';

                $advance_serial_no   = isset($vchhdr_qry['ref_advance_serial_no']) ? $vchhdr_qry['ref_advance_serial_no'] : '';

                $now_adjusted_amount = isset($vchhdr_qry['gross_amount']) ? $vchhdr_qry['gross_amount'] : 0;



                $advance_qry         = $this->db->query("select * from advance_details where serial_no = '$advance_serial_no' ")->getRowArray();

                $advance_amount      = isset($advance_qry['gross_amount']) ? $advance_qry['gross_amount'] : 0;

                $adjusted_amount     = isset($advance_qry['adjusted_amount']) ? $advance_qry['adjusted_amount'] : 0;

                $balance_amount      = (isset($advance_qry['gross_amount']) ? $advance_qry['gross_amount'] : 0 - (isset($advance_qry['adjusted_amount']) ? $advance_qry['adjusted_amount'] : 0) - (isset($advance_qry['booked_amount']) ? $advance_qry['booked_amount'] : 0)) + $now_adjusted_amount;

           

                //--- Detail 

                if ($payee_type == 'C') {

                    $memdtl_sql  = "select a.serial_no, a.memo_no, date_format(a.memo_date,'%d-%m-%Y') memo_date, 

                                            (ifnull(a.counsel_fee,0)+ifnull(a.service_tax_fee,0)) memo_amount,

                                            (ifnull(a.counsel_fee_jv,0)+ifnull(a.service_tax_fee_jv,0)+ifnull(a.counsel_adjusted_amount,0)+ifnull(a.counsel_booked_amount,0)-ifnull(b.gross_amount,0)) paid_amount,

                                            ((ifnull(a.counsel_fee,0)+ifnull(a.service_tax_fee,0))-(ifnull(a.counsel_fee_jv,0)+ifnull(a.service_tax_fee_jv,0)+ifnull(a.counsel_adjusted_amount,0)+ifnull(a.counsel_booked_amount,0))+ifnull(b.gross_amount,0)) baln_amount,

                                            ifnull(b.gross_amount,0) cadj_amount

                                        from counsel_memo_header a, voucher_detail b

                                        where a.branch_code        like '$branch_code'

                                        and a.counsel_code       like '$payee_code'

                                        and ((ifnull(a.counsel_fee,0)+ifnull(a.service_tax_fee,0))-(ifnull(a.counsel_fee_jv,0)+ifnull(a.service_tax_fee_jv,0)+ifnull(a.counsel_adjusted_amount,0)+ifnull(a.counsel_booked_amount,0))+ifnull(b.gross_amount,0)) > 0

                                        and a.serial_no             = b.ref_doc_serial_no

                                        and b.ref_voucher_serial_no = '$voucher_serial_no' 

                                        and b.dr_cr_ind             = 'D'

                                        order by a.serial_no " ;



                    $memdtl_qry   = $this->db->query($memdtl_sql)->getResultArray();

                    $memdtl_cnt   = count($memdtl_qry);



                } else if ($payee_type == 'K') {

                    $memdtl_sql  = "select a.serial_no, a.memo_no, date_format(a.memo_date,'%d-%m-%Y') memo_date, 

                                            (ifnull(a.clerk_fee,0)) memo_amount,

                                            (ifnull(a.clerk_fee_jv,0)+ifnull(a.clerk_adjusted_amount,0)+ifnull(a.clerk_booked_amount,0)-ifnull(b.gross_amount,0)) paid_amount,

                                            (ifnull(a.clerk_fee,0)-(ifnull(a.clerk_fee_jv,0)+ifnull(a.clerk_adjusted_amount,0)+ifnull(a.clerk_booked_amount,0))+ifnull(b.gross_amount,0)) baln_amount,

                                            ifnull(b.gross_amount,0) cadj_amount

                                        from counsel_memo_header a, voucher_detail b

                                        where a.branch_code        like '$branch_code'

                                        and a.clerk_code         like '$payee_code'

                                        and (ifnull(a.clerk_fee,0)-(ifnull(a.clerk_fee_jv,0)+ifnull(a.clerk_adjusted_amount,0)+ifnull(a.clerk_booked_amount,0))+ifnull(b.gross_amount,0)) > 0

                                        and a.serial_no             = b.ref_doc_serial_no

                                        and b.ref_voucher_serial_no = '$voucher_serial_no' 

                                        and b.dr_cr_ind             = 'D'

                                        order by a.serial_no " ;



                    $memdtl_qry   = $this->db->query($memdtl_sql)->getResultArray();

                    $memdtl_cnt   = count($memdtl_qry);

                    

                } else if ($payee_type == 'A') {

                    $memdtl_sql  = "select a.serial_no, a.memo_no, date_format(a.memo_date,'%d-%m-%Y') memo_date, 

                                            (ifnull(a.amount,0)) memo_amount,

                                            (ifnull(a.passed_amount,0)+ifnull(a.adjusted_amount,0)+ifnull(a.booked_amount,0)-ifnull(b.gross_amount,0)) paid_amount,

                                            (ifnull(a.amount,0) -(ifnull(a.passed_amount,0)+ifnull(a.adjusted_amount,0)+ifnull(a.booked_amount,0))+ifnull(b.gross_amount,0)) baln_amount,

                                            0    cadj_amount

                                        from arbitrator_expense a, voucher_detail b

                                        where a.branch_code     like '$branch_code'

                                        and a.associate_code  like '$payee_code'

                                        and (ifnull(a.amount,0) -(ifnull(a.passed_amount,0)+ifnull(a.adjusted_amount,0)+ifnull(a.booked_amount,0))+ifnull(b.gross_amount,0)) > 0

                                        and a.serial_no             = b.ref_doc_serial_no

                                        and b.ref_voucher_serial_no = '$voucher_serial_no' 

                                        and b.dr_cr_ind             = 'D'

                                        order by a.serial_no " ;

                    $memdtl_qry   = $this->db->query($memdtl_sql)->getResultArray();

                    $memdtl_cnt   = count($memdtl_qry);



                } else if ($payee_type == 'T') {

                    $memdtl_sql  = "select a.serial_no, a.memo_no, date_format(a.memo_date,'%d-%m-%Y') memo_date, 

                                            (ifnull(a.amount,0)) memo_amount,

                                            (ifnull(a.passed_amount,0)+ifnull(a.adjusted_amount,0)+ifnull(a.booked_amount,0)-ifnull(b.gross_amount,0)) paid_amount,

                                            (ifnull(a.amount,0) -(ifnull(a.passed_amount,0)+ifnull(a.adjusted_amount,0)+ifnull(a.booked_amount,0))+ifnull(b.gross_amount,0)) baln_amount,

                                            0    cadj_amount

                                        from steno_expense a, voucher_detail b

                                        where a.branch_code     like '$branch_code'

                                        and a.associate_code  like '$payee_code'

                                        and (ifnull(a.amount,0) -(ifnull(a.passed_amount,0)+ifnull(a.adjusted_amount,0)+ifnull(a.booked_amount,0))+ifnull(b.gross_amount,0)) > 0

                                        and a.serial_no             = b.ref_doc_serial_no

                                        and b.ref_voucher_serial_no = '$voucher_serial_no' 

                                        and b.dr_cr_ind             = 'D'

                                        order by a.serial_no " ;

                    $memdtl_qry   = $this->db->query($memdtl_sql)->getResultArray();

                    $memdtl_cnt   = count($memdtl_qry);

                }

            }

        } 



        $params = [

            'voucher_serial_no' => isset($voucher_serial_no) ? $voucher_serial_no : '',

            'global_sysdate' => $global_sysdate,

            'global_curr_finyr_fymddate' => $global_curr_finyr_fymddate,

            'global_curr_finyr_lymddate' => $global_curr_finyr_lymddate,

            'row_count' => isset($row_count['totalRow']) ? $row_count['totalRow'] : 0,

            'trans_type' => isset($trans_type) ? $trans_type : '',

            'global_curr_finyear' => isset($global_curr_finyear) ? $global_curr_finyear : '',

            'global_userid' => $global_userid,

            'fin_year' => $fin_year,

            'daybook_code_from' => $daybook_code_from,

            'daybook_code_to' => $daybook_code_to,

            'daybook_type_to' => $daybook_type_to,

            'daybook_type_from' => $daybook_type_from,

            'payee_type_str' => $payee_type_str,

            'payee_type' => $payee_type,

            'payee_name' => $payee_name,

            'payee_code' => $payee_code,

            'advance_amount' => $advance_amount,

            'adjusted_amount' => $adjusted_amount,

            'voucher_serial_date' => $voucher_serial_date,

            'voucher_date' => $voucher_date,

            'finyr_start_date' => $finyr_start_date,

            'finyr_end_date' => $finyr_end_date,

            'advance_serial_no' => $advance_serial_no,

            'balance_amount' => $balance_amount,

            'now_adjusted_amount' => $now_adjusted_amount,

        ];



        return view("pages/Finance/Journals/advance_adjustment", compact('params', 'data', 'user_option', 'selemode', 'memdtl_qry', 'memdtl_cnt', 'displayId', 'redk', 'redv', 'disk', 'disv', 'disb1', 'disb2', 'disb3', 'disb4'));

    }



    public function advance_transfer_JV() {

        $global_userid = $user_id = session()->userId;

        $data = branches($user_id); $global_curr_finyear = session()->financialYear;

        $global_dmydate = date('d-m-Y'); $global_sysdate = date_conv($global_dmydate); 

        $data['requested_url'] = session()->requested_end_menu_url;

        $displayId = ['client_help_id' => 4542, 'advance_help_id' => 4541, 'matter_help_id' => 4543];

        

        $global_curr_finyr_fymddate = substr($global_curr_finyear, 0, 4).'-04-01';

        $global_curr_finyr_lymddate = substr($global_curr_finyear, 5, 4).'-03-31';



        $global_curr_finyr_fdmydate = $curr_fyrsdt = '01-04-'.substr($global_curr_finyear,0,4);

        $global_curr_finyr_ldmydate = $curr_fyredt = '31-03-'.substr($global_curr_finyear,5,4);



        $selemode   = isset($_REQUEST['selemode']) ? $_REQUEST['selemode'] : null;

        $user_option = isset($_REQUEST['user_option'])?$_REQUEST['user_option']:null;

        $serial_no   = isset($_REQUEST['serial_no'])?$_REQUEST['serial_no']:null;



        $daybook_code_from = $daybook_code_to = $daybook_type_to = $daybook_type_from = ''; $memdtl_qry = []; $memdtl_cnt = 0;

        $redk = $redv = $disk = $disv = $disb1 = $disb2 = $disb3 = $disb4 = $voucher_date = $current_date = $finyr_start_date = $finyr_end_date = $voucher_serial_date = $advance_serial_no = $old_advance_serial_no = '';

        $client_code_from = $client_name_from = $matter_code_from = $initial_code_from = $matter_desc_from = $advance_amount = $adjusted_amount = $balance_amount = $client_code_to = $client_name_to = $matter_code_to = ''; 

        $initial_code_to = $matter_desc_to = $transfer_amount = $old_transfer_amount = '';



        if($selemode != 'Y') {

            $voucher_date      = $global_dmydate ;

            $current_date      = $global_dmydate ;

            $finyr_start_date  = $global_curr_finyr_fdmydate;  

            $finyr_end_date    = $global_curr_finyr_ldmydate;  



            $branch_qry  = $this->db->query(session()->branch_selection_stmt)->getResultArray();



            if($user_option == 'Add') {

                $branch_code         = session()->branch_code ;

                $fin_year            = $global_curr_finyear ;

                $voucher_serial_date = $global_dmydate ;

            } else {

                $voucher_serial_no   = isset($_REQUEST['voucher_serial_no'])?$_REQUEST['voucher_serial_no']:null;



                //---- From

                $jvhdr_qry              = $this->db->query("select * from voucher_header where serial_no = '$voucher_serial_no' ")->getRowarray();

                $branch_code            = $jvhdr_qry['branch_code'];

                $fin_year               = $global_curr_finyear;

                $voucher_serial_date    = date_conv($jvhdr_qry['entry_date']);

                $advance_serial_no      = $jvhdr_qry['ref_advance_serial_no'];

                $transfer_amount        = $jvhdr_qry['net_amount'];

                $old_advance_serial_no  = $jvhdr_qry['ref_advance_serial_no'];

                $old_transfer_amount    = $jvhdr_qry['net_amount'];

                	 

                $adv_qry                = $this->db->query("select * from advance_details where serial_no = '$advance_serial_no' ")->getRowarray();

                $client_code_from       = $adv_qry['client_code'];

                $matter_code_from       = $adv_qry['matter_code'];

                $advance_amount         = $adv_qry['gross_amount'];

                $adjusted_amount        = $adv_qry['adjusted_amount'];

                $booked_amount          = $adv_qry['booked_amount'];

                $balance_amount         = number_format(($adv_qry['gross_amount'] - $adv_qry['adjusted_amount']- $adv_qry['booked_amount'] + $transfer_amount),2,'.','');

                 

                $client_qry             = $this->db->query("select client_name from client_master where client_code = '$client_code_from' ")->getRowarray();

                $client_name_from       = $client_qry['client_name'] ;

                $matter_qry             = $this->db->query("select concat(matter_desc1,':',matter_desc2) matter_desc, initial_code from fileinfo_header where matter_code = '$matter_code_from' ")->getRowarray();

                $matter_desc_from       = isset($matter_qry['matter_desc']) ? $matter_qry['matter_desc'] : '' ;

                $initial_code_from      = isset($matter_qry['initial_code']) ? $matter_qry['initial_code'] : '';



                if ($client_code_from == $matter_code_from) {$matter_desc_from = 'ADVANCE ..' ; $initial_code_from = 'PS' ; }



                //---- To

                $jvdtl_qry              = $this->db->query("select * from voucher_detail where ref_voucher_serial_no = '$voucher_serial_no' and dr_cr_ind = 'C' ")->getRowarray();

                $client_code_to         = $jvdtl_qry['client_code'];

                $matter_code_to         = $jvdtl_qry['matter_code'];

                

                $client_qry             = $this->db->query("select client_name from client_master where client_code = '$client_code_to' ")->getRowarray();

                $client_name_to         = $client_qry['client_name'] ;

                $matter_qry             = $this->db->query("select concat(matter_desc1,':',matter_desc2) matter_desc, initial_code from fileinfo_header where matter_code = '$matter_code_to' ")->getRowarray();

                $matter_desc_to         = isset($matter_qry['matter_desc']) ? $matter_qry['matter_desc'] : '' ;

                $initial_code_to        = isset($matter_qry['initial_code']) ? $matter_qry['initial_code'] : '';



                if ($client_code_to == $matter_code_to) {$matter_desc_to = 'ADVANCE ..' ; $initial_code_to = 'PS' ; }

            }



            if ($user_option == 'Add' )     { $redk = 'readonly';  $redv = '';          $disv = '' ; $disk = ''; }

            if ($user_option == 'Edit')     { $redk = 'readonly';  $redv = '';          $disv = '' ; $disk = 'disabled'; }

            if ($user_option == 'Delete')   { $redk = 'readonly';  $redv = 'readonly';  $disv = 'disabled'; $disk = 'disabled'; }

            if ($user_option == 'View')     { $redk = 'readonly';  $redv = 'readonly';  $disv = 'disabled'; $disk = 'disabled'; }

            if ($user_option == 'Print')    { $redk = 'readonly';  $redv = 'readonly';  $disv = 'disabled'; $disk = 'disabled'; }

            if ($user_option == 'Approve')  { $redk = 'readonly';  $redv = 'readonly';  $disv = 'disabled'; $disk = 'disabled'; }

            $selemode = 'Y';

        } else {

            $voucher_serial_no      = isset($_POST['voucher_serial_no'])?$_POST['voucher_serial_no']:null;

            $branch_code            = isset($_POST['branch_code'])?$_POST['branch_code']:null;

            $fin_year               = isset($_POST['fin_year'])?$_POST['fin_year']:null;

            $voucher_serial_date    = isset($_POST['voucher_serial_date'])?$_POST['voucher_serial_date']:null;

            $advance_serial_no      = isset($_POST['advance_serial_no'])?$_POST['advance_serial_no']:null;

            $client_code_from       = isset($_POST['client_code_from'])?$_POST['client_code_from']:null;

            $matter_code_from       = isset($_POST['matter_code_from'])?$_POST['matter_code_from']:null;

            $initial_code_from      = isset($_POST['initial_code_from'])?$_POST['initial_code_from']:null;

            $advance_amount         = isset($_POST['advance_amount'])?$_POST['advance_amount']:null;

            $adjusted_amount        = isset($_POST['adjusted_amount'])?$_POST['adjusted_amount']:null;

            $balance_amount         = isset($_POST['balance_amount'])?$_POST['balance_amount']:null;

            $client_code_to         = isset($_POST['client_code_to'])?$_POST['client_code_to']:null;

            $matter_code_to         = isset($_POST['matter_code_to'])?$_POST['matter_code_to']:null;

            $initial_code_to        = isset($_POST['initial_code_to'])?$_POST['initial_code_to']:null;

            $transfer_amount        = isset($_POST['transfer_amount'])?$_POST['transfer_amount']:null;

            $voucher_date           = isset($_POST['voucher_date'])?$_POST['voucher_date']:null;

            $old_advance_serial_no  = isset($_POST['old_advance_serial_no'])?$_POST['old_advance_serial_no']:null;

            $old_transfer_amount    = isset($_POST['old_transfer_amount'])?$_POST['old_transfer_amount']:null;

                        

            $voucherHeaderObj = $this->db->table("voucher_header"); // object : voucher header

            $voucherDetailObj = $this->db->table("voucher_detail"); // object : voucher detail

            $ledgerHeaderObj = $this->db->table("ledger_trans_hdr"); // object : ledger header

            $ledgerDetailObj = $this->db->table("ledger_trans_dtl"); // object : ledger detail

            $advAdjHeaderObj = $this->db->table("advance_adjustment_header"); // object : advance_adjustment_header

            $advAdjDetailObj = $this->db->table("advance_adjustment_detail"); // object : advance_adjustment_detail

            $advanceDetailObj = $this->db->table("advance_details"); // object : advance detail

            

            $doc_type = 'JV';

            $ref_doc_type = 'TJ';

            $narration = "TRANSFER OF ADVANCE [ Serial No ".$advance_serial_no. " ]" ;



            $row = $this->db->query("select key_value from control_keycodes where key_code = '017'")->getRowArray();

            $daybook_code = $row['key_value'];



            $row = $this->db->query("select key_desc,key_value from control_keycodes where key_code = '022'")->getRowArray();

            $main_ac_code = $row['key_value'];

            $sub_ac_code  = '';

            

            if($user_option == 'Add') {  

                //--- Voucher Header

                $h_array = array('serial_no'             => '',

                                'branch_code'           => $branch_code,

                                'entry_date'            => date_conv($voucher_serial_date),

                                'trans_type'            => $ref_doc_type,

                                'voucher_type'          => $doc_type,

                                'payee_payer_type'      => NULL,

                                'payee_payer_code'      => NULL,

                                'payee_payer_name'      => NULL,

                                'received_from'         => NULL,

                                'payment_type'          => NULL,

                                'daybook_code'          => $daybook_code,

                                'instrument_type'       => NULL,

                                'instrument_no'         => NULL,

                                'instrument_dt'         => NULL,

                                'bank_name'             => NULL,

                                'gross_amount'          => $transfer_amount,

                                'tax_amount'            => 0,

                                'net_amount'            => $transfer_amount,

                                'remarks'               => NULL,

                                'status_code'           => 'A',

                                'ref_ledger_serial_no'  => NULL,

                                'ref_jv_serial_no'      => NULL,

                                'ref_advance_serial_no' => $advance_serial_no,

                                'link_jv_serial_no'     => NULL,

                                'prepared_by'           => $global_userid,

                                'prepared_on'           => $global_sysdate

                                );

                $voucherHeaderObj->insert($h_array);

                $voucher_serial_no = $this->db->insertID();



                //--- Voucher Detail

                $d_array = array('ref_voucher_serial_no'     => $voucher_serial_no,

                                'row_no'                    => 1,

                                'main_ac_code'              => $main_ac_code,

                                'sub_ac_code'               => $client_code_from,

                                'client_code'               => $client_code_from,

                                'matter_code'               => $matter_code_from,

                                'initial_code'              => $initial_code_from,

                                'narration'                 => $narration,

                                'gross_amount'              => $transfer_amount,

                                'tax_amount'                => 0,

                                'net_amount'                => $transfer_amount,

                                'dr_cr_ind'                 => 'D');

                $v_detail = $voucherDetailObj->insert($d_array);



                $d_array = array('ref_voucher_serial_no'     => $voucher_serial_no,

                                'row_no'                    => 2,

                                'main_ac_code'              => $main_ac_code,

                                'sub_ac_code'               => $client_code_to,

                                'client_code'               => $client_code_to,

                                'matter_code'               => $matter_code_to,

                                'initial_code'              => $initial_code_to,

                                'narration'                 => $narration,

                                'gross_amount'              => $transfer_amount,

                                'tax_amount'                => 0,

                                'net_amount'                => $transfer_amount,

                                'dr_cr_ind'                 => 'C');

                $v_detail = $voucherDetailObj->insert($d_array);



                //--- Advance Details

                $adv_stmt = "update advance_details set booked_amount = ifnull(booked_amount,0) + $transfer_amount where serial_no = '".$advance_serial_no."'" ;

                $this->db->query($adv_stmt);



                $message = 'Please note Voucher Serial No : ' . $voucher_serial_no ;



                session()->setFlashdata('message', $message);

                return redirect()->to(session()->last_selected_end_menu);

  

            } else if($user_option == 'Edit') {  

                //--- Voucher Header

                $h_array = array('gross_amount'          => $transfer_amount,

                                'tax_amount'            => 0,

                                'net_amount'            => $transfer_amount,

                                'status_code'           => 'A',

                                'ref_advance_serial_no' => $advance_serial_no,

                                'prepared_by'           => $global_userid,

                                'prepared_on'           => $global_sysdate

                                );

                $v_header = $voucherHeaderObj->update($h_array,"serial_no = '".$voucher_serial_no."'");



                //--- Voucher Detail

                $v_detail_del = $voucherDetailObj->delete("ref_voucher_serial_no = '".$voucher_serial_no."'");

                

                $d_array = array('ref_voucher_serial_no'     => $voucher_serial_no,

                                'row_no'                    => 1,

                                'main_ac_code'              => $main_ac_code,

                                'sub_ac_code'               => $client_code_from,

                                'client_code'               => $client_code_from,

                                'matter_code'               => $matter_code_from,

                                'initial_code'              => $initial_code_from,

                                'narration'                 => $narration,

                                'gross_amount'              => $transfer_amount,

                                'tax_amount'                => 0,

                                'net_amount'                => $transfer_amount,

                                'dr_cr_ind'                 => 'D');

                $voucherDetailObj->insert($d_array);



                $d_array = array('ref_voucher_serial_no'     => $voucher_serial_no,

                                'row_no'                    => 2,

                                'main_ac_code'              => $main_ac_code,

                                'sub_ac_code'               => $client_code_to,

                                'client_code'               => $client_code_to,

                                'matter_code'               => $matter_code_to,

                                'initial_code'              => $initial_code_to,

                                'narration'                 => $narration,

                                'gross_amount'              => $transfer_amount,

                                'tax_amount'                => 0,

                                'net_amount'                => $transfer_amount,

                                'dr_cr_ind'                 => 'C');

                $voucherDetailObj->insert($d_array);



                //--- Advance Details

                $adv_stmt   = "update advance_details set booked_amount = ifnull(booked_amount,0) - $old_transfer_amount where serial_no = '".$old_advance_serial_no."'" ;

                $updt_adv   = $this->db->query($adv_stmt);

    

                $adv_stmt = "update advance_details set booked_amount = ifnull(booked_amount,0) + $transfer_amount where serial_no = '".$advance_serial_no."'" ;

                $updt_adv = $this->db->query($adv_stmt);



                session()->setFlashdata('message', "Record with Serial NO: [".$voucher_serial_no."] Updated Sucessfully !!");

                return redirect()->to(session()->last_selected_end_menu);



            } else if($user_option == 'Delete') {  

                //--- Voucher Header

                $v_header_del = $voucherHeaderObj->delete("serial_no = '".$voucher_serial_no."'") ;



                //--- Voucher Detail

                $v_detail_del = $voucherDetailObj->delete("ref_voucher_serial_no = '".$voucher_serial_no."'");



                //--- Advance Details

                $adv_stmt   = "update advance_details set booked_amount = ifnull(booked_amount,0) - $transfer_amount where serial_no = '".$advance_serial_no."'" ;

                $updt_adv   = $this->db->query($adv_stmt);



                session()->setFlashdata('message', "Record with Serial NO: [".$voucher_serial_no."] Deleted Sucessfully !!");

                return redirect()->to(session()->last_selected_end_menu);



            } else if($user_option == 'Print') {  

                $print = true; $response = $this->common_print_expenses($voucher_serial_no); // Surajit: window.open('rep_fin_voucher_receipts_made_client.php?serial_no=$serial_no');



                if(!is_object($response)) {

                    return view("pages/Finance/Journals/advance_adjustment", ['print' => $print, "data" => $data, "displayId" => $displayId, 'params' => $response['params'], 'user_option' => $user_option, 'serial_no' => $voucher_serial_no]);

                } else return $response;  

 

            } else if($user_option == 'Approve') {  

                $fin_year = $global_curr_finyear ; 

                $daybook_qry = $this->db->query("select key_value from control_keycodes where key_code = '017' ")->getRowArray();

                $daybook_code = $daybook_qry['key_value'] ;

                

                //--- Generation of Doc Number

                $doc_no    = getLastDocNo($fin_year,$branch_code,$daybook_code,'00','J');

                $doc_date  = date_conv($voucher_date) ;



                //--- Ledger Header

                $lh_array = array('serial_no'             => '',

                                'branch_code'           => $branch_code,

                                'fin_year'              => $fin_year,

                                'doc_type'              => $doc_type,

                                'doc_date'              => $doc_date,

                                'doc_no'                => $doc_no,

                                'daybook_code'          => $daybook_code,

                                'narration'             => $narration,

                                'gross_amount'          => $transfer_amount,

                                'tax_amount'            => 0,

                                'net_amount'            => $transfer_amount,

                                'status_code'           => 'C',

                                'ref_doc_serial_no'     => $voucher_serial_no,

                                'ref_doc_type'          => $ref_doc_type,

                                'prepared_by'           => $global_userid,

                                'prepared_on'           => $global_sysdate,

                                'approved_by'           => $global_userid,

                                'approved_on'           => $global_sysdate

                                );

                $l_header = $ledgerHeaderObj->insert($lh_array);

                $ledger_serial_no = $this->db->insertID();



                //--- Ledger Detail

                $vchdtl_qry = $this->db->query("select * from voucher_detail where ref_voucher_serial_no = '$voucher_serial_no' ")->getResultArray();



                foreach($vchdtl_qry as $vchdtl_row) {

                    $ld_array = array('ref_ledger_serial_no' => $ledger_serial_no,

                                        'branch_code'          => $branch_code,

                                        'main_ac_code'         => $vchdtl_row['main_ac_code'],

                                        'sub_ac_code'          => $vchdtl_row['sub_ac_code'],

                                        'client_code'          => $vchdtl_row['client_code'],

                                        'matter_code'          => $vchdtl_row['matter_code'],

                                        'initial_code'         => $vchdtl_row['initial_code'],

                                        'expense_type'         => NULL,

                                        'expense_code'         => NULL,

                                        'narration'            => $vchdtl_row['narration'],

                                        'gross_amount'         => $vchdtl_row['gross_amount'],

                                        'tax_amount'           => $vchdtl_row['tax_amount'],

                                        'net_amount'           => $vchdtl_row['net_amount'],

                                        'dr_cr_ind'            => $vchdtl_row['dr_cr_ind'],

                                        'record_type'          => 'G',

                                        'ref_doc_serial_no'    => $voucher_serial_no,

                                        'ref_doc_type'         => $ref_doc_type

                                        );

                    $l_detail = $ledgerDetailObj->insert($ld_array);

                }



                //--- Advance Adjustment Header

                $ah_array = array('serial_no'             => '',

                                'branch_code'           => $branch_code,

                                'ref_ledger_serial_no'  => $ledger_serial_no,

                                'ref_advance_serial_no' => $advance_serial_no,

                                'adjusted_amount'       => $transfer_amount,

                                'status_code'           => 'C',

                                'prepared_by'           => $global_userid,

                                'prepared_on'           => $global_sysdate,

                                'approved_by'           => $global_userid,

                                'approved_on'           => $global_sysdate

                                );

                $ad_header = $advAdjHeaderObj->insert($ah_array);

                $adjustment_serial_no = $this->db->insertID();



                //--- Advance Adjustment Detail

                $ad_array = array('ref_adjustment_serial_no' => $adjustment_serial_no,

                                'branch_code'              => $branch_code,

                                'adjusted_amount'          => $transfer_amount

                                );

                $ad_detail = $advAdjDetailObj->insert($ad_array);

                

                //--- Advance Details

                $adv_stmt   = "update advance_details set adjusted_amount = ifnull(adjusted_amount,0) + $transfer_amount, booked_amount = ifnull(booked_amount,0) - $transfer_amount where serial_no = '".$advance_serial_no."'" ;

                $updt_adv   = $this->db->query($adv_stmt);

                

                $ad_array = array('serial_no'             => '',

                                'branch_code'           => $branch_code,

                                'fin_year'              => $fin_year,

                                'ref_ledger_serial_no'  => $ledger_serial_no,

                                'advance_type'          => 'R',

                                'payee_payer_type'      => 'C',

                                'payee_payer_code'      => $client_code_to,

                                'payee_payer_name'      => $client_name_to,

                                'matter_code'           => $matter_code_to,

                                'client_code'           => $client_code_to,

                                'instrument_type'       => NULL,

                                'instrument_no'         => NULL,

                                // 'instrument_date'       => NULL,

                                'gross_amount'          => $transfer_amount,

                                'tax_amount'            => 0,

                                'net_amount'            => $transfer_amount,

                                'adjusted_amount'       => 0,

                                'booked_amount'         => 0,

                                'status_code'           => 'A'

                                );

                $a_header = $advanceDetailObj->insert($ad_array);



                $vchhdr_sql = "update voucher_header set status_code = 'C', ref_ledger_serial_no = '$ledger_serial_no', passed_by = '$global_userid', passed_on = '$global_sysdate' where serial_no = '$voucher_serial_no' " ;

                $vchhdr_qry = $this->db->query($vchhdr_sql);

                

                $this->ledger_posting($ledger_serial_no);

                $message = 'Please note Final Voucher No : ' . $doc_no ;



                session()->setFlashdata('message', $message);

                return redirect()->to(session()->last_selected_end_menu);

            } 

        }



        $params = [

            'voucher_serial_no' => isset($voucher_serial_no) ? $voucher_serial_no : '',

            'global_sysdate' => $global_sysdate,

            'global_curr_finyr_fymddate' => $global_curr_finyr_fymddate,

            'global_curr_finyr_lymddate' => $global_curr_finyr_lymddate,

            'row_count' => isset($row_count['totalRow']) ? $row_count['totalRow'] : 0,

            'trans_type' => isset($trans_type) ? $trans_type : '',

            'global_curr_finyear' => isset($global_curr_finyear) ? $global_curr_finyear : '',

            'global_userid' => $global_userid,

            'fin_year' => $fin_year,

            'daybook_code_from' => $daybook_code_from,

            'daybook_code_to' => $daybook_code_to,

            'daybook_type_to' => $daybook_type_to,

            'daybook_type_from' => $daybook_type_from,

            'voucher_serial_date ' => $voucher_serial_date ,

            'global_dmydate' => $global_dmydate,

            'client_name_from' => $client_name_from,

            'initial_code_from' => $initial_code_from,

            'client_code_from' => $client_code_from,

            'matter_code_from' => $matter_code_from,

            'voucher_serial_date' => $voucher_serial_date,

            'voucher_date' => $voucher_date,

            'finyr_start_date' => $finyr_start_date,

            'finyr_end_date' => $finyr_end_date,

            'advance_serial_no' => $advance_serial_no,

            'old_advance_serial_no' => $old_advance_serial_no,

            'matter_desc_from' => $matter_desc_from,

            'advance_amount' => $advance_amount,

            'adjusted_amount' => $adjusted_amount,

            'balance_amount' => $balance_amount,

            'client_code_to' => $client_code_to,

            'client_name_to' => $client_name_to,

            'matter_code_to' => $matter_code_to,

            'initial_code_to' => $initial_code_to,

            'matter_desc_to' => $matter_desc_to,

            'transfer_amount' => $transfer_amount,

            'old_transfer_amount' => $old_transfer_amount,

        ];



        return view("pages/Finance/Journals/advance_transfer_JV", compact('params', 'data', 'user_option', 'selemode', 'memdtl_qry', 'memdtl_cnt', 'displayId', 'redk', 'redv', 'disk', 'disv', 'disb1', 'disb2', 'disb3', 'disb4'));

    }



    public function advance_adjustment_JV() {

        $global_userid = $user_id = session()->userId;

        $data = branches($user_id); $global_curr_finyear = session()->financialYear;

        $global_dmydate = date('d-m-Y'); $global_sysdate = date_conv($global_dmydate); 

        $data['requested_url'] = session()->requested_end_menu_url;

        $displayId = ['client_help_id' => 4542, 'advance_help_id' => 4541, 'matter_help_id' => 4543, 'payee_name_code' => 0, 'advanced_code' => 0];

        

        $global_curr_finyr_fymddate = substr($global_curr_finyear, 0, 4).'-04-01';

        $global_curr_finyr_lymddate = substr($global_curr_finyear, 5, 4).'-03-31';



        $global_curr_finyr_fdmydate = $curr_fyrsdt = '01-04-'.substr($global_curr_finyear,0,4);

        $global_curr_finyr_ldmydate = $curr_fyredt = '31-03-'.substr($global_curr_finyear,5,4);



        $selemode   = isset($_REQUEST['selemode']) ? $_REQUEST['selemode'] : null;

        $user_option = isset($_REQUEST['user_option'])?$_REQUEST['user_option']:null;

        $serial_no   = isset($_REQUEST['serial_no'])?$_REQUEST['serial_no']:null;



        $mode = isset($_REQUEST['mode'])?$_REQUEST['mode']:null;

        $msg  = isset($_REQUEST['error_string'])?$_REQUEST['error_string']:null;

        $vchdtl_qry = []; $memdtl_cnt = 0; $redv = '' ;  $disv = '' ;

      

        $branch_qry  = $this->db->query(session()->branch_selection_stmt)->getResultArray();

        $finyr_qry   = $this->db->query("select fin_year from params order by fin_year desc ")->getResultArray();



        if($selemode != 'Y') {

            $rowoptn = '';  $billyr = ''; $billno = ''; $matr_code = ''; $iposamt_stax = ''; $oposamt_stax = ''; $cnosamt_stax = ''; $iposamt_ntax = ''; $oposamt_ntax = ''; $cnosamt_ntax = '';

            $stosamt = '' ; $ipcolamt_stax = ''; $opcolamt_stax = ''; $cncolamt_stax = ''; $ipcolamt_ntax = ''; $opcolamt_ntax = ''; $cncolamt_ntax = ''; $stcolamt = ''; $pfind = ''; $lineno = ''; 

            $voucher_row_no = ''; $old_billyr = ''; $old_billno = ''; $old_matr_code = ''; $old_ipcolamt_stax = ''; $old_opcolamt_stax = ''; $old_cncolamt_stax = ''; $old_ipcolamt_ntax = ''; 

            $old_opcolamt_ntax = ''; $old_cncolamt_ntax = ''; $old_stcolamt = ''; $old_ipdefamt_stax = ''; $old_opdefamt_stax = ''; $old_cndefamt_stax = ''; $old_ipdefamt_ntax = ''; 

            $old_opdefamt_ntax = ''; $old_cndefamt_ntax = '' ; $old_stdefamt = '' ; $old_pfind = '' ;

        

            if ($user_option == 'Add') {

                $redv = '' ;  $disv = '' ;

                

                $voucher_serial_no   = isset($_REQUEST['voucher_serial_no'])?$_REQUEST['voucher_serial_no']:'';

                $branch_code         = isset($_REQUEST['branch_code'])?$_REQUEST['branch_code']:session()->user_qry['branch_code'] ;

                $fin_year            = isset($_REQUEST['fin_year'])?$_REQUEST['fin_year']:$global_curr_finyear ;

                $voucher_serial_date = isset($_REQUEST['voucher_serial_date'])?$_REQUEST['voucher_serial_date']:$global_dmydate ;

                $advance_serial_no   = isset($_REQUEST['advance_serial_no'])?$_REQUEST['advance_serial_no']:'';

                $client_code         = isset($_REQUEST['client_code'])?$_REQUEST['client_code']:'';

                $matter_code         = isset($_REQUEST['matter_code'])?$_REQUEST['matter_code']:'';

                $client_name         = isset($_REQUEST['client_name'])?$_REQUEST['client_name']:'';

                $matter_desc         = isset($_REQUEST['matter_desc'])?$_REQUEST['matter_desc']:'';

                $advance_amount      = isset($_REQUEST['advance_amount'])?$_REQUEST['advance_amount']:0 ;

                $adjusted_amount     = isset($_REQUEST['adjusted_amount'])?$_REQUEST['adjusted_amount']:0 ;

                $balance_amount      = isset($_REQUEST['balance_amount'])?$_REQUEST['balance_amount']:0 ;

                $now_adjusted_amount = isset($_REQUEST['now_adjusted_amount'])?$_REQUEST['now_adjusted_amount']:0 ;

    

            } else {

                $redv = 'readonly'; $disv = 'disabled'; $selemode = 'Y';

                

                $fin_year            = isset($_REQUEST['fin_year'])?$_REQUEST['fin_year']:$global_curr_finyear;

                $voucher_serial_no   = isset($_REQUEST['voucher_serial_no'])?$_REQUEST['voucher_serial_no']:'';

                

                $voucher_date     = $global_dmydate ;

                $current_date     = $global_dmydate ;

                $finyr_start_date = $global_curr_finyr_fdmydate ;  

                $finyr_end_date   = $global_curr_finyr_ldmydate ;  



                $vchhdr_qry          = $this->db->query("select * from voucher_header where serial_no = '$voucher_serial_no' ")->getRowArray();

                $branch_code         = $vchhdr_qry['branch_code'] ;

                $voucher_serial_date = date_conv($vchhdr_qry['entry_date']) ;

                $advance_serial_no   = $vchhdr_qry['ref_advance_serial_no'] ;

                $now_adjusted_amount = $vchhdr_qry['gross_amount'] ;

                

                $advance_qry         = $this->db->query("select * from advance_details where serial_no = '$advance_serial_no' ")->getRowArray();

                $client_code         = isset($advance_qry['client_code']) ? $advance_qry['client_code'] : '';

                $matter_code         = isset($advance_qry['matter_code']) ? $advance_qry['matter_code'] : '';

                $advance_amount      = isset($advance_qry['gross_amount']) ? $advance_qry['gross_amount'] : 0;

                $adjusted_amount     = isset($advance_qry['adjusted_amount']) ? $advance_qry['adjusted_amount'] : 0;

                $booked_amount       = isset($advance_qry['booked_amount']) ? $advance_qry['booked_amount'] : 0;



                $balance_amount      = ($advance_amount - $adjusted_amount - $booked_amount) + $now_adjusted_amount ;

                $client_name         = getClientName($client_code);

                $matter_desc         = getMatterDesc($client_code,$matter_code);

            } 

        } else {

            $voucher_serial_no   = isset($_REQUEST['voucher_serial_no'])?$_REQUEST['voucher_serial_no']:null;

            $branch_code         = isset($_REQUEST['branch_code'])?$_REQUEST['branch_code']:null;

            $fin_year            = isset($_REQUEST['fin_year'])?$_REQUEST['fin_year']:null;

            $advance_serial_no   = isset($_REQUEST['advance_serial_no'])?$_REQUEST['advance_serial_no']:null;

            $client_code         = isset($_REQUEST['client_code'])?$_REQUEST['client_code']:null;

            $matter_code         = isset($_REQUEST['matter_code'])?$_REQUEST['matter_code']:null;

            $now_adjusted_amount = isset($_REQUEST['now_adjusted_amount'])?$_REQUEST['now_adjusted_amount']:0;

            $voucher_date        = isset($_REQUEST['voucher_date'])?$_REQUEST['voucher_date']:$global_dmydate;

            $doc_type = 'JV'; $ref_doc_type = 'BJ';

            $narration = 'ADJUSTMENT OF BILL(s) AGAINST ADVANCE NO '.$advance_serial_no ; 



            $voucherHeaderObj = $this->db->table("voucher_header"); // object : voucher header

            $voucherDetailObj = $this->db->table("voucher_detail"); // object : voucher detail

            $advanceDetailObj = $this->db->table("advance_details"); // object : advance detail

            $billDetailObj = $this->db->table("bill_detail"); // object : bill_detail  

            $ledgerHeaderObj = $this->db->table("ledger_trans_hdr"); // object : ledger_trans_hdr

            $ledgerDetailObj = $this->db->table("ledger_trans_dtl"); // object : ledger_trans_dtl

            $advAdjHeaderObj = $this->db->table("advance_adjustment_header"); // object : advance_adjustment_header

            $advAdjDetailObj = $this->db->table("advance_adjustment_detail"); // object : advance_adjustment_detail

            $realisationHeaderObj = $this->db->table("bill_realisation_header"); // object : bill_realisation_header

            $realisationDetailObj = $this->db->table("bill_realisation_detail"); // object : bill_realisation_detail



            $row = $this->db->query("select key_value from control_keycodes where key_code = '017'")->getRowArray();

            $daybook_code = $row['key_value'];

            

            $row = $this->db->query("select key_desc,key_value from control_keycodes where key_code = '022'")->getRowArray();

            $advance_main_ac_code = $row['key_value'];

            $advance_sub_ac_code  = '';



            if ($user_option == 'Add' || $user_option == 'Edit') {

                $voucher_serial_no   = isset($_REQUEST['voucher_serial_no'])?$_REQUEST['voucher_serial_no']:null ; 

                $branch_code         = isset($_REQUEST['branch_code'])?$_REQUEST['branch_code']:null ;

                $fin_year            = isset($_REQUEST['fin_year'])?$_REQUEST['fin_year']:null ;

                $voucher_serial_date = isset($_REQUEST['voucher_serial_date'])?$_REQUEST['voucher_serial_date']:null ;

                $advance_serial_no   = isset($_REQUEST['advance_serial_no'])?$_REQUEST['advance_serial_no']:null ; 

                $client_code         = isset($_REQUEST['client_code'])?$_REQUEST['client_code']:null ;

                $matter_code         = isset($_REQUEST['matter_code'])?$_REQUEST['matter_code']:null ;

                

                $rowoptn             = isset($_REQUEST['rowoptn'])?$_REQUEST['rowoptn']:null ;

                $rowoptn             = $user_option;



                $bill_year           = isset($_REQUEST['billyr'])?$_REQUEST['billyr']:null ;

                // $bill_no             = isset($_REQUEST['bill_no'])?$_REQUEST['bill_no']:null ;

                $bill_no             = isset($_REQUEST['billno'])?$_REQUEST['billno']:null ;

                $clntcd              = $client_code ;

                // $matrcd              = isset($_REQUEST['matrcd'])?$_REQUEST['matrcd']:null ;

                $matrcd              = isset($_REQUEST['matr_code'])?$_REQUEST['matr_code']:null ;

                $intlcd              = getMatterInitial($matrcd);



                $iposamt_stax        = !empty($_REQUEST['iposamt_stax'])?$_REQUEST['iposamt_stax']:0 ;

                $oposamt_stax        = !empty($_REQUEST['oposamt_stax'])?$_REQUEST['oposamt_stax']:0 ;

                $cnosamt_stax        = !empty($_REQUEST['cnosamt_stax'])?$_REQUEST['cnosamt_stax']:0 ;



                $iposamt_ntax        = !empty($_REQUEST['iposamt_ntax'])?$_REQUEST['iposamt_ntax']:0 ;

                $oposamt_ntax        = !empty($_REQUEST['oposamt_ntax'])?$_REQUEST['oposamt_ntax']:0 ;

                $cnosamt_ntax        = !empty($_REQUEST['cnosamt_ntax'])?$_REQUEST['cnosamt_ntax']:0 ;



                $iposamt             = $iposamt_stax + $iposamt_ntax ;

                $oposamt             = $oposamt_stax + $oposamt_ntax ;

                $cnosamt             = $cnosamt_stax + $cnosamt_ntax ;



                $stosamt             = !empty($_REQUEST['stosamt'])?$_REQUEST['stosamt']:0 ;



                $ipcolamt_stax       = !empty($_REQUEST['ipcolamt_stax'])?$_REQUEST['ipcolamt_stax']:0 ;

                $opcolamt_stax       = !empty($_REQUEST['opcolamt_stax'])?$_REQUEST['opcolamt_stax']:0 ;

                $cncolamt_stax       = !empty($_REQUEST['cncolamt_stax'])?$_REQUEST['cncolamt_stax']:0 ;



                $ipcolamt_ntax       = !empty($_REQUEST['ipcolamt_ntax'])?$_REQUEST['ipcolamt_ntax']:0 ;

                $opcolamt_ntax       = !empty($_REQUEST['opcolamt_ntax'])?$_REQUEST['opcolamt_ntax']:0 ;

                $cncolamt_ntax       = !empty($_REQUEST['cncolamt_ntax'])?$_REQUEST['cncolamt_ntax']:0 ;



                $ipcolamt            = $ipcolamt_stax + $ipcolamt_ntax ;

                $opcolamt            = $opcolamt_stax + $opcolamt_ntax ;

                $cncolamt            = $cncolamt_stax + $cncolamt_ntax ;



                $stcolamt            = isset($_REQUEST['stcolamt'])?$_REQUEST['stcolamt']:0 ;

                $pfind               = isset($_REQUEST['pfind'])?$_REQUEST['pfind']:null ;



                $ipdefamt_stax = 0.00; $opdefamt_stax = 0.00; $cndefamt_stax = 0.00; $ipdefamt_ntax = 0.00; $opdefamt_ntax = 0.00; $cndefamt_ntax = 0.00;

                $ipdefamt = 0.00; $opdefamt = 0.00; $cndefamt = 0.00; $stdefamt = 0.00; 

                $totcolamt = number_format(($ipcolamt_stax + $opcolamt_stax + $cncolamt_stax + $ipcolamt_ntax + $opcolamt_ntax + $cncolamt_ntax + $stcolamt), 2, '.', '') ;



                if($pfind == 'F') { 

                    $ipdefamt_stax =  ($iposamt_stax - $ipcolamt_stax); 

                    $opdefamt_stax =  ($oposamt_stax - $opcolamt_stax);

                    $cndefamt_stax =  ($cnosamt_stax - $cncolamt_stax); 



                    $ipdefamt_ntax =  ($iposamt_ntax - $ipcolamt_ntax); 

                    $opdefamt_ntax =  ($oposamt_ntax - $opcolamt_ntax); 

                    $cndefamt_ntax =  ($cnosamt_ntax - $cncolamt_ntax); 



                    $ipdefamt =  $ipdefamt_stax + $ipdefamt_ntax ; 

                    $opdefamt =  $opdefamt_stax + $opdefamt_ntax ; 

                    $cndefamt =  $cndefamt_stax + $cndefamt_ntax ;

                

                    $stdefamt = ($stosamt - $stcolamt); 

                } 

            

                $voucher_row_no = isset($_REQUEST['voucher_row_no'])?$_REQUEST['voucher_row_no']:null ;

                $old_bill_year = isset($_REQUEST['old_bill_year'])?$_REQUEST['old_bill_year']:null ;

                $old_bill_no = isset($_REQUEST['old_bill_no'])?$_REQUEST['old_bill_no']:null ;

                $old_matrcd = isset($_REQUEST['old_matrcd'])?$_REQUEST['old_matrcd']:null ;



                $old_ipcolamt_stax = !empty($_REQUEST['old_ipcolamt_stax'])?$_REQUEST['old_ipcolamt_stax']:0 ;

                $old_opcolamt_stax = !empty($_REQUEST['old_opcolamt_stax'])?$_REQUEST['old_opcolamt_stax']:0 ;

                $old_cncolamt_stax = !empty($_REQUEST['old_cncolamt_stax'])?$_REQUEST['old_cncolamt_stax']:0 ;



                $old_ipcolamt_ntax = !empty($_REQUEST['old_ipcolamt_ntax'])?$_REQUEST['old_ipcolamt_ntax']:0 ;

                $old_opcolamt_ntax = !empty($_REQUEST['old_opcolamt_ntax'])?$_REQUEST['old_opcolamt_ntax']:0 ;

                $old_cncolamt_ntax = !empty($_REQUEST['old_cncolamt_ntax'])?$_REQUEST['old_cncolamt_ntax']:0 ;





                $old_ipcolamt =  $old_ipcolamt_stax + $old_ipcolamt_ntax;

                $old_opcolamt =  $old_opcolamt_stax + $old_opcolamt_ntax;

                $old_cncolamt =  $old_cncolamt_stax + $old_cncolamt_ntax;



                $old_stcolamt = !empty($_REQUEST['old_stcolamt'])?$_REQUEST['old_stcolamt']:0 ;



                $old_ipdefamt_stax = !empty($_REQUEST['old_ipdefamt_stax'])?$_REQUEST['old_ipdefamt_stax']:0 ;

                $old_opdefamt_stax = !empty($_REQUEST['old_opdefamt_stax'])?$_REQUEST['old_opdefamt_stax']:0 ;

                $old_cndefamt_stax = !empty($_REQUEST['old_cndefamt_stax'])?$_REQUEST['old_cndefamt_stax']:0 ;



                $old_ipdefamt_ntax = !empty($_REQUEST['old_ipdefamt_ntax'])?$_REQUEST['old_ipdefamt_ntax']:0 ;

                $old_opdefamt_ntax = !empty($_REQUEST['old_opdefamt_ntax'])?$_REQUEST['old_opdefamt_ntax']:0 ;

                $old_cndefamt_ntax = !empty($_REQUEST['old_cndefamt_ntax'])?$_REQUEST['old_cndefamt_ntax']:0 ;



                $old_ipdefamt = $old_ipdefamt_stax + $old_ipdefamt_ntax ;

                $old_opdefamt = $old_opdefamt_stax + $old_opdefamt_ntax ;

                $old_cndefamt = $old_cndefamt_stax + $old_cndefamt_ntax ;



                $old_stdefamt = isset($_REQUEST['old_stdefamt']) ? ($_REQUEST['old_stdefamt'] != '') ? $_REQUEST['old_stdefamt'] : 0 :0 ;

                $old_pfind = isset($_REQUEST['pfind'])?$_REQUEST['old_pfind']:null ;

                $old_totcolamt = number_format(($old_ipcolamt+$old_opcolamt+$old_cncolamt+$old_stcolamt), 2, '.', '') ;



                $doc_type      = 'JV';

                $ref_doc_type  = 'BJ';

                $narration     = "BILL : ".$bill_year.'/'.$bill_no." ADJUSTED AGAINST ADVANCE NO ".$advance_serial_no ;

                

                $row = $this->db->query("select key_value from control_keycodes where key_code = '017'")->getRowArray();

                $daybook_code = $row['key_value'];

                

                $row = $this->db->query("select key_value from control_keycodes where key_code = '008'")->getRowArray();

                $main_ac_code = $row['key_value'];

                $sub_ac_code  = '';

                

                // echo $voucher_serial_no; die;

                //--- Voucher Header

                if ($voucher_serial_no == '') {

                    $vh_array = array(  'serial_no'             => '',

                                        'branch_code'           => $branch_code,

                                        'entry_date'            => date_conv($voucher_serial_date),

                                        'trans_type'            => $ref_doc_type,

                                        'voucher_type'          => $doc_type,

                                        'payee_payer_type'      => NULL,

                                        'payee_payer_code'      => NULL,

                                        'payee_payer_name'      => NULL,

                                        'received_from'         => NULL,

                                        'payment_type'          => NULL,

                                        'daybook_code'          => $daybook_code,

                                        'instrument_type'       => NULL,

                                        'instrument_no'         => NULL,

                                        'instrument_dt'         => NULL,

                                        'bank_name'             => NULL,

                                        'gross_amount'          => 0,

                                        'tax_amount'            => 0,

                                        'net_amount'            => 0,

                                        'remarks'               => NULL,

                                        'status_code'           => 'A',

                                        'ref_ledger_serial_no'  => NULL,

                                        'ref_jv_serial_no'      => NULL,

                                        'ref_advance_serial_no' => $advance_serial_no,

                                        'link_jv_serial_no'     => NULL,

                                        'prepared_by'           => $global_userid,

                                        'prepared_on'           => $global_sysdate

                                        );

                    $voucherHeaderObj->insert($vh_array);

                    $voucher_serial_no = $this->db->insertID();

                }

            

                //--- Voucher Detail

                if ($voucher_row_no == '') {

                    $maxrow_qry = $this->db->query("select ifnull(max(row_no),0)+1 as maxrow from voucher_detail where ref_voucher_serial_no = '$voucher_serial_no' ")->getRowArray();

                    $voucher_row_no = $maxrow_qry['maxrow'] ;

                    

                    $vd_array = array('ref_voucher_serial_no'          => $voucher_serial_no,

                                    'row_no'                         => $voucher_row_no,

                                    'main_ac_code'                   => $main_ac_code,

                                    'sub_ac_code'                    => $sub_ac_code,

                                    'ref_bill_year'                  => $bill_year,

                                    'ref_bill_no'                    => $bill_no,

                                    'client_code'                    => $clntcd,

                                    'matter_code'                    => $matrcd,

                                    'initial_code'                   => $intlcd,

                                    'expense_type'                   => NULL,

                                    'expense_code'                   => NULL,

                                    'narration'                      => $narration,

                                    'realise_amount_inpocket_stax'   => $ipcolamt_stax,

                                    'realise_amount_outpocket_stax'  => $opcolamt_stax,

                                    'realise_amount_counsel_stax'    => $cncolamt_stax,

                                    'realise_amount_inpocket_ntax'   => $ipcolamt_ntax,

                                    'realise_amount_outpocket_ntax'  => $opcolamt_ntax,

                                    'realise_amount_counsel_ntax'    => $cncolamt_ntax,

                                    'realise_amount_inpocket'        => ($ipcolamt_stax + $ipcolamt_ntax),

                                    'realise_amount_outpocket'       => ($opcolamt_stax + $opcolamt_ntax) ,

                                    'realise_amount_counsel'         => ($cncolamt_stax + $cncolamt_ntax),

                                    'realise_amount_service_tax'     => $stcolamt,

                                    'gross_amount'                   => $totcolamt,

                                    'tax_amount'                     => 0,

                                    'net_amount'                     => $totcolamt,

                                    'dr_cr_ind'                      => 'C',

                                    'deficit_amount_inpocket_stax'   => $ipdefamt_stax,

                                    'deficit_amount_outpocket_stax'  => $opdefamt_stax,

                                    'deficit_amount_counsel_stax'    => $cndefamt_stax,

                                    'deficit_amount_inpocket_ntax'   => $ipdefamt_ntax,

                                    'deficit_amount_outpocket_ntax'  => $opdefamt_ntax,

                                    'deficit_amount_counsel_ntax'    => $cndefamt_ntax,

                                    'deficit_amount_inpocket'        => ($ipdefamt_stax + $ipdefamt_ntax),

                                    'deficit_amount_outpocket'       => ($opdefamt_stax + $opdefamt_ntax) ,

                                    'deficit_amount_counsel'         => ($cndefamt_stax + $cndefamt_ntax),

                                    'deficit_amount_service_tax'     => $stdefamt,

                                    'part_full_ind'                  => $pfind

                                    );

                    $vd_detail = $voucherDetailObj->insert($vd_array);

                

                } else if ($voucher_row_no != '' && $rowoptn == 'Edit') {

                    $vd_array = array('main_ac_code'                   => $main_ac_code,

                                    'sub_ac_code'                    => $sub_ac_code,

                                    'ref_bill_year'                  => $bill_year,

                                    'ref_bill_no'                    => $bill_no,

                                    'client_code'                    => $clntcd,

                                    'matter_code'                    => $matrcd,

                                    'initial_code'                   => $intlcd,

                                    'expense_type'                   => NULL,

                                    'expense_code'                   => NULL,

                                    'narration'                      => $narration,

                                    'realise_amount_inpocket_stax'   => $ipcolamt_stax,

                                    'realise_amount_outpocket_stax'  => $opcolamt_stax,

                                    'realise_amount_counsel_stax'    => $cncolamt_stax,

                                    'realise_amount_inpocket_ntax'   => $ipcolamt_ntax,

                                    'realise_amount_outpocket_ntax'  => $opcolamt_ntax,

                                    'realise_amount_counsel_ntax'    => $cncolamt_ntax,

                                    'realise_amount_inpocket'        => $ipcolamt,

                                    'realise_amount_outpocket'       => $opcolamt,

                                    'realise_amount_counsel'         => $cncolamt,

                                    'realise_amount_service_tax'     => $stcolamt,

                                    'gross_amount'                   => $totcolamt,

                                    'tax_amount'                     => 0,

                                    'net_amount'                     => $totcolamt,

                                    'dr_cr_ind'                      => 'C',

                                    'deficit_amount_inpocket_stax'   => $ipdefamt_stax,

                                    'deficit_amount_outpocket_stax'  => $opdefamt_stax,

                                    'deficit_amount_counsel_stax'    => $cndefamt_stax,

                                    'deficit_amount_inpocket_ntax'   => $ipdefamt_ntax,

                                    'deficit_amount_outpocket_ntax'  => $opdefamt_ntax,

                                    'deficit_amount_counsel_ntax'    => $cndefamt_ntax,

                                    'deficit_amount_inpocket'        => $ipdefamt,

                                    'deficit_amount_outpocket'       => $opdefamt,

                                    'deficit_amount_counsel'         => $cndefamt,

                                    'deficit_amount_service_tax'     => $stdefamt,

                                    'part_full_ind'                  => $pfind

                                    );

                    $where = "ref_voucher_serial_no = '".$voucher_serial_no."' and row_no = '".$voucher_row_no."'" ;				

                    $vd_detail = $voucherDetailObj->update($vd_array, $where);

                    

                } else if ($voucher_row_no != '' && $rowoptn == 'Delete') {

                    $where = "ref_voucher_serial_no = '".$voucher_serial_no."' and row_no = '".$voucher_row_no."'" ;				

                    $vd_detail = $voucherDetailObj->delete($where);

                }



                $vchsum_qry = $this->db->query("select sum(gross_amount) cramt from voucher_detail where ref_voucher_serial_no = '$voucher_serial_no' ")->getRowArray(); 

                $ret_cramt = number_format($vchsum_qry['cramt'], 2, '.', '') ; 

            

                //--- Bill Detail

                if ($rowoptn == 'Edit' || $rowoptn == 'Delete') {

                    $billupdt_sql = "update bill_detail set booked_amount_inpocket = ifnull(booked_amount_inpocket,0) - $old_ipcolamt,

                                            booked_amount_outpocket = ifnull(booked_amount_outpocket,0) - $old_opcolamt,

                                            booked_amount_counsel = ifnull(booked_amount_counsel,0) - $old_cncolamt,



                                            booked_amount_inpocket_stax  = ifnull(booked_amount_inpocket_stax,0)    - $old_ipcolamt_stax,

                                            booked_amount_outpocket_stax = ifnull(booked_amount_outpocket_stax,0)   - $old_opcolamt_stax,

                                            booked_amount_counsel_stax   = ifnull(booked_amount_counsel_stax,0)     - $old_cncolamt_stax,



                                            booked_amount_inpocket_ntax  = ifnull(booked_amount_inpocket_ntax,0)    - $old_ipcolamt_ntax,

                                            booked_amount_outpocket_ntax = ifnull(booked_amount_outpocket_ntax,0)   - $old_opcolamt_ntax,

                                            booked_amount_counsel_ntax   = ifnull(booked_amount_counsel_ntax,0)     - $old_cncolamt_ntax,



                                            booked_amount_service_tax    = ifnull(booked_amount_service_tax,0)      - $old_stcolamt,



                                            deficit_amount_inpocket      = ifnull(deficit_amount_inpocket,0)        - $old_ipdefamt,

                                            deficit_amount_outpocket     = ifnull(deficit_amount_outpocket,0)       - $old_opdefamt,

                                            deficit_amount_counsel       = ifnull(deficit_amount_counsel,0)         - $old_cndefamt,



                                            deficit_amount_inpocket_stax  = ifnull(deficit_amount_inpocket_stax,0)  - $old_ipdefamt_stax,

                                            deficit_amount_outpocket_stax = ifnull(deficit_amount_outpocket_stax,0) - $old_opdefamt_stax,

                                            deficit_amount_counsel_stax   = ifnull(deficit_amount_counsel_stax,0)   - $old_cndefamt_stax,



                                            deficit_amount_inpocket_ntax  = ifnull(deficit_amount_inpocket_ntax,0)  - $old_ipdefamt_ntax,

                                            deficit_amount_outpocket_ntax = ifnull(deficit_amount_outpocket_ntax,0) - $old_opdefamt_ntax,

                                            deficit_amount_counsel_ntax   = ifnull(deficit_amount_counsel_ntax,0)   - $old_cndefamt_ntax,



                                            deficit_amount_service_tax = ifnull(deficit_amount_service_tax,0) - $old_stdefamt,

                                            part_full_ind = 'P' where fin_year = '".$old_bill_year."' and bill_no = '".$old_bill_no."'" ;

                    $this->db->query($billupdt_sql);



                } if ($rowoptn == '' || $rowoptn == 'Edit') {

                    $billupdt_sql = "update bill_detail 

                                        set booked_amount_inpocket          = ifnull(booked_amount_inpocket,0)           + $ipcolamt,

                                            booked_amount_outpocket         = ifnull(booked_amount_outpocket,0)          + $opcolamt,

                                            booked_amount_counsel           = ifnull(booked_amount_counsel,0)            + $cncolamt,



                                            booked_amount_inpocket_stax     = ifnull(booked_amount_inpocket_stax,0)      + $ipcolamt_stax,

                                            booked_amount_outpocket_stax    = ifnull(booked_amount_outpocket_stax,0)     + $opcolamt_stax,

                                            booked_amount_counsel_stax      = ifnull(booked_amount_counsel_stax,0)       + $cncolamt_stax,



                                            booked_amount_inpocket_ntax     = ifnull(booked_amount_inpocket_ntax,0)      + $ipcolamt_ntax,

                                            booked_amount_outpocket_ntax    = ifnull(booked_amount_outpocket_ntax,0)     + $opcolamt_ntax,

                                            booked_amount_counsel_ntax      = ifnull(booked_amount_counsel_ntax,0)       + $cncolamt_ntax,



                                            booked_amount_service_tax       = ifnull(booked_amount_service_tax,0)        + $stcolamt,

                                            deficit_amount_inpocket         = ifnull(deficit_amount_inpocket,0)          + $ipdefamt,

                                            deficit_amount_outpocket        = ifnull(deficit_amount_outpocket,0)         + $opdefamt,

                                            deficit_amount_counsel          = ifnull(deficit_amount_counsel,0)           + $cndefamt,



                                            deficit_amount_inpocket_stax    = ifnull(deficit_amount_inpocket_stax,0)     + $ipdefamt_stax,

                                            deficit_amount_outpocket_stax   = ifnull(deficit_amount_outpocket_stax,0)    + $opdefamt_stax,

                                            deficit_amount_counsel_stax     = ifnull(deficit_amount_counsel_stax,0)      + $cndefamt_stax,



                                            deficit_amount_inpocket_ntax    = ifnull(deficit_amount_inpocket_ntax,0)     + $ipdefamt_ntax,

                                            deficit_amount_outpocket_ntax   = ifnull(deficit_amount_outpocket_ntax,0)    + $opdefamt_ntax,

                                            deficit_amount_counsel_ntax     = ifnull(deficit_amount_counsel_ntax,0)      + $cndefamt_ntax,



                                            deficit_amount_service_tax      = ifnull(deficit_amount_service_tax,0)        + $stdefamt,

                                            part_full_ind                   = '$pfind' 



                                    where fin_year = '".$bill_year."' and bill_no = '".$bill_no."'" ;

                    $this->db->query($billupdt_sql);

                }



                //--- Advance Details

                if ($rowoptn == 'Edit' || $rowoptn == 'Delete') {

                    $advupdt_sql  = "update advance_details set booked_amount = ifnull(booked_amount,0) - $old_totcolamt where serial_no = '".$advance_serial_no."'" ;

                    $advupdt_qry = $this->db->query($advupdt_sql);

                }



                if ($rowoptn == '' || $rowoptn == 'Edit') {

                    $advupdt_sql  = "update advance_details set booked_amount  = ifnull(booked_amount,0)  + $totcolamt where serial_no = '".$advance_serial_no."'" ;

                    $advupdt_qry = $this->db->query($advupdt_sql);

                }



                //--- Voucher Header

                $vh_array = array('gross_amount' => $ret_cramt, 'tax_amount' => 0, 'net_amount' => $ret_cramt);

                $where = "serial_no = '".$voucher_serial_no."'" ;	

                $vh_header = $voucherHeaderObj->update($vh_array, $where);

            

                $retvalue = 'Y'.'|'.'Data Updated ....'.'|'.$voucher_serial_no.'|'.$ret_cramt.'|'.$rowoptn.'|';



                // session()->setFlashdata('message', $retvalue);

                // return redirect()->to(session()->last_selected_end_menu); 

            } else if($user_option == 'Delete') {  

                $vchdtl_qry = $this->db->query("select * from voucher_detail where ref_voucher_serial_no = '$voucher_serial_no' order by row_no")->getResultArray();

               

                foreach($vchdtl_qry as $vchdtl_row) {

                    //----- Bill 

                        $bill_year = $vchdtl_row['ref_bill_year'] ;

                        $bill_no   = $vchdtl_row['ref_bill_no'] ;

                

                        $ipcolamt_stax = $vchdtl_row['realise_amount_inpocket_stax'] ; 

                        $opcolamt_stax = $vchdtl_row['realise_amount_outpocket_stax'] ; 

                        $cncolamt_stax = $vchdtl_row['realise_amount_counsel_stax'] ; 

                

                        $ipcolamt_ntax = $vchdtl_row['realise_amount_inpocket_ntax'] ; 

                        $opcolamt_ntax = $vchdtl_row['realise_amount_outpocket_ntax'] ; 

                        $cncolamt_ntax = $vchdtl_row['realise_amount_counsel_ntax'] ; 

                

                

                        $ipcolamt  = ($vchdtl_row['realise_amount_inpocket_stax']  + $vchdtl_row['realise_amount_inpocket_ntax']) ;

                        $opcolamt  = ($vchdtl_row['realise_amount_outpocket_stax'] + $vchdtl_row['realise_amount_outpocket_ntax']) ;

                        $cncolamt  = ($vchdtl_row['realise_amount_counsel_stax']   + $vchdtl_row['realise_amount_counsel_ntax']) ;

                        $stcolamt  = $vchdtl_row['realise_amount_service_tax'] ;

                

                        $ipdefamt_stax = $vchdtl_row['deficit_amount_inpocket_stax'] ;

                        $opdefamt_stax = $vchdtl_row['deficit_amount_outpocket_stax'] ;

                        $cndefamt_stax = $vchdtl_row['deficit_amount_counsel_stax'] ;

                

                        $ipdefamt_ntax = $vchdtl_row['deficit_amount_inpocket_ntax'] ;

                        $opdefamt_ntax = $vchdtl_row['deficit_amount_outpocket_ntax'] ;

                        $cndefamt_ntax = $vchdtl_row['deficit_amount_counsel_ntax'] ;

                

                

                        $ipdefamt  = ($vchdtl_row['deficit_amount_inpocket_stax'] + $vchdtl_row['deficit_amount_inpocket_ntax']);

                        $opdefamt  = ($vchdtl_row['deficit_amount_outpocket_stax'] + $vchdtl_row['deficit_amount_outpocket_ntax']) ;

                        $cndefamt  = ($vchdtl_row['deficit_amount_counsel_stax'] + $vchdtl_row['deficit_amount_counsel_ntax']) ;

                

                        $stdefamt  = $vchdtl_row['deficit_amount_service_tax'] ;

                        $totcolamt = ($ipcolamt + $opcolamt + $cncolamt + $stcolamt) ;



                        $billupdt_sql = "update bill_detail 

                                            set booked_amount_inpocket          = ifnull(booked_amount_inpocket,0)         - $ipcolamt,

                                                booked_amount_outpocket         = ifnull(booked_amount_outpocket,0)        - $opcolamt,

                                                booked_amount_counsel           = ifnull(booked_amount_counsel,0)          - $cncolamt,

                                                booked_amount_inpocket_stax     = ifnull(booked_amount_inpocket_stax,0)    - $ipcolamt_stax,

                                                booked_amount_outpocket_stax    = ifnull(booked_amount_outpocket_stax,0)   - $opcolamt_stax,

                                                booked_amount_counsel_stax      = ifnull(booked_amount_counsel_stax,0)     - $cncolamt_stax,

                                                booked_amount_inpocket_ntax     = ifnull(booked_amount_inpocket_ntax,0)    - $ipcolamt_ntax,

                                                booked_amount_outpocket_ntax    = ifnull(booked_amount_outpocket_ntax,0)   - $opcolamt_ntax,

                                                booked_amount_counsel_ntax      = ifnull(booked_amount_counsel_ntax,0)     - $cncolamt_ntax,

                                                booked_amount_service_tax       = ifnull(booked_amount_service_tax,0)      - $stcolamt,

                                                deficit_amount_inpocket_stax    = ifnull(deficit_amount_inpocket_stax,0)   - $ipdefamt_stax,

                                                deficit_amount_outpocket_stax   = ifnull(deficit_amount_outpocket_stax,0)  - $opdefamt_stax,

                                                deficit_amount_counsel_stax     = ifnull(deficit_amount_counsel_stax,0)    - $cndefamt_stax,

                                                deficit_amount_inpocket_ntax    = ifnull(deficit_amount_inpocket_ntax,0)   - $ipdefamt_ntax,

                                                deficit_amount_outpocket_ntax   = ifnull(deficit_amount_outpocket_ntax,0)  - $opdefamt_ntax,

                                                deficit_amount_counsel_ntax     = ifnull(deficit_amount_counsel_ntax,0)    - $cndefamt_ntax,

                                                deficit_amount_inpocket         = ifnull(deficit_amount_inpocket,0)        - $ipdefamt,

                                                deficit_amount_outpocket        = ifnull(deficit_amount_outpocket,0)       - $opdefamt,

                                                deficit_amount_counsel          = ifnull(deficit_amount_counsel,0)         - $cndefamt,

                                                deficit_amount_service_tax      = ifnull(deficit_amount_service_tax,0)     - $stdefamt,

                                                part_full_ind                   = 'P' 

                                        where fin_year = '".$bill_year."' and bill_no = '".$bill_no."'" ;

                        $billupdt_qry = $this->db->query($billupdt_sql);

                }

            

                //----- Advance 

                $advupdt_sql = "update advance_details set booked_amount = ifnull(booked_amount,0) - $now_adjusted_amount where serial_no = '".$advance_serial_no."'" ;

                $advupdt_qry = $this->db->query($advupdt_sql);



                //--- Voucher Header

                $v_header = $voucherHeaderObj->delete("serial_no = '".$voucher_serial_no."'");

                

                //--- Voucher Detail

                $v_detail = $voucherDetailObj->delete("ref_voucher_serial_no = '".$voucher_serial_no."'");



                session()->setFlashdata('message', "Record with Serial NO: [".$voucher_serial_no."] Deleted Sucessfully !!");

                return redirect()->to(session()->last_selected_end_menu);



            } else if($user_option == 'Approve') {  

                //--- Voucher Detail

                $maxrow_qry     = $this->db->query("select ifnull(max(row_no),0)+1 as maxrow from voucher_detail where ref_voucher_serial_no = '$voucher_serial_no' ")->getRowArray();

                $voucher_row_no = $maxrow_qry['maxrow'] ;

            

                $vd_array = array('ref_voucher_serial_no'          => $voucher_serial_no,

                                    'row_no'                         => $voucher_row_no,

                                    'main_ac_code'                   => $advance_main_ac_code,

                                    'sub_ac_code'                    => $advance_sub_ac_code,

                                    'ref_bill_year'                  => NULL,

                                    'ref_bill_no'                    => NULL,

                                    'client_code'                    => $client_code,

                                    'matter_code'                    => $matter_code,

                                    'initial_code'                   => NULL,

                                    'expense_type'                   => NULL,

                                    'expense_code'                   => NULL,

                                    'narration'                      => 'ADJUSTMENT OF BILL(S)',

                                    'realise_amount_inpocket_stax'   => NULL,

                                    'realise_amount_outpocket_stax'  => NULL,

                                    'realise_amount_counsel_stax'    => NULL,

                                    'realise_amount_inpocket_ntax'   => NULL,

                                    'realise_amount_outpocket_ntax'  => NULL,

                                    'realise_amount_counsel_ntax'    => NULL,

                                    'realise_amount_inpocket'        => NULL,

                                    'realise_amount_outpocket'       => NULL,

                                    'realise_amount_counsel'         => NULL,

                                    'realise_amount_service_tax'     => NULL,

                                    'gross_amount'                   => $now_adjusted_amount,

                                    'tax_amount'                     => 0,

                                    'net_amount'                     => $now_adjusted_amount,

                                    'dr_cr_ind'                      => 'D',

                                    'deficit_amount_inpocket_stax'   => NULL,

                                    'deficit_amount_outpocket_stax'  => NULL,

                                    'deficit_amount_counsel_stax'    => NULL,

                                    'deficit_amount_inpocket_ntax'   => NULL,

                                    'deficit_amount_outpocket_ntax'  => NULL,

                                    'deficit_amount_counsel_ntax'    => NULL,

                                    'deficit_amount_inpocket'        => NULL,

                                    'deficit_amount_outpocket'       => NULL,

                                    'deficit_amount_counsel'         => NULL,

                                    'deficit_amount_service_tax'     => NULL,

                                    'part_full_ind'                  => NULL

                        );

                $vd_detail = $voucherDetailObj->insert($vd_array);



                //--- Ledger Header

                $daybook_qry  = $this->db->query("select key_value from control_keycodes where key_code = '017' ")->getRowArray();

                $daybook_code = $daybook_qry['key_value'];

                

                $doc_no    = getLastDocNo($fin_year, $branch_code, $daybook_code, '00', 'J');

                $doc_date  = date_conv($voucher_date) ;

                

                $lh_array = array('serial_no'             => '',

                                    'branch_code'           => $branch_code,

                                    'fin_year'              => $fin_year,

                                    'doc_type'              => $doc_type,

                                    'doc_date'              => $doc_date,

                                    'doc_no'                => $doc_no,

                                    'daybook_code'          => $daybook_code,

                                    'narration'             => $narration,

                                    'gross_amount'          => $now_adjusted_amount,

                                    'tax_amount'            => 0,

                                    'net_amount'            => $now_adjusted_amount,

                                    'status_code'           => 'C',

                                    'ref_doc_serial_no'     => $voucher_serial_no,

                                    'ref_doc_type'          => $ref_doc_type,

                                    'prepared_by'           => $global_userid,

                                    'prepared_on'           => $global_sysdate,

                                    'approved_by'           => $global_userid,

                                    'approved_on'           => $global_sysdate

                                    );

                $l_header = $ledgerHeaderObj->insert($lh_array);

                $ledger_serial_no = $this->db->insertID();

            

                //--- Ledger Detail

                $vchdtl_qry = $this->db->query("select * from voucher_detail where ref_voucher_serial_no = '$voucher_serial_no' ")->getResultArray(); 

                

                foreach($vchdtl_qry as $vchdtl_row) {

                    $bill_qry      = $this->db->query("select serial_no,bill_date from bill_detail where fin_year = '$vchdtl_row[ref_bill_year]' and bill_no = '$vchdtl_row[ref_bill_no]' ")->getRowArray();

                    $ref_bill_date = isset($bill_qry['bill_date']) ? $bill_qry['bill_date'] : '';

                    $main_ac_code  = isset($vchdtl_row['main_ac_code']) ? $vchdtl_row['main_ac_code'] : '';

                    $sub_ac_code   = isset($vchdtl_row['client_code']) ? $vchdtl_row['client_code'] : '';



                    if($vchdtl_row['main_ac_code'] == '1203') {

                        $sub_ac_code = $vchdtl_row['sub_ac_code'];

                    }

                

                    if($vchdtl_row['realise_amount_service_tax'] > 0) {

                        $gross_amount = $vchdtl_row['gross_amount']-$vchdtl_row['realise_amount_service_tax'];

                        $net_amount   = $vchdtl_row['net_amount']-$vchdtl_row['realise_amount_service_tax'];



                    } else {

                        $gross_amount = $vchdtl_row['gross_amount'];

                        $net_amount   = $vchdtl_row['net_amount'];

                    }

                

                    $ld_array = array('ref_ledger_serial_no' => $ledger_serial_no,

                                        'branch_code'          => $branch_code,

                                        'main_ac_code'         => $main_ac_code,

                                        'sub_ac_code'          => $sub_ac_code,

                                        'client_code'          => $vchdtl_row['client_code'],

                                        'matter_code'          => $vchdtl_row['matter_code'],

                                        'initial_code'         => $vchdtl_row['initial_code'],

                                        'expense_type'         => NULL,

                                        'expense_code'         => NULL,

                                        'narration'            => $vchdtl_row['narration'],

                                        'gross_amount'         => $gross_amount,

                                        'tax_amount'           => $vchdtl_row['tax_amount'],

                                        'net_amount'           => $net_amount,

                                        'dr_cr_ind'            => $vchdtl_row['dr_cr_ind'],

                                        'record_type'          => 'G',

                                        'ref_doc_serial_no'    => $voucher_serial_no,

                                        'ref_doc_type'         => $ref_doc_type,

                                        'ref_doc_year'         => $vchdtl_row['ref_bill_year'],

                                        'ref_doc_no'           => $vchdtl_row['ref_bill_no'],

                                        'ref_doc_date'         => $ref_bill_date

                                    );

                    $l_detail = $ledgerDetailObj->insert($ld_array);



                    //service tax

                    if($vchdtl_row['realise_amount_service_tax'] > 0) {

                        // Service Tax Account Code

                        $row = $this->db->query("select key_code,key_desc,key_value from control_keycodes where key_code = '028'")->getRowArray();

                        $service_tax_account_code = $row['key_value'];

            

                        $ld2_array = array('ref_ledger_serial_no' => $ledger_serial_no,

                                        'branch_code'          => $branch_code,

                                        'main_ac_code'         => $service_tax_account_code,

                                        'sub_ac_code'          => '',

                                        'client_code'          => $vchdtl_row['client_code'],

                                        'matter_code'          => $vchdtl_row['matter_code'],

                                        'initial_code'         => $vchdtl_row['initial_code'],

                                        'expense_type'         => NULL,

                                        'expense_code'         => NULL,

                                        'narration'            => $vchdtl_row['narration'],

                                        'gross_amount'         => $vchdtl_row['realise_amount_service_tax'],

                                        'tax_amount'           => NULL,

                                        'net_amount'           => $vchdtl_row['realise_amount_service_tax'],

                                        'dr_cr_ind'            => $vchdtl_row['dr_cr_ind'],

                                        'record_type'          => 'G',

                                        'ref_doc_serial_no'    => $voucher_serial_no,

                                        'ref_doc_type'         => $ref_doc_type,

                                        'ref_doc_year'         => $vchdtl_row['ref_bill_year'],

                                        'ref_doc_no'           => $vchdtl_row['ref_bill_no'],

                                        'ref_doc_date'         => $ref_bill_date

                                        );

                        $l2_detail = $ledgerDetailObj->insert($ld2_array);

                    }

                }

            

                //--- Advance Adjustment Header

                $ah_array = array('serial_no'             => '',

                                    'branch_code'           => $branch_code,

                                    'ref_ledger_serial_no'  => $ledger_serial_no,

                                    'ref_advance_serial_no' => $advance_serial_no,

                                    'adjusted_amount'       => $now_adjusted_amount,

                                    'status_code'           => 'C',

                                    'prepared_by'           => $global_userid,

                                    'prepared_on'           => $global_sysdate,

                                    'approved_by'           => $global_userid,

                                    'approved_on'           => $global_sysdate

                                );

                $ad_header = $advAdjHeaderObj->insert($ah_array);

                $adjustment_serial_no = $this->db->insertID();

            

                //--- Advance Adjustment Detail

                $vchdtl_qry = $this->db->query("select * from voucher_detail where ref_voucher_serial_no = '$voucher_serial_no' and dr_cr_ind = 'C' ")->getResultArray(); 

                foreach($vchdtl_qry as $vchdtl_row) {

                    $bill_qry           = $this->db->query("select serial_no,bill_date from bill_detail where fin_year = '$vchdtl_row[ref_bill_year]' and bill_no = '$vchdtl_row[ref_bill_no]' ")->getRowArray();

                    $ref_bill_serial_no = $bill_qry['serial_no'] ;

                    $ref_bill_date      = $bill_qry['bill_date'] ;

                    

                    $ad_array = array('ref_adjustment_serial_no' => $adjustment_serial_no,

                                    'branch_code'              => $branch_code,

                                    'ref_doc_serial_no'        => $ref_bill_serial_no,

                                    'ref_doc_year'             => $vchdtl_row['ref_bill_year'],

                                    'ref_doc_no'               => $vchdtl_row['ref_bill_no'],

                                    'ref_doc_date'             => $ref_bill_date,

                                    'adjusted_amount'          => $vchdtl_row['gross_amount'],

                                    );

                    $ad_detail = $advAdjDetailObj->insert($ad_array);

                }

          

                //--- Bill Realisation Header

                $rh_array = array('serial_no'             => '',

                                    'branch_code'           => $branch_code,

                                    'fin_year'              => $fin_year,

                                    'ref_ledger_serial_no'  => $ledger_serial_no,

                                    'client_code'           => $client_code,

                                    'realised_amount'       => $now_adjusted_amount,

                                    'tds_amount'            => 0,

                                    'received_amount'       => $now_adjusted_amount

                        );

                $r_header = $realisationHeaderObj->insert($rh_array);

                $realisation_serial_no = $this->db->insertID();

            

                //--- Bill Realisation Detail

                $realisation_row_no = 0 ;

                $vchdtl_qry = $this->db->query("select * from voucher_detail where ref_voucher_serial_no = '$voucher_serial_no' and dr_cr_ind = 'C' ")->getResultArray(); 

                

                foreach($vchdtl_qry as $vchdtl_row) {

                    $bill_qry           = $this->db->query("select serial_no,bill_date from bill_detail where fin_year = '$vchdtl_row[ref_bill_year]' and bill_no = '$vchdtl_row[ref_bill_no]' ")->getRowArray();

                    $ref_bill_serial_no = $bill_qry['serial_no'] ;

            

                    $realisation_row_no++ ;

                    $rd_array = array('ref_realisation_serial_no'      => $realisation_serial_no,

                                    'row_no'                         => $realisation_row_no,

                                    'branch_code'                    => $branch_code,

                                    'ref_bill_serial_no'             => $ref_bill_serial_no,

                                    'ref_bill_year'                  => $vchdtl_row['ref_bill_year'],

                                    'ref_bill_no'                    => $vchdtl_row['ref_bill_no'],

                                    'client_code'                    => $vchdtl_row['client_code'],

                                    'matter_code'                    => $vchdtl_row['matter_code'],

                                    'initial_code'                   => $vchdtl_row['initial_code'],

                                    'realise_amount_inpocket_stax'   => $vchdtl_row['realise_amount_inpocket_stax'],

                                    'realise_amount_outpocket_stax'  => $vchdtl_row['realise_amount_outpocket_stax'],

                                    'realise_amount_counsel_stax'    => $vchdtl_row['realise_amount_counsel_stax'],

                                    'realise_amount_inpocket_ntax'   => $vchdtl_row['realise_amount_inpocket_ntax'],

                                    'realise_amount_outpocket_ntax'  => $vchdtl_row['realise_amount_outpocket_ntax'],

                                    'realise_amount_counsel_ntax'    => $vchdtl_row['realise_amount_counsel_ntax'],

                                    'realise_amount_inpocket'        => $vchdtl_row['realise_amount_inpocket'],

                                    'realise_amount_outpocket'       => $vchdtl_row['realise_amount_outpocket'],

                                    'realise_amount_counsel'         => $vchdtl_row['realise_amount_counsel'],

                                    'realise_amount_service_tax'     => $vchdtl_row['realise_amount_service_tax'],

                                    'realised_amount'                => $vchdtl_row['gross_amount'],

                                    'tds_amount'                     => $vchdtl_row['tax_amount'],

                                    'deficit_amount_inpocket_stax'   => $vchdtl_row['deficit_amount_inpocket_stax'],

                                    'deficit_amount_outpocket_stax'  => $vchdtl_row['deficit_amount_outpocket_stax'],

                                    'deficit_amount_counsel_stax'    => $vchdtl_row['deficit_amount_counsel_stax'],

                                    'deficit_amount_inpocket_ntax'   => $vchdtl_row['deficit_amount_inpocket_ntax'],

                                    'deficit_amount_outpocket_ntax'  => $vchdtl_row['deficit_amount_outpocket_ntax'],

                                    'deficit_amount_counsel_ntax'    => $vchdtl_row['deficit_amount_counsel_ntax'],

                                    'deficit_amount_inpocket'        => $vchdtl_row['deficit_amount_inpocket'],

                                    'deficit_amount_outpocket'       => $vchdtl_row['deficit_amount_outpocket'],

                                    'deficit_amount_counsel'         => $vchdtl_row['deficit_amount_counsel'],

                                    'deficit_amount_service_tax'     => $vchdtl_row['deficit_amount_service_tax'],

                                    'part_full_ind'                  => $vchdtl_row['part_full_ind'],

                                    'ref_advance_serial_no'          => $advance_serial_no,

                                    'adjusted_amount'                => $vchdtl_row['gross_amount']

                        );

                    $r_detail = $realisationDetailObj->insert($rd_array);

                }

          

                //--- Bill Detail

                $vchdtl_qry = $this->db->query("select ref_bill_year, ref_bill_no,

                                                ifnull(realise_amount_inpocket_stax,0) realise_amount_inpocket_stax,

                                                ifnull(realise_amount_outpocket_stax,0) realise_amount_outpocket_stax,

                                                ifnull(realise_amount_counsel_stax,0) realise_amount_counsel_stax,

                                                ifnull(realise_amount_inpocket_ntax,0) realise_amount_inpocket_ntax,

                                                ifnull(realise_amount_outpocket_ntax,0) realise_amount_outpocket_ntax,

                                                ifnull(realise_amount_counsel_ntax,0) realise_amount_counsel_ntax,

                                                ifnull(realise_amount_inpocket,0) realise_amount_inpocket,

                                                ifnull(realise_amount_outpocket,0) realise_amount_outpocket,

                                                ifnull(realise_amount_counsel,0) realise_amount_counsel,

                                                ifnull(realise_amount_service_tax,0) realise_amount_service_tax

                                           from voucher_detail where ref_voucher_serial_no = '$voucher_serial_no' and dr_cr_ind = 'C' ")->getResultArray(); 

          

                foreach($vchdtl_qry as $vchdtl_row) {

                    $billupdt_sql = "update bill_detail 

                                        set realise_amount_inpocket_stax   = ifnull(realise_amount_inpocket_stax,0) + ".$vchdtl_row['realise_amount_inpocket_stax'].",

                                            realise_amount_outpocket_stax  = ifnull(realise_amount_outpocket_stax,0) + ".$vchdtl_row['realise_amount_outpocket_stax'].",

                                            realise_amount_counsel_stax    = ifnull(realise_amount_counsel_stax,0) + ".$vchdtl_row['realise_amount_counsel_stax'].",

                                            realise_amount_inpocket_ntax   = ifnull(realise_amount_inpocket_ntax,0) + ".$vchdtl_row['realise_amount_inpocket_ntax'].",

                                            realise_amount_outpocket_ntax  = ifnull(realise_amount_outpocket_ntax,0) + ".$vchdtl_row['realise_amount_outpocket_ntax'].",

                                            realise_amount_counsel_ntax    = ifnull(realise_amount_counsel_ntax,0) + ".$vchdtl_row['realise_amount_counsel_ntax'].",

                                            realise_amount_inpocket        = ifnull(realise_amount_inpocket,0) + ".$vchdtl_row['realise_amount_inpocket'].",

                                            realise_amount_outpocket       = ifnull(realise_amount_outpocket,0) + ".$vchdtl_row['realise_amount_outpocket'].",

                                            realise_amount_counsel         = ifnull(realise_amount_counsel,0) + ".$vchdtl_row['realise_amount_counsel'].",

                                            realise_amount_service_tax     = ifnull(realise_amount_service_tax,0) + ".$vchdtl_row['realise_amount_service_tax'].",

                                            booked_amount_inpocket_stax    = ifnull(booked_amount_inpocket_stax,0) - ".$vchdtl_row['realise_amount_inpocket_stax'].",

                                            booked_amount_outpocket_stax   = ifnull(booked_amount_outpocket_stax,0) - ".$vchdtl_row['realise_amount_outpocket_stax'].",

                                            booked_amount_counsel_stax     = ifnull(booked_amount_counsel_stax,0) - ".$vchdtl_row['realise_amount_counsel_stax'].",

                                            booked_amount_inpocket_ntax    = ifnull(booked_amount_inpocket_ntax,0) - ".$vchdtl_row['realise_amount_inpocket_ntax'].",

                                            booked_amount_outpocket_ntax   = ifnull(booked_amount_outpocket_ntax,0) - ".$vchdtl_row['realise_amount_outpocket_ntax'].",

                                            booked_amount_counsel_ntax     = ifnull(booked_amount_counsel_ntax,0) - ".$vchdtl_row['realise_amount_counsel_ntax'].",

                                            booked_amount_inpocket         = ifnull(booked_amount_inpocket,0) - ".$vchdtl_row['realise_amount_inpocket'].",

                                            booked_amount_outpocket        = ifnull(booked_amount_outpocket,0) - ".$vchdtl_row['realise_amount_outpocket'].",

                                            booked_amount_counsel          = ifnull(booked_amount_counsel,0) - ".$vchdtl_row['realise_amount_counsel'].",

                                            booked_amount_service_tax      = ifnull(booked_amount_service_tax,0) - ".$vchdtl_row['realise_amount_service_tax']."

                                        where fin_year = '".$vchdtl_row['ref_bill_year']."' and bill_no = '".$vchdtl_row['ref_bill_no']."'" ;

                                        $billupdt_qry = $this->db->query($billupdt_sql);

                }

            

                //--- Advance Details

                $adv_stmt   = "update advance_details set adjusted_amount = ifnull(adjusted_amount,0) + $now_adjusted_amount, booked_amount = ifnull(booked_amount,0) - $now_adjusted_amount where serial_no = '".$advance_serial_no."'" ;

                $updt_adv   = $this->db->query($adv_stmt);

            

                $vchhdr_sql = "update voucher_header set status_code = 'C', ref_ledger_serial_no = '$ledger_serial_no', passed_by = '$global_userid', passed_on = '$global_sysdate' where serial_no = '$voucher_serial_no' " ;

                $vchhdr_qry = $this->db->query($vchhdr_sql);



                $this->ledger_posting($ledger_serial_no);

                $message = 'Please note Final Voucher No : ' . $doc_no ;



                session()->setFlashdata('message', $message);

                return redirect()->to(session()->last_selected_end_menu);

            } else if($user_option == 'Print') {

                $serial_no = isset($_REQUEST['serial_no'])?$_REQUEST['serial_no']:null;

                $type = isset($_REQUEST['type'])?$_REQUEST['type']:null;

                $print = true;



                $hdr_stmt = "select a.*,b.serial_no,b.client_code from voucher_header a, advance_details b where a.serial_no = '$serial_no' and a.ref_advance_serial_no = b.serial_no " ;

                $hdr_row = $this->db->query($hdr_stmt)->getRowArray();

                $ref_ledger_serial_no  = isset($hdr_row['ref_ledger_serial_no']) ? $hdr_row['ref_ledger_serial_no'] : ''; 

                $ref_advance_serial_no = isset($hdr_row['ref_advance_serial_no']) ? $hdr_row['ref_advance_serial_no'] : ''; 

                $hdr_gross_amount      = isset($hdr_row['gross_amount']) ? $hdr_row['gross_amount'] : 0; 



                $dtl_stmt = "select main_ac_code,sub_ac_code,client_code,matter_code,concat('BILL NO :',ref_bill_year,'/',ref_bill_no) narration,dr_cr_ind,gross_amount 

                                from voucher_detail where ref_voucher_serial_no = '$serial_no' union all 

                                select a.key_value main_ac_code, '' sub_ac_code, b.client_code, b.matter_code, 'ADJUSTMENT OF BILL(s)' narration, 'D' dr_cr_ind, $hdr_gross_amount

                                    from control_keycodes a, advance_details b

                                    where b.serial_no = '$ref_advance_serial_no' 

                                    and a.key_code  = '022' 

                                    order by dr_cr_ind desc";

                $res2 = $this->db->query($dtl_stmt)->getResultArray();

                $total_rows = count($res2);



                return view("pages/Finance/Journals/advance_adjustment_JV", compact('user_option', 'total_rows', 'print', 'res2', 'hdr_row', 'serial_no', 'type'));

            }

        

            $redv = 'readonly' ;  $disv = 'disabled' ;

            

            $voucher_serial_no   = ($user_option == 'Add') ? $voucher_serial_no : (isset($_REQUEST['voucher_serial_no'])?$_REQUEST['voucher_serial_no']:'');

            $branch_code         = isset($_REQUEST['branch_code'])?$_REQUEST['branch_code']:session()->user_qry['branch_code'] ;

            $fin_year            = isset($_REQUEST['fin_year'])?$_REQUEST['fin_year']:$global_curr_finyear ;

            $voucher_serial_date = isset($_REQUEST['voucher_serial_date'])?$_REQUEST['voucher_serial_date']:$global_dmydate ;

            $advance_serial_no   = isset($_REQUEST['advance_serial_no'])?$_REQUEST['advance_serial_no']:'';

            $client_code         = isset($_REQUEST['client_code'])?$_REQUEST['client_code']:'';

            $matter_code         = isset($_REQUEST['matter_code'])?$_REQUEST['matter_code']:'';

            $advance_amount      = isset($_REQUEST['advance_amount'])?$_REQUEST['advance_amount']:0 ;

            $adjusted_amount     = isset($_REQUEST['adjusted_amount'])?$_REQUEST['adjusted_amount']:0 ;

            $balance_amount      = isset($_REQUEST['balance_amount'])?$_REQUEST['balance_amount']:0 ;

            $now_adjusted_amount = isset($_REQUEST['now_adjusted_amount'])?$_REQUEST['now_adjusted_amount']:0 ;

            $client_name         = getClientName($client_code) ;

            $matter_desc         = getMatterDesc($client_code,$matter_code) ;

        }



        //---- Detail

        $vchdtl_qry = $this->db->query("select * from voucher_detail a where a.ref_voucher_serial_no = '$voucher_serial_no' order by a.row_no")->getResultArray();

        $vchdtl_cnt = count($vchdtl_qry);



        $params = [

            'voucher_serial_no' => isset($voucher_serial_no) ? $voucher_serial_no : '',

            'global_sysdate' => $global_sysdate,

            'global_curr_finyr_fymddate' => $global_curr_finyr_fymddate,

            'global_curr_finyr_lymddate' => $global_curr_finyr_lymddate,

            'row_count' => isset($row_count['totalRow']) ? $row_count['totalRow'] : 0,

            'trans_type' => isset($trans_type) ? $trans_type : '',

            'global_curr_finyear' => isset($global_curr_finyear) ? $global_curr_finyear : '',

            'global_userid' => isset($global_userid) ? $global_userid : '',

            'fin_year' => isset($fin_year) ? $fin_year : '',

            'voucher_serial_date ' => isset($voucher_serial_date) ? $voucher_serial_date : '' ,

            'global_dmydate' => isset($global_dmydate) ? $global_dmydate : '',

            'client_name_from' => isset($client_name_from) ? $client_name_from : '',

            'initial_code_from' => isset($initial_code_from) ? $initial_code_from : '',

            'client_code_from' => isset($client_code_from) ? $client_code_from : '',

            'matter_code_from' => isset($matter_code_from) ? $matter_code_from : '',

            'voucher_serial_date' => isset($voucher_serial_date) ? $voucher_serial_date : '',

            'voucher_date' => isset($voucher_date) ? $voucher_date : '',

            'finyr_start_date' => isset($finyr_start_date) ? $finyr_start_date : '',

            'finyr_end_date' => isset($finyr_end_date) ? $finyr_end_date : '',

            'advance_serial_no' => isset($advance_serial_no) ? $advance_serial_no : '',

            'old_advance_serial_no' => isset($old_advance_serial_no) ? $old_advance_serial_no : '',

            'matter_desc_from' => isset($matter_desc_from) ? $matter_desc_from : '',

            'advance_amount' => isset($advance_amount) ? $advance_amount : 0,

            'adjusted_amount' => isset($adjusted_amount) ? $adjusted_amount : 0,

            'balance_amount' => isset($balance_amount) ? $balance_amount : 0,

            'client_code_to' => isset($client_code_to) ? $client_code_to : '',

            'client_name_to' => isset($client_name_to) ? $client_name_to : '',

            'matter_code_to' => isset($matter_code_to) ? $matter_code_to : '',

            'initial_code_to' => isset($initial_code_to) ? $initial_code_to : '',

            'matter_desc_to' => isset($matter_desc_to) ? $matter_desc_to : '',

            'transfer_amount' => isset($transfer_amount) ? $transfer_amount : 0,

            'old_transfer_amount' => isset($old_transfer_amount) ? $old_transfer_amount : 0,

            'payee_type_str' => isset($payee_type_str) ? $payee_type_str : '',

            'payee_type' => isset($payee_type) ? $payee_type : '',

            'payee_code' => isset($payee_code) ? $payee_code : '',

            'payee_name' => isset($payee_name) ? $payee_name : '',

            'payee_name_code' => isset($payee_name_code) ? $payee_name_code : '',

            'now_adjusted_amount' => isset($now_adjusted_amount) ? $now_adjusted_amount : 0,

            'client_name' => isset($client_name) ? $client_name : '',

            'client_code' => isset($client_code) ? $client_code : '',

            'matter_desc' => isset($matter_desc) ? $matter_desc : '',

            'matter_code' => isset($matter_code) ? $matter_code : '',

            'ref_bill_no' => isset($ref_bill_no) ? $ref_bill_no : '',

            'rowoptn' => isset($rowoptn) ? $rowoptn : 0,

            'billyr' => isset($billyr) ? $billyr : $bill_year,

            'billno' => isset($billno) ? $billno : $bill_no,

            'matr_code' => isset($matr_code) ? $matr_code : $matrcd,

            'iposamt_stax' => isset($iposamt_stax) ? $iposamt_stax : 0,

            'oposamt_stax' => isset($oposamt_stax) ? $oposamt_stax : 0,

            'cnosamt_stax' => isset($cnosamt_stax) ? $cnosamt_stax : 0,

            'iposamt_ntax' => isset($iposamt_ntax) ? $iposamt_ntax : 0,

            'oposamt_ntax' => isset($oposamt_ntax) ? $oposamt_ntax : 0,

            'cnosamt_ntax' => isset($cnosamt_ntax) ? $cnosamt_ntax : 0,

            'stosamt' => isset($stosamt) ? $stosamt : 0,

            'ipcolamt_stax' => isset($ipcolamt_stax) ? $ipcolamt_stax : 0,

            'opcolamt_stax' => isset($opcolamt_stax) ? $opcolamt_stax : 0,

            'cncolamt_stax' => isset($cncolamt_stax) ? $cncolamt_stax : 0,

            'ipcolamt_ntax' => isset($ipcolamt_ntax) ? $ipcolamt_ntax : 0,

            'opcolamt_ntax' => isset($opcolamt_ntax) ? $opcolamt_ntax : 0,

            'cncolamt_ntax' => isset($cncolamt_ntax) ? $cncolamt_ntax : 0,

            'stcolamt' => isset($stcolamt) ? $stcolamt : 0,

            'pfind' => isset($pfind) ? $pfind : 0,

            'lineno' => isset($lineno) ? $lineno : 0,

            'voucher_row_no' => isset($voucher_row_no) ? $voucher_row_no : 0,

            'old_billyr' => isset($old_billyr) ? $old_billyr : 0,

            'old_billno' => isset($old_billno) ? $old_billno : 0,

            'old_matr_code' => isset($old_matr_code) ? $old_matr_code : 0,

            'old_ipcolamt_stax' => isset($old_ipcolamt_stax) ? $old_ipcolamt_stax : 0,

            'old_opcolamt_stax' => isset($old_opcolamt_stax) ? $old_opcolamt_stax : 0,

            'old_cncolamt_stax' => isset($old_cncolamt_stax) ? $old_cncolamt_stax : 0,

            'old_ipcolamt_ntax' => isset($old_ipcolamt_ntax) ? $old_ipcolamt_ntax : 0,

            'old_opcolamt_ntax' => isset($old_opcolamt_ntax) ? $old_opcolamt_ntax : 0,

            'old_cncolamt_ntax' => isset($old_cncolamt_ntax) ? $old_cncolamt_ntax : 0,

            'old_stcolamt' => isset($old_stcolamt) ? $old_stcolamt : 0,

            'old_ipdefamt_stax' => isset($old_ipdefamt_stax) ? $old_ipdefamt_stax : 0,

            'old_opdefamt_stax' => isset($old_opdefamt_stax) ? $old_opdefamt_stax : 0,

            'old_cndefamt_stax' => isset($old_cndefamt_stax) ? $old_cndefamt_stax : 0,

            'old_ipdefamt_ntax' => isset($old_ipdefamt_ntax) ? $old_ipdefamt_ntax : 0,

            'old_opdefamt_ntax' => isset($old_opdefamt_ntax) ? $old_opdefamt_ntax : 0,

            'old_cndefamt_ntax' => isset($old_cndefamt_ntax) ? $old_cndefamt_ntax : 0,

            'old_stdefamt' => isset($old_stdefamt) ? $old_stdefamt : 0,

            'old_pfind' => isset($old_pfind) ? $old_pfind : 0,

            'pfind' => isset($pfind ) ? $pfind  : 0,

            'total_row_count' => isset($total_row_count ) ? $total_row_count  : 0,

        ];



        return view("pages/Finance/Journals/advance_adjustment_JV", compact('params', 'data', 'user_option', 'selemode', 'displayId', 'memdtl_cnt', 'vchdtl_qry', 'finyr_qry', 'redv', 'disv'));

    }



    public function counsel_memo_JV() { 

        $global_userid = $user_id = session()->userId;

        $data = branches($user_id); $global_curr_finyear = session()->financialYear;

        $global_dmydate = date('d-m-Y'); $global_sysdate = date_conv($global_dmydate); 

        $data['requested_url'] = session()->requested_end_menu_url;

        $displayId = ['counsel_help_id' => 4548];

        

        $global_curr_finyr_fymddate = substr($global_curr_finyear, 0, 4).'-04-01';

        $global_curr_finyr_lymddate = substr($global_curr_finyear, 5, 4).'-03-31';



        $global_curr_finyr_fdmydate = $curr_fyrsdt = '01-04-'.substr($global_curr_finyear,0,4);

        $global_curr_finyr_ldmydate = $curr_fyredt = '31-03-'.substr($global_curr_finyear,5,4);



        $selemode   = isset($_REQUEST['selemode']) ? $_REQUEST['selemode'] : null;

        $user_option = isset($_REQUEST['user_option'])?$_REQUEST['user_option']:null;

        $serial_no   = isset($_REQUEST['serial_no'])?$_REQUEST['serial_no']:null;



        $memo_qry = $vchdtl_qry = []; $memo_cnt = $vchdtl_cnt = 0; $redv = '' ;  $disv = '' ; $disb_proc = '' ; $disb_rese = '' ;  $disb_conf = ''; $redk = '' ; $disk = '' ;   



        if($selemode != 'Y') {

            $current_date      = $global_dmydate ;

            $finyr_start_date  = $global_curr_finyr_fdmydate ;  

            $finyr_end_date    = $global_curr_finyr_ldmydate ;  

            

            $branch_qry  = $this->db->query(session()->branch_selection_stmt)->getResultArray();

            

            if ($user_option == 'Add') {

                $voucher_serial_no   = isset($_REQUEST['voucher_serial_no'])   ?$_REQUEST['voucher_serial_no']   :'';

                $fin_year            = isset($_REQUEST['fin_year'])            ?$_REQUEST['fin_year']            :$global_curr_finyear ;

                $branch_code         = isset($_REQUEST['branch_code'])         ?$_REQUEST['branch_code']         :session()->user_qry['branch_code'];

                $voucher_serial_date = isset($_REQUEST['voucher_serial_date']) ?$_REQUEST['voucher_serial_date'] :$global_dmydate ;

                $counsel_code        = isset($_REQUEST['counsel_code'])        ?$_REQUEST['counsel_code']        :'';

                $counsel_name        = isset($_REQUEST['counsel_name'])        ?$_REQUEST['counsel_name']        :'';

                $counsel_fee         = isset($_REQUEST['counsel_fee'])         ?$_REQUEST['counsel_fee']         :0 ;

                $clerk_fee           = isset($_REQUEST['clerk_fee'])           ?$_REQUEST['clerk_fee']           :0 ;

                $peon_fee            = isset($_REQUEST['peon_fee'])            ?$_REQUEST['peon_fee']            :0 ;

                $service_tax_fee     = isset($_REQUEST['service_tax_fee'])     ?$_REQUEST['service_tax_fee']     :0 ;

                $total_fee           = isset($_REQUEST['total_fee'])           ?$_REQUEST['total_fee']           :0 ;

                

                if ($selemode != 'proceed') {

                    $redv = '';  $disv = ''; $disb_proc = ''; $disb_rese = 'disabled';  $disb_conf = 'disabled'; $redk = ''; $disk = ''; 

                    $memo_cnt = 0 ;



                } else {

                    $selemode = 'Y'; $redv = 'readonly';  $disv = 'disabled'; $disb_proc = 'disabled'; $disb_rese = '';  $disb_conf = ''; $redk = 'readonly'; $disk = 'disabled'; 

                   

                    $memo_sql = "select serial_no,entry_date,memo_no,memo_date,counsel_code,clerk_code,peon_code,counsel_fee,clerk_fee,peon_fee,service_tax_fee, '' check_desc

                                from counsel_memo_header

                                where branch_code  = '$branch_code'

                                    and counsel_code = '$counsel_code'

                                    and status_code  = 'A'

                                    and (ifnull(counsel_fee_jv,0)+ifnull(clerk_fee_jv,0)+ifnull(peon_fee_jv,0)+ifnull(service_tax_fee_jv,0)) = 0  

                                    and (ref_voucher_serial_no is NULL or ref_voucher_serial_no = '' or ref_voucher_serial_no = 0) 

                                    and (ref_ledger_serial_no is NULL  or ref_ledger_serial_no = ''  or ref_ledger_serial_no = 0) 

                                order by 2,1 " ;

                    $memo_qry = $this->db->query($memo_sql)->getResultArray();

                    $memo_cnt = count($memo_qry) ;

                }



            } else if ($user_option == 'Edit') {

                $redv = 'readonly' ;  $disv = 'disabled' ; $disb_proc = 'disabled' ; $disb_rese = 'disabled' ;  $disb_conf = '' ; $redk = 'readonly' ; $disk = 'disabled' ; 

                

                $voucher_serial_no   = isset($_REQUEST['voucher_serial_no']) ? $_REQUEST['voucher_serial_no'] : '';

                $fin_year            = isset($_REQUEST['fin_year']) ? $_REQUEST['fin_year'] : $global_curr_finyear ;

                

                $vchhdr_qry          = $this->db->query("select * from voucher_header where serial_no = '$voucher_serial_no' ")->getRowArray();

                $branch_code         = $vchhdr_qry['branch_code'] ;

                $voucher_serial_date = date_conv($vchhdr_qry['entry_date']) ;

                $counsel_code        = $vchhdr_qry['payee_payer_code'] ;

                $counsel_name        = $vchhdr_qry['payee_payer_name'] ;

                

                $memhdr_qry          = $this->db->query("select sum(counsel_fee_jv) cnslfee, sum(clerk_fee_jv) clrkfee, sum(peon_fee_jv) peonfee, sum(service_tax_fee_jv) servtaxfee from counsel_memo_header where ref_voucher_serial_no = '$voucher_serial_no' ")->getRowArray();

                $counsel_fee         = $memhdr_qry['cnslfee'] ;

                $clerk_fee           = $memhdr_qry['clrkfee'] ;

                $peon_fee            = $memhdr_qry['peonfee'] ;

                $service_tax_fee     = $memhdr_qry['servtaxfee'] ;

                $total_fee           = number_format(($counsel_fee+$clerk_fee+$peon_fee+$service_tax_fee),2,'.','') ;

                $selemode            = 'Y' ;

                

                $memo_sql = "select serial_no,entry_date,memo_no,memo_date,counsel_code,clerk_code,peon_code,counsel_fee,clerk_fee,peon_fee,service_tax_fee, '' check_desc

                                from counsel_memo_header

                            where branch_code  = '$branch_code'

                                and counsel_code = '$counsel_code'

                                and status_code  = 'A'

                                and (ifnull(counsel_fee_jv,0)+ifnull(clerk_fee_jv,0)+ifnull(peon_fee_jv,0)+ifnull(service_tax_fee_jv,0)) = 0  

                                and (ref_voucher_serial_no is NULL or ref_voucher_serial_no = '' or ref_voucher_serial_no = 0) 

                                and (ref_ledger_serial_no  is NULL  or ref_ledger_serial_no = ''  or ref_ledger_serial_no = 0) 

                            union all

                            select serial_no,entry_date,memo_no,memo_date,counsel_code,clerk_code,peon_code,counsel_fee,clerk_fee,peon_fee,service_tax_fee, 'checked' check_desc

                                from counsel_memo_header

                            where ref_voucher_serial_no = '$voucher_serial_no' 

                            order by 2,1 " ;

                $memo_qry = $this->db->query($memo_sql)->getResultArray();

                $memo_cnt = count($memo_qry);

            } else {

                $selemode = 'Y';

                $voucher_serial_no = isset($_REQUEST['voucher_serial_no']) ? $_REQUEST['voucher_serial_no'] : '';

                $fin_year          = isset($_REQUEST['fin_year']) ? $_REQUEST['fin_year'] : $global_curr_finyear;

                

                $branch_qry        = $this->db->query(session()->branch_selection_stmt)->getResultArray();

                $tdsact_qry        = $this->db->query("select key_value from control_keycodes where key_code = '016' ")->getRowArray();

                $tdsact_code       = $tdsact_qry['key_value'];



                $ktdsact_qry       = $this->db->query("select key_value from control_keycodes where key_code = '030' ")->getRowArray();

                $ktdsact_code      = $ktdsact_qry['key_value'];



                $ptdsact_qry       = $this->db->query("select key_value from control_keycodes where key_code = '032' ")->getRowArray();

                $ptdsact_code      = $ptdsact_qry['key_value'];



                $cnsact_qry        = $this->db->query("select key_value from control_keycodes where key_code = '007' ")->getRowArray();

                $cnsact_code       = $cnsact_qry['key_value'];



                $voucher_date      = $global_dmydate ;

                $current_date      = $global_dmydate ;

                $finyr_start_date  = $global_curr_finyr_fdmydate ;  

                $finyr_end_date    = $global_curr_finyr_ldmydate ;  



                $vchhdr_qry          = $this->db->query("select * from voucher_header where serial_no = '$voucher_serial_no' ")->getRowArray();

                $branch_code         = $vchhdr_qry['branch_code'];

                $branch_name         = getBranchName($branch_code) ;

                $voucher_serial_date = date_conv($vchhdr_qry['entry_date']) ;

                $counsel_code        = $vchhdr_qry['payee_payer_code'] ;

                $counsel_name        = $vchhdr_qry['payee_payer_name'] ;

                $basic_amount        = $vchhdr_qry['basic_amount'] ;

                $service_tax_amount  = $vchhdr_qry['service_tax_amount'] ;

                $gross_amount        = $vchhdr_qry['gross_amount'] ;

                $counsel_fee_blog    = $vchhdr_qry['backlog_counsel_fee'] ;

                $clerk_fee_blog      = $vchhdr_qry['backlog_clerk_fee'] ;

                $peon_fee_blog       = $vchhdr_qry['backlog_peon_fee'] ;



                $vchdtl_qry_k = $this->db->query("select sub_ac_code from voucher_detail where ref_voucher_serial_no = '$voucher_serial_no' and part_full_ind = 'K' ")->getResultArray(); 

                $vchdtl_row_k = isset($vchdtl_qry_k[0]) ? $vchdtl_qry_k[0] : null;

                $pan_no_k = getAssociatePan(isset($vchdtl_row_k['sub_ac_code']) ? $vchdtl_row_k['sub_ac_code'] : '') ;





                $vchdtl_qry_c = $this->db->query("select sub_ac_code from voucher_detail where ref_voucher_serial_no = '$voucher_serial_no' and part_full_ind = 'C'  ")->getResultArray(); 

                $vchdtl_row_c = $vchdtl_qry_c[0];

                $pan_no_cnsl = getAssociatePan($vchdtl_row_c['sub_ac_code']) ;



                $vchdtl_sql          = "select a.row_no,a.main_ac_code,a.sub_ac_code,a.client_code,a.matter_code,a.narration,a.dr_cr_ind,a.gross_amount from voucher_detail a where a.ref_voucher_serial_no = '$voucher_serial_no' order by a.row_no " ;

                $vchdtl_qry          = $this->db->query($vchdtl_sql)->getResultArray();

                $vchdtl_cnt          = count($vchdtl_qry);

                

                $vchtot_qry          = $this->db->query("select sum(gross_amount) totamt from voucher_detail where ref_voucher_serial_no = '$voucher_serial_no' and dr_cr_ind = 'C' and main_ac_code = '$cnsact_code' and sub_ac_code = '$counsel_code' ")->getRowArray();

                $counsel_fee_payable = $vchtot_qry['totamt']; 

                

                $vchtot_qry          = $this->db->query("select sum(gross_amount) totamt from voucher_detail where ref_voucher_serial_no = '$voucher_serial_no' and dr_cr_ind = 'C' and main_ac_code = '$cnsact_code' and sub_ac_code != '$counsel_code' and narration LIKE '%PAYABLE CLERK%' ",)->getRowArray();

                $clerk_fee_payable   = $vchtot_qry['totamt'];  

                

                $vchtot_qry          = $this->db->query("select sum(gross_amount) totamt from voucher_detail where ref_voucher_serial_no = '$voucher_serial_no' and dr_cr_ind = 'C' and main_ac_code = '$cnsact_code' and sub_ac_code != '$counsel_code' and narration LIKE '%PAYABLE PEON%' ",)->getRowArray();

                $peon_fee_payable    = $vchtot_qry['totamt'];  



                $vchtot_qry          = $this->db->query("select sum(gross_amount) totamt from voucher_detail where ref_voucher_serial_no = '$voucher_serial_no' and dr_cr_ind = 'C' and main_ac_code = '$tdsact_code' ",)->getRowArray();

                $tax_amount          = $vchtot_qry['totamt']; 

                

                $vchtot_qry          = $this->db->query("select sum(gross_amount) totamt from voucher_detail where ref_voucher_serial_no = '$voucher_serial_no' and dr_cr_ind = 'C' and main_ac_code = '4999' ",)->getRowArray();

                $clerk_tax_amount    = $vchtot_qry['totamt']; 

                

                $vchtot_qry          = $this->db->query("select sum(gross_amount) totamt from voucher_detail where ref_voucher_serial_no = '$voucher_serial_no' and dr_cr_ind = 'C' and main_ac_code = '5999' ",)->getRowArray();

                $peon_tax_amount     = $vchtot_qry['totamt']; 



                $counsel_fee_curr    = ($counsel_fee_payable + $counsel_fee_blog) + $tax_amount ;  

                $clerk_fee_curr      = $clerk_fee_payable + $clerk_tax_amount ;

                $peon_fee_curr       = $peon_fee_payable + $peon_tax_amount ;

                $counsel_fee_total   = $counsel_fee_curr + $counsel_fee_blog ;  

                $clerk_fee_total     = $clerk_fee_curr + $clerk_fee_blog ; 

                $peon_fee_total      = $peon_fee_curr + $peon_fee_blog ; 



                if ($vchdtl_cnt == 0)

                {

                   // alert('No record(s) found ......... ');

                } 

            }

            

        } else {

            $codemasObj = $this->db->table("code_master"); // table : code_master

            $controlKeyObj = $this->db->table("control_keycodes"); // table : control_keycodes

            $voucherHdrObj = $this->db->table("voucher_header"); // table : voucher_header

            $voucherDtlObj = $this->db->table("voucher_detail"); // table : voucher_detail

            $ledgerTranHeaderObj = $this->db->table("ledger_trans_hdr"); // table : ledger_trans_hdr

            $ledgerTranDetailObj = $this->db->table("ledger_trans_dtl"); // table : ledger_trans_dtl

            $tdsCertificateObj = $this->db->table("tds_certificate"); // table : tds_certificate

          

            if($user_option == 'Add' || $user_option == 'Edit') {



                $voucher_serial_no   = isset($_REQUEST['voucher_serial_no'])   ?$_REQUEST['voucher_serial_no']   :null;

                $fin_year            = isset($_REQUEST['fin_year'])            ?$_REQUEST['fin_year']            :$global_curr_finyear;

                $branch_code         = isset($_REQUEST['branch_code'])         ?$_REQUEST['branch_code']         :session()->user_qry['branch_code'];

                $voucher_serial_date = isset($_REQUEST['voucher_serial_date']) ?$_REQUEST['voucher_serial_date'] :$global_dmydate;

                $counsel_code        = isset($_REQUEST['counsel_code'])        ?$_REQUEST['counsel_code']        :null;

                $counsel_name        = isset($_REQUEST['counsel_name'])        ?$_REQUEST['counsel_name']        :null;

                $srlno               = isset($_REQUEST['memo_srlno'])          ?$_REQUEST['memo_srlno']          :null;

                $start_date          = $global_curr_finyr_fymddate ;

                $entry_date_ymd      = date_conv($voucher_serial_date) ;

                

                //--------------------------------------------------

                //  Part A : JV generation 

                //--------------------------------------------------

            

                $user_id        = session()->userId;

                $logdt_qry      = $this->db->query("select current_date, current_time, date_format(current_date,'%d-%m-%Y') current_dmydate ")->getRowArray();

                $curr_time      = $logdt_qry['current_time'];

                $curr_date      = $logdt_qry['current_dmydate'];

                $curr_day       = substr($curr_date,0,2) ;

                $curr_month     = substr($curr_date,3,2) ; 

                $curr_year      = substr($curr_date,6,4) ;

                $temp_id        = $user_id."_".$curr_year.$curr_month.$curr_day.str_replace(':','',$curr_time);



                $mytemptable = $temp_id.'_consel_memo_jv';

                $myadjtable  = $temp_id.'_consel_advance_adjustment';



                $this->temp_db->query("drop table if exists $mytemptable");

                $this->temp_db->query("drop table if exists $myadjtable"); 

            

                $tmp_table_sql = "CREATE table $mytemptable(serial_no varchar(8),counsel_code varchar(6),clerk_code varchar(6),peon_code varchar(6),client_code varchar(6),matter_code varchar(6),initial_code varchar(6),counsel_fee double(12,2),clerk_fee double(12,2),peon_fee double(12,2),new_tax_fee double(12,2),new_tax_cess_fee double(12,2),new_tax_hecess_fee double(12,2),service_tax_fee double(12,2))";

                $tmp_table = $this->temp_db->query($tmp_table_sql);



                $adj_table_sql = "CREATE table $myadjtable(serial_no varchar(8),counsel_code varchar(6),clerk_code varchar(6),peon_code varchar(6),counsel_adj_amount double(12,2),clerk_adj_amount double(12,2),peon_adj_amount double(12,2))";

                $adj_table = $this->temp_db->query($adj_table_sql);

                

                $doc_type      = 'JV' ;

                $ref_doc_type  = 'MJ' ;

    

                $daybook_qry  = $this->db->query("select key_value from control_keycodes where key_code = '018' ")->getRowArray();

                $daybook_code = $daybook_qry['key_value'];

                

                $tdsact_qry   = $this->db->query("select key_value from control_keycodes where key_code = '016' ")->getRowArray();

                $tdsact_code  = $tdsact_qry['key_value'];

                

                $ktdsact_qry  = $this->db->query("select key_value from control_keycodes where key_code = '031' ")->getRowArray();

                $ktdsact_code = $ktdsact_qry['key_value'];



                $ptdsact_qry  = $this->db->query("select key_value from control_keycodes where key_code = '033' ")->getRowArray();

                $ptdsact_code = $ptdsact_qry['key_value'];

                

                $cnsact_qry   = $this->db->query("select key_value from control_keycodes where key_code = '007' ")->getRowArray();

                $cnsact_code  = $cnsact_qry['key_value'];

                

                $mdract_qry   = $this->db->query("select key_value from control_keycodes where key_code = '024' ")->getRowArray();

                $mdract_code  = $mdract_qry['key_value'];

                

                $clract_qry   = $this->db->query("select key_value from control_keycodes where key_code = '029' ")->getRowArray();

                $clract_code  = $clract_qry['key_value'];



                $pnract_qry   = $this->db->query("select key_value from control_keycodes where key_code = '034' ")->getRowArray();

                $pnract_code  = $pnract_qry['key_value'] ;



                $srlsel = explode('|', $srlno) ;

                $srlcnt = count($srlsel) ;



                for($i=0; $i<$srlcnt; $i++) {

                    $srlsel_arr = $srlsel[$i];

                    $sql_arr = "select a.serial_no,a.counsel_fee,a.clerk_fee,a.peon_fee,a.counsel_code,a.clerk_code,a.peon_code,b.client_code,b.matter_code,b.initial_code,sum(ifnull(b.counsel_fee,0)),sum(ifnull(b.clerk_fee,0)),sum(ifnull(b.peon_fee,0)),sum(ifnull(b.new_tax_amount,0)),sum(ifnull(b.new_tax_cess_amount,0)),sum(ifnull(b.new_tax_hecess_amount,0)),sum(ifnull(b.service_tax_amount,0)) 

                            from counsel_memo_header a, counsel_memo_detail b where a.serial_no = '$srlsel_arr' and a.serial_no = b.ref_counsel_memo_serial_no group by a.serial_no,a.counsel_code,a.clerk_code,a.peon_code,b.client_code,b.matter_code,b.initial_code";

                    $data_arr = $this->db->query($sql_arr)->getRowArray();

                    if(!empty($data_arr)) {

                        $data_arr = (object) $data_arr;

                        $insert_sql = "insert into $mytemptable (serial_no,counsel_code,clerk_code,peon_code,client_code,matter_code,initial_code,counsel_fee,clerk_fee,peon_fee) values ('$data_arr->serial_no', '$data_arr->counsel_code', '$data_arr->clerk_code', '$data_arr->peon_code', '$data_arr->client_code', '$data_arr->matter_code', '$data_arr->initial_code', '$data_arr->counsel_fee', '$data_arr->clerk_fee', '$data_arr->peon_fee')"; //  '$data_arr->new_tax_fee', '$data_arr->new_tax_cess_fee', '$data_arr->new_tax_hecess_fee', '$data_arr->service_tax_fee'

                        $this->temp_db->query($insert_sql);

                    }



                    $sql_arr = "select a.serial_no,a.counsel_code,a.clerk_code,a.peon_code,ifnull(a.counsel_adjusted_amount,0),ifnull(a.clerk_adjusted_amount,0),ifnull(a.peon_adjusted_amount,0)

                            from counsel_memo_header a where a.serial_no = '$srlsel_arr'";

                    $data_arr = $this->db->query($sql_arr)->getRowArray();

                    

                    if(!empty($data_arr)) {

                        $data_arr = (object) $data_arr;

                        $insadj_sql = "insert into $myadjtable (serial_no,counsel_code,clerk_code,peon_code) values ('$data_arr->serial_no', '$data_arr->counsel_code', '$data_arr->clerk_code', '$data_arr->peon_code')"; // , '$data_arr->counsel_adj_amount', '$data_arr->clerk_adj_amount', '$data_arr->peon_adj_amount'

                        $insadj_qry = $this->temp_db->query($insadj_sql);

                    }

                }

            

                //----- COUNSEL Payment (Previous)

                $sql_txt = "SELECT  ifnull(sum(b.gross_amount), 0) amt 

                            FROM  ledger_trans_dtl b, ledger_trans_hdr a

                            WHERE  b.main_ac_code = '$cnsact_code'

                                AND  b.sub_ac_code = '$counsel_code'

                                AND  b.dr_cr_ind = 'D'

                                AND  ifnull(a.ref_doc_type,'') <> 'CJ'

                                AND  b.ref_ledger_serial_no = a.serial_no

                                AND  ifnull(a.payment_type,'N') <> 'A'

                                AND  a.doc_date BETWEEN '$start_date' AND '$entry_date_ymd'";

            

                $res_txt = $this->db->query($sql_txt)->getRowArray();

                $cnsl_amt_y = $res_txt['amt'];

            

                //----- Tax Deducted  (Previous)

                $sql_txt2 = "SELECT  ifnull(sum(b.gross_amount),0) amt 

                                FROM  ledger_trans_dtl b, ledger_trans_hdr a

                            WHERE  b.main_ac_code = '$tdsact_code'

                                AND  b.sub_ac_code  = '$counsel_code'

                                AND  b.dr_cr_ind = 'C'

                                AND  b.ref_ledger_serial_no = a.serial_no

                                AND  a.doc_date BETWEEN '$start_date' AND '$entry_date_ymd'";



                $res_txt2 = $this->db->query($sql_txt2)->getRowArray();

                $tds_amt_p = $res_txt2['amt'];

                

                //--------------*** CLERK CALCULATION START ***------------------//

                $sql_txt_clerk = "select clerk_code, sum(clerk_fee) clerk_amt from $mytemptable where clerk_fee >0 group by clerk_code order by clerk_code";

                $res_txt_clerk = $this->temp_db->query($sql_txt_clerk)->getRowArray();

                $clerk_code_w = isset($res_txt_clerk['clerk_code']) ? $res_txt_clerk['clerk_code'] : '';

                

                //----- CLERK Payment (Previous)

                $sql_txt = "SELECT  ifnull(sum(b.gross_amount),0) amt 

                            FROM  ledger_trans_dtl b, ledger_trans_hdr a

                            WHERE  b.main_ac_code = '1999'

                                AND  b.sub_ac_code = '$clerk_code_w'

                                AND  b.dr_cr_ind = 'D'

                                AND  b.ref_ledger_serial_no = a.serial_no

                                AND  ifnull(a.ref_doc_type,'') <> 'CJ'

                                AND  ifnull(a.payment_type,'N') <> 'A'

                                AND  a.doc_date BETWEEN '$start_date' AND '$entry_date_ymd'";

            

            

                $res_txt = $this->db->query($sql_txt)->getRowArray();

                $clerk_amt_y = $res_txt['amt'];

            

                //----- Tax Deducted - CLERK (Previous)

                $sql_txt2 = "SELECT  ifnull(sum(b.gross_amount),0) amt 

                                FROM  ledger_trans_dtl b, ledger_trans_hdr a

                            WHERE  b.main_ac_code = '4999'

                                AND  b.sub_ac_code  = '$clerk_code_w'

                                AND  b.dr_cr_ind = 'C'

                                AND  b.ref_ledger_serial_no = a.serial_no

                                AND  a.doc_date BETWEEN '$start_date' AND '$entry_date_ymd'";



                $res_txt2 = $this->db->query($sql_txt2)->getRowArray();

                $tds_amt_clerk_p = $res_txt2['amt']; 

            

                //--------------*** CLERK CALCULATION END ***------------------//

                

                

                    //--------------*** PEON CALCULATION START ***------------------//

                $sql_txt_peon = "select peon_code, sum(peon_fee) peon_amt from $mytemptable where peon_fee >0 group by peon_code order by peon_code";

                $res_txt_peon = $this->temp_db->query($sql_txt_peon)->getRowArray();

                $peon_code_pp = isset($res_txt_peon['peon_code']) ? $res_txt_peon['peon_code'] : '';

            

                    //----- PEON Payment (Previous)

                $sql_txt = "SELECT  ifnull(sum(b.gross_amount),0) amt 

                            FROM  ledger_trans_dtl b, ledger_trans_hdr a

                            WHERE  b.main_ac_code = '1999'

                                AND  b.sub_ac_code = '$peon_code_pp'

                                AND  b.dr_cr_ind = 'D'

                                AND  b.ref_ledger_serial_no = a.serial_no

                                AND  ifnull(a.payment_type,'N') <> 'A'

                                AND  a.doc_date BETWEEN '$start_date' AND '$entry_date_ymd'";

            

            

                $res_txt = $this->db->query($sql_txt)->getRowArray();

                $peon_amt_y = $res_txt['amt'];

            

                //----- Tax Deducted - Peon (Previous)

                $sql_txt2 = "SELECT  ifnull(sum(b.gross_amount),0) amt 

                                FROM  ledger_trans_dtl b, ledger_trans_hdr a

                            WHERE  b.main_ac_code = '5999'

                                AND  b.sub_ac_code  = '$peon_code_pp'

                                AND  b.dr_cr_ind = 'C'

                                AND  b.ref_ledger_serial_no = a.serial_no

                                AND  a.doc_date BETWEEN '$start_date' AND '$entry_date_ymd'";

                $res_txt2 = $this->db->query($sql_txt2)->getRowArray();

                $tds_amt_peon_p = $res_txt2['amt'];

            

                //--------------*** PEON CALCULATION END ***------------------//

            

            

                //----- Minimum Amount Required for Calculation of TDS

                $sql_txt4 = "SELECT key_desc,key_value FROM control_keycodes WHERE key_code = '020'";

                $res_txt4 = $this->db->query($sql_txt4)->getRowArray();

                $tds_amt_k = $res_txt4['key_value'];

                $ts_desc   = $res_txt4['key_desc'];

            

                //----- TDS Percent 

                $sql_txt5 = "SELECT tds_percent from params WHERE fin_year = '$global_curr_finyear' ";

                $res_txt5 = $this->db->query($sql_txt5)->getRowArray();

                $tds_percent_q = $res_txt5['tds_percent'];

            

                //----- Counsel/Clerk/Peon Payment (Current)

                $sql_txt3 = "SELECT IFNULL(SUM(counsel_fee),0) amt, IFNULL(SUM(clerk_fee),0) amt1, IFNULL(SUM(peon_fee),0) amtp, IFNULL(SUM(new_tax_fee),0) newamt1, IFNULL(SUM(new_tax_cess_fee),0) newamt2, IFNULL(SUM(new_tax_hecess_fee),0) newamt3, IFNULL(SUM(service_tax_fee),0) amt2 FROM $mytemptable";

                $result = $this->temp_db->query($sql_txt3)->getRowArray();

                $counsel_amt_x    = $result['amt'];

                $clerk_amt_x      = $result['amt1'];

                $peon_amt_x       = $result['amtp'];

                $servtax_amt_x    = $result['amt2'];

                $header_basic_amt = $result['amt'] ;

                $header_nbtax_amt = $result['newamt1'] ;

                $header_ncess_amt = $result['newamt2'] ;

                $header_nhces_amt = $result['newamt3'] ;

                $header_svtax_amt = $result['amt2'];

                $header_gross_amt = $result['amt'] + $result['amt1'] + $result['amtp']+ $result['amt2'] ;

            

                //----- Tax Deduction (Current)

                $tot_amt    = $counsel_amt_x + $servtax_amt_x + $cnsl_amt_y;

                $tds_amount = 0;

                if($tot_amt >= $tds_amt_k) {

                    if($tds_amt_p > 0) {

                        $tds_amount          = round(($counsel_amt_x+$servtax_amt_x) * ($tds_percent_q/100),0);

                        $tds_amount_counsel  = round(($counsel_amt_x) * ($tds_percent_q/100),0);

                        $tds_amount_servtax  = $tds_amount - $tds_amount_counsel ;

                        $backlog_counsel_fee = 0;

                    } else {

                        $tds_amount          = round($tot_amt * ($tds_percent_q/100),0);

                        $tds_amount_counsel  = round(($counsel_amt_x+$cnsl_amt_y) * ($tds_percent_q/100),0);

                        $tds_amount_servtax  = $tds_amount - $tds_amount_counsel ;

                        $backlog_counsel_fee = $cnsl_amt_y;

                    }

                } else {

                    $tds_amount          = 0.00;

                    $tds_amount_counsel  = 0.00;

                    $tds_amount_servtax  = $tds_amount - $tds_amount_counsel ;

                    $backlog_counsel_fee = 0;

                }

            

                //----- Tax Deduction -CLERK (Current)

                $tot_clerk_amt    = $clerk_amt_x + $clerk_amt_y;

                $tds_clerk_amount = 0;

                if($tot_clerk_amt >= $tds_amt_k) {

                    if($tds_amt_clerk_p > 0) {

                        $tds_clerk_amount = round(($result['amt1']) * ($tds_percent_q/100),0);

                        $backlog_clerk_fee = 0;

                    } else {

                        $tds_clerk_amount = round($tot_clerk_amt * ($tds_percent_q/100),0);

                        $backlog_clerk_fee = $clerk_amt_y;

                    }

                } else {

                    $tds_clerk_amount = 0.00;

                    $backlog_clerk_fee = 0;

                }



                //----- Tax Deduction -Peon (Current)

                $tot_peon_amt    = $peon_amt_x + $peon_amt_y;

                $tds_peon_amount = 0;



                if($tot_peon_amt >= $tds_amt_k) {

                    if($tds_amt_peon_p > 0) {

                        $tds_peon_amount  = round(($result['amtp']) * ($tds_percent_q/100),0);

                        $backlog_peon_fee = 0;

                    } else {

                        $tds_peon_amount  = round($tot_peon_amt * ($tds_percent_q/100),0);

                        $backlog_peon_fee = $peon_amt_y;

                    }

                } else {

                    $tds_peon_amount          = 0.00;

                    $backlog_peon_fee = 0;

                }

            

                $counsel_fee_payable = $counsel_amt_x - $tds_amount;  if($counsel_fee_payable <= 0) { $counsel_fee_payable = 1.00 ; $tds_amount = $counsel_amt_x - $counsel_fee_payable; }

                $service_tax_payable = $servtax_amt_x;  

            

                $clerk_fee_payable = $result['amt1'];

                $peon_fee_payable  = $result['amtp'];

            

            

                

                //------ Add/Update : Voucher Header

                if($user_option == 'Add') {

                    $array = array( 'serial_no'             => '',

                                    'branch_code'           => $branch_code,

                                    'entry_date'            => $entry_date_ymd,

                                    'trans_type'            => $ref_doc_type,

                                    'voucher_type'          => $doc_type,

                                    'payee_payer_type'      => 'C',

                                    'payee_payer_code'      => $counsel_code,

                                    'payee_payer_name'      => $counsel_name,

                                    // 'pan_no'                => $pan_no,

                                    'received_from'         => NULL,

                                    'payment_type'          => 'N',

                                    'daybook_code'          => $daybook_code,

                                    'instrument_type'       => NULL,

                                    'instrument_no'         => NULL,

                                    'instrument_dt'         => NULL,

                                    'bank_name'             => NULL,

                                    'basic_amount'          => NULL,  

                                    'new_tax_amount'        => NULL,  

                                    'new_tax_cess_amount'   => NULL,   

                                    'new_tax_hecess_amount' => NULL,   

                                    'new_tax_total_amount'  => NULL,   

                                    'service_tax_amount'    => NULL,   

                                    'gross_amount'          => $header_gross_amt,   

                                    'tax_code'              => NULL,

                                    'tax_amount'            => 0,                    

                                    'net_amount'            => $header_gross_amt,    

                                    'remarks'               => NULL,

                                    'status_code'           => 'A',

                                    'ref_ledger_serial_no'  => NULL,

                                    'ref_jv_serial_no'      => NULL,

                                    'ref_advance_serial_no' => NULL,

                                    'link_jv_serial_no'     => NULL,

                                    'backlog_counsel_fee'   => $backlog_counsel_fee,

                                    'backlog_clerk_fee'     => $backlog_clerk_fee,

                                    'backlog_peon_fee'      => $backlog_peon_fee,

                                    'prepared_by'           => $global_userid,

                                    'prepared_on'           => date_conv(date('d-m-Y')),

                                    'passed_by'             => NULL,

                                    'passed_on'             => NULL,

                                    'paid_by'               => NULL,

                                    'paid_on'               => NULL,

                                );

            

                    $vch_header = $voucherHdrObj->insert($array);

                    $voucher_serial_no = $this->db->insertID();

                    $msg = 'Please note JV Serial No : '.$voucher_serial_no ;



                } else if($user_option == 'Edit') {

                    $array = array( 'branch_code'           => $branch_code,

                                    'entry_date'            => $entry_date_ymd,

                                    'trans_type'            => $ref_doc_type,

                                    'voucher_type'          => $doc_type,

                                    'payee_payer_type'      => 'C',

                                    'payee_payer_code'      => $counsel_code,

                                    'payee_payer_name'      => $counsel_name,

                                    'received_from'         => NULL,

                                    'payment_type'          => 'N',

                                    'daybook_code'          => $daybook_code,

                                    'instrument_type'       => NULL,

                                    'instrument_no'         => NULL,

                                    'instrument_dt'         => NULL,

                                    'bank_name'             => NULL,

                                    'basic_amount'          => NULL,

                                    'new_tax_amount'        => NULL,

                                    'new_tax_cess_amount'   => NULL,

                                    'new_tax_hecess_amount' => NULL,

                                    'new_tax_total_amount'  => NULL,

                                    'service_tax_amount'    => NULL,

                                    'gross_amount'          => $header_gross_amt,   

                                    'tax_code'              => NULL,

                                    'tax_amount'            => 0,                    

                                    'net_amount'            => $header_gross_amt,    

                                    'remarks'               => NULL,

                                    'status_code'           => 'A',

                                    'ref_ledger_serial_no'  => NULL,

                                    'ref_jv_serial_no'      => NULL,

                                    'ref_advance_serial_no' => NULL,

                                    'link_jv_serial_no'     => NULL,

                                    'backlog_counsel_fee'   => $backlog_counsel_fee,

                                    'backlog_clerk_fee'     => $backlog_clerk_fee,

                                    'backlog_peon_fee'      => $backlog_peon_fee,

                                    'prepared_by'           => $global_userid,

                                    'prepared_on'           => date_conv(date('d-m-Y')),

                                    'passed_by'             => NULL,

                                    'passed_on'             => NULL,

                                    'paid_by'               => NULL,

                                    'paid_on'               => NULL,

                                );

                    $where = "serial_no = '".$voucher_serial_no."'" ;				

                    $vch_header = $voucherHdrObj->update($array, $where);

                }

            

                //------ Add/Update : Voucher Detail [Debit Records] / Counsel Memo Header

                if ($user_option == 'Edit') 

                {

                    $this->db->query("delete from voucher_detail where ref_voucher_serial_no = '$voucher_serial_no' ");

                    $this->db->query("update counsel_memo_header set counsel_fee_jv = '', clerk_fee_jv = '', peon_fee_jv = '', service_tax_fee_jv = '', ref_voucher_serial_no = '' where ref_voucher_serial_no = '$voucher_serial_no' ");

                }

            

                //------ Voucher Detail

                $i = 1 ;

                $j = 0 ;

                $my_qry1 = $this->temp_db->query("select * from $mytemptable order by serial_no,counsel_code,clerk_code,peon_code,client_code,matter_code,initial_code ")->getResultArray();                 

                $my_cnt1 = count($my_qry1);                 

                $my_row1 = isset($my_qry1[0]) ? $my_qry1[0] : null;



                while ($i <= $my_cnt1) {

                    $memo_serial_no = $my_row1['serial_no']; 

                    $counsel_name   = getAssociateName($my_row1['counsel_code']) ;



                    while($memo_serial_no == $my_row1['serial_no'] && $i <= $my_cnt1) { 

                        //------ Counsel

                        $j++;

                        $narration = 'FEES : '.$counsel_name ;

                    

                        $array = array( 'ref_voucher_serial_no'      => $voucher_serial_no,

                                        'row_no'                     => $j,

                                        'main_ac_code'               => $mdract_code,

                                        'sub_ac_code'                => $my_row1['counsel_code'],

                                        'ref_bill_year'              => NULL,

                                        'ref_bill_no'                => NULL,

                                        'client_code'                => $my_row1['client_code'],

                                        'matter_code'                => $my_row1['matter_code'],

                                        'initial_code'               => $my_row1['initial_code'],

                                        'expense_type'               => NULL,

                                        'expense_code'               => NULL,

                                        'narration'                  => $narration,

                                        'realise_amount_inpocket'    => NULL,

                                        'realise_amount_outpocket'   => NULL,

                                        'realise_amount_counsel'     => NULL,

                                        'realise_amount_service_tax' => NULL,

                                        'bill_no'                    => NULL,

                                        'bill_date'                  => NULL,

                                        'basic_amount'               => $my_row1['counsel_fee'],   

                                        'new_tax_amount'             => NULL,   

                                        'new_tax_cess_amount'        => NULL,   

                                        'new_tax_hecess_amount'      => NULL,   

                                        'new_tax_total_amount'       => NULL,   

                                        'service_tax_amount'         => NULL,   

                                        'gross_amount'               => $my_row1['counsel_fee'],

                                        'tax_amount'                 => NULL,

                                        'net_amount'                 => $my_row1['counsel_fee'],

                                        'dr_cr_ind'                  => 'D',

                                        'deficit_amount_inpocket'    => NULL,

                                        'deficit_amount_outpocket'   => NULL,

                                        'deficit_amount_counsel'     => NULL,

                                        'deficit_amount_service_tax' => NULL,

                                        'part_full_ind'              => NULL 

                                        );

                        $vch_detail = $voucherDtlObj->insert($array);



                        //------ Clerk

                        if ($my_row1['clerk_fee'] > 0 && $fin_year == '2011-2012') {

                            $j++ ;

                            $narration = 'CLERKAGE : '.getAssociateName($my_row1['counsel_code']) ;

                        

                            $array = array( 'ref_voucher_serial_no'      => $voucher_serial_no,

                                            'row_no'                     => $j,

                                            'main_ac_code'               => $mdract_code,

                                            'sub_ac_code'                => NULL,

                                            'ref_bill_year'              => NULL,

                                            'ref_bill_no'                => NULL,

                                            'client_code'                => $my_row1['client_code'],

                                            'matter_code'                => $my_row1['matter_code'],

                                            'initial_code'               => $my_row1['initial_code'],

                                            'expense_type'               => NULL,

                                            'expense_code'               => NULL,

                                            'narration'                  => $narration,

                                            'realise_amount_inpocket'    => NULL,

                                            'realise_amount_outpocket'   => NULL,

                                            'realise_amount_counsel'     => NULL,

                                            'realise_amount_service_tax' => NULL,

                                            'bill_no'                    => NULL,

                                            'bill_date'                  => NULL,

                                            'basic_amount'               => $my_row1['clerk_fee'],   

                                            'new_tax_amount'             => NULL,   

                                            'new_tax_cess_amount'        => NULL,   

                                            'new_tax_hecess_amount'      => NULL,   

                                            'new_tax_total_amount'       => NULL,   

                                            'service_tax_amount'         => NULL,   

                                            'gross_amount'               => $my_row1['clerk_fee'],

                                            'tax_amount'                 => NULL,

                                            'net_amount'                 => $my_row1['clerk_fee'],

                                            'dr_cr_ind'                  => 'D',

                                            'deficit_amount_inpocket'    => NULL,

                                            'deficit_amount_outpocket'   => NULL,

                                            'deficit_amount_counsel'     => NULL,

                                            'deficit_amount_service_tax' => NULL,

                                            'part_full_ind'              => NULL 

                                        );



                            $vch_detail = $voucherDtlObj->insert($array);

                        }

                

                

                        if ($my_row1['clerk_fee'] > 0 && $fin_year != '2011-2012') {

                            $j++ ;

                            $narration = 'CLERKAGE PAY: '.getAssociateName($my_row1['clerk_code']);

                        

                            $array = array( 'ref_voucher_serial_no'      => $voucher_serial_no,

                                            'row_no'                     => $j,

                                            'main_ac_code'               => $clract_code,

                                            'sub_ac_code'                => $my_row1['clerk_code'],

                                            'ref_bill_year'              => NULL,

                                            'ref_bill_no'                => NULL,

                                            'client_code'                => $my_row1['client_code'],

                                            'matter_code'                => $my_row1['matter_code'],

                                            'initial_code'               => $my_row1['initial_code'],

                                            'expense_type'               => NULL,

                                            'expense_code'               => NULL,

                                            'narration'                  => $narration,

                                            'realise_amount_inpocket'    => NULL,

                                            'realise_amount_outpocket'   => NULL,

                                            'realise_amount_counsel'     => NULL,

                                            'realise_amount_service_tax' => NULL,

                                            'bill_no'                    => NULL,

                                            'bill_date'                  => NULL,

                                            'basic_amount'               => $my_row1['clerk_fee'],   

                                            'new_tax_amount'             => NULL,   

                                            'new_tax_cess_amount'        => NULL,   

                                            'new_tax_hecess_amount'      => NULL,   

                                            'new_tax_total_amount'       => NULL,   

                                            'service_tax_amount'         => NULL,   

                                            'gross_amount'               => $my_row1['clerk_fee'],

                                            'tax_amount'                 => NULL,

                                            'net_amount'                 => $my_row1['clerk_fee'],

                                            'dr_cr_ind'                  => 'D',

                                            'deficit_amount_inpocket'    => NULL,

                                            'deficit_amount_outpocket'   => NULL,

                                            'deficit_amount_counsel'     => NULL,

                                            'deficit_amount_service_tax' => NULL,

                                            'part_full_ind'              => NULL 

                                        );

                            $vch_detail = $voucherDtlObj->insert($array);

                        }



                        if ($my_row1['peon_fee'] > 0 && $fin_year != '2011-2012') {

                            $j++ ;

                            $narration = 'PEONAGE PAY: '.getAssociateName($my_row1['peon_code']);

                    

                            $array = array( 'ref_voucher_serial_no'      => $voucher_serial_no,

                                            'row_no'                     => $j,

                                            'main_ac_code'               => $pnract_code,

                                            'sub_ac_code'                => $my_row1['peon_code'],

                                            'ref_bill_year'              => NULL,

                                            'ref_bill_no'                => NULL,

                                            'client_code'                => $my_row1['client_code'],

                                            'matter_code'                => $my_row1['matter_code'],

                                            'initial_code'               => $my_row1['initial_code'],

                                            'expense_type'               => NULL,

                                            'expense_code'               => NULL,

                                            'narration'                  => $narration,

                                            'realise_amount_inpocket'    => NULL,

                                            'realise_amount_outpocket'   => NULL,

                                            'realise_amount_counsel'     => NULL,

                                            'realise_amount_service_tax' => NULL,

                                            'bill_no'                    => NULL,

                                            'bill_date'                  => NULL,

                                            'basic_amount'               => $my_row1['peon_fee'],   

                                            'new_tax_amount'             => NULL,   

                                            'new_tax_cess_amount'        => NULL,   

                                            'new_tax_hecess_amount'      => NULL,   

                                            'new_tax_total_amount'       => NULL,   

                                            'service_tax_amount'         => NULL,   

                                            'gross_amount'               => $my_row1['peon_fee'],

                                            'tax_amount'                 => NULL,

                                            'net_amount'                 => $my_row1['peon_fee'],

                                            'dr_cr_ind'                  => 'D',

                                            'deficit_amount_inpocket'    => NULL,

                                            'deficit_amount_outpocket'   => NULL,

                                            'deficit_amount_counsel'     => NULL,

                                            'deficit_amount_service_tax' => NULL,

                                            'part_full_ind'              => NULL 

                                        );

                            $vch_detail = $voucherDtlObj->insert($array);

                        }

                

                        //------ Service Tax

                        if ($my_row1['service_tax_fee'] > 0) {

                            $j++ ;

                            $narration = 'SERVICE TAX : '.$counsel_name ;

                        

                            $array = array( 'ref_voucher_serial_no'      => $voucher_serial_no,

                                            'row_no'                     => $j,

                                            'main_ac_code'               => $mdract_code,

                                            'sub_ac_code'                => NULL,

                                            'ref_bill_year'              => NULL,

                                            'ref_bill_no'                => NULL,

                                            'client_code'                => $my_row1['client_code'],

                                            'matter_code'                => $my_row1['matter_code'],

                                            'initial_code'               => $my_row1['initial_code'],

                                            'expense_type'               => NULL,

                                            'expense_code'               => NULL,

                                            'narration'                  => $narration,

                                            'realise_amount_inpocket'    => NULL,

                                            'realise_amount_outpocket'   => NULL,

                                            'realise_amount_counsel'     => NULL,

                                            'realise_amount_service_tax' => NULL,

                                            'bill_no'                    => NULL,

                                            'bill_date'                  => NULL,

                                            'basic_amount'               => $my_row1['service_tax_fee'],   

                                            'new_tax_amount'             => NULL,   

                                            'new_tax_cess_amount'        => NULL,   

                                            'new_tax_hecess_amount'      => NULL,   

                                            'new_tax_total_amount'       => NULL,   

                                            'service_tax_amount'         => NULL,   

                                            'gross_amount'               => $my_row1['service_tax_fee'],

                                            'tax_amount'                 => NULL,

                                            'net_amount'                 => $my_row1['service_tax_fee'],

                                            'dr_cr_ind'                  => 'D',

                                            'deficit_amount_inpocket'    => NULL,

                                            'deficit_amount_outpocket'   => NULL,

                                            'deficit_amount_counsel'     => NULL,

                                            'deficit_amount_service_tax' => NULL,

                                            'part_full_ind'              => NULL 

                                        );

                            $vch_detail = $voucherDtlObj->insert($array);

                        }

                

                        $my_row1 = isset($my_qry1[$i]) ? $my_qry1[$i] : $my_qry1[$i-1];

                        $i = $i + 1 ;

                    } 



                    //------ Counsel Memo Header

                    $this->db->query("update counsel_memo_header set counsel_fee_jv = counsel_fee, clerk_fee_jv = clerk_fee, peon_fee_jv = peon_fee, service_tax_fee_jv = service_tax_fee, ref_voucher_serial_no = '$voucher_serial_no' where serial_no = '$memo_serial_no' ");

                }

            

                //------ Add/Update : Voucher Detail [Credit Records] 

                $j++ ;

                //---- Counsel Fee Payable

                $narration = 'PAYABLE COUNSEL  : '.$counsel_name ;

            

                $array = array( 'ref_voucher_serial_no'      => $voucher_serial_no,

                                'row_no'                     => $j,

                                'main_ac_code'               => $cnsact_code,

                                'sub_ac_code'                => $counsel_code,

                                'ref_bill_year'              => NULL,

                                'ref_bill_no'                => NULL,

                                'client_code'                => NULL,

                                'matter_code'                => NULL,

                                'initial_code'               => NULL,

                                'expense_type'               => NULL,

                                'expense_code'               => NULL,

                                'narration'                  => $narration,

                                'realise_amount_inpocket'    => NULL,

                                'realise_amount_outpocket'   => NULL,

                                'realise_amount_counsel'     => NULL,

                                'realise_amount_service_tax' => NULL,

                                'bill_no'                    => NULL,

                                'bill_date'                  => NULL,

                                'basic_amount'               => $counsel_fee_payable,   

                                'new_tax_amount'             => NULL,   

                                'new_tax_cess_amount'        => NULL,   

                                'new_tax_hecess_amount'      => NULL,   

                                'new_tax_total_amount'       => NULL,   

                                'service_tax_amount'         => NULL,   

                                'gross_amount'               => $counsel_fee_payable,

                                'tax_amount'                 => NULL,

                                'net_amount'                 => $counsel_fee_payable,

                                'dr_cr_ind'                  => 'C',

                                'deficit_amount_inpocket'    => NULL,

                                'deficit_amount_outpocket'   => NULL,

                                'deficit_amount_counsel'     => NULL,

                                'deficit_amount_service_tax' => NULL,

                                'part_full_ind'              => 'C' 

                                );

                $vch_detail = $voucherDtlObj->insert($array);



                //---- Clerk Fee Payable

                if ($clerk_fee_payable > 0) {

                    $my_qry1 = $this->temp_db->query("select clerk_code, sum(clerk_fee) clerk_amt from $mytemptable where clerk_fee >0 group by clerk_code order by clerk_code ")->getResultArray(); 

                    foreach ($my_qry1 as $my_row1) { 

                    $j++ ;

                    $narration = 'PAYABLE CLERK  : '.getAssociateName($my_row1['clerk_code']);

                

                    $array = array( 'ref_voucher_serial_no'      => $voucher_serial_no,

                                    'row_no'                     => $j,

                                    'main_ac_code'               => $cnsact_code,

                                    'sub_ac_code'                => $my_row1['clerk_code'],

                                    'ref_bill_year'              => NULL,

                                    'ref_bill_no'                => NULL,

                                    'client_code'                => NULL,

                                    'matter_code'                => NULL,

                                    'initial_code'               => NULL,

                                    'expense_type'               => NULL,

                                    'expense_code'               => NULL,

                                    'narration'                  => $narration,

                                    'realise_amount_inpocket'    => NULL,

                                    'realise_amount_outpocket'   => NULL,

                                    'realise_amount_counsel'     => NULL,

                                    'realise_amount_service_tax' => NULL,

                                    'bill_no'                    => NULL,

                                    'bill_date'                  => NULL,

                                    'basic_amount'               => ($clerk_fee_payable - $tds_clerk_amount),

                                    'new_tax_amount'             => NULL,   

                                    'new_tax_cess_amount'        => NULL,   

                                    'new_tax_hecess_amount'      => NULL,   

                                    'new_tax_total_amount'       => NULL,   

                                    'service_tax_amount'         => NULL,   

                                    'gross_amount'               => ($clerk_fee_payable - $tds_clerk_amount),

                                    'tax_amount'                 => NULL,

                                    'net_amount'                 => ($clerk_fee_payable - $tds_clerk_amount),

                                    'dr_cr_ind'                  => 'C',

                                    'deficit_amount_inpocket'    => NULL,

                                    'deficit_amount_outpocket'   => NULL,

                                    'deficit_amount_counsel'     => NULL,

                                    'deficit_amount_service_tax' => NULL,

                                    'part_full_ind'              => 'K' 

                                    );

                        $vch_detail = $voucherDtlObj->insert($array);

                    } 

                }



                //---- Peon Fee Payable

                if ($peon_fee_payable > 0) {

                    $my_qry1 = $this->temp_db->query("select peon_code, sum(peon_fee) peon_amt from $mytemptable group by peon_code order by peon_code ")->getResultArray();                 

                    foreach ($my_qry1 as $my_row1) { 

                    $j++ ;

                    $narration = 'PAYABLE PEON  : '.getAssociateName($my_row1['peon_code']) ;

                        

                    $array = array( 'ref_voucher_serial_no'      => $voucher_serial_no,

                                    'row_no'                     => $j,

                                    'main_ac_code'               => $cnsact_code,

                                    'sub_ac_code'                => $my_row1['peon_code'],

                                    'ref_bill_year'              => NULL,

                                    'ref_bill_no'                => NULL,

                                    'client_code'                => NULL,

                                    'matter_code'                => NULL,

                                    'initial_code'               => NULL,

                                    'expense_type'               => NULL,

                                    'expense_code'               => NULL,

                                    'narration'                  => $narration,

                                    'realise_amount_inpocket'    => NULL,

                                    'realise_amount_outpocket'   => NULL,

                                    'realise_amount_counsel'     => NULL,

                                    'realise_amount_service_tax' => NULL,

                                    'bill_no'                    => NULL,

                                    'bill_date'                  => NULL,

                                    'basic_amount'               => ($peon_fee_payable - $tds_peon_amount),

                                    'new_tax_amount'             => NULL,   

                                    'new_tax_cess_amount'        => NULL,   

                                    'new_tax_hecess_amount'      => NULL,   

                                    'new_tax_total_amount'       => NULL,   

                                    'service_tax_amount'         => NULL,   

                                    'gross_amount'               => ($peon_fee_payable - $tds_peon_amount),

                                    'tax_amount'                 => NULL,

                                    'net_amount'                 => ($peon_fee_payable - $tds_peon_amount),

                                    'dr_cr_ind'                  => 'C',

                                    'deficit_amount_inpocket'    => NULL,

                                    'deficit_amount_outpocket'   => NULL,

                                    'deficit_amount_counsel'     => NULL,

                                    'deficit_amount_service_tax' => NULL,

                                    'part_full_ind'              => 'P' 

                                    );

                        $vch_detail = $voucherDtlObj->insert($array);

                    } 

                }

            

                //---- Service Tax Payable

                if ($service_tax_payable > 0) {

                    $j++ ; 

                    $narration = 'SERVICE TAX PAYABLE  : '.$counsel_name ;

                

                    $array = array( 'ref_voucher_serial_no'      => $voucher_serial_no,

                                'row_no'                     => $j,

                                'main_ac_code'               => $cnsact_code,

                                'sub_ac_code'                => $counsel_code,

                                'ref_bill_year'              => NULL,

                                'ref_bill_no'                => NULL,

                                'client_code'                => NULL,

                                'matter_code'                => NULL,

                                'initial_code'               => NULL,

                                'expense_type'               => NULL,

                                'expense_code'               => NULL,

                                'narration'                  => $narration,

                                'realise_amount_inpocket'    => NULL,

                                'realise_amount_outpocket'   => NULL,

                                'realise_amount_counsel'     => NULL,

                                'realise_amount_service_tax' => NULL,

                                'bill_no'                    => NULL,

                                'bill_date'                  => NULL,

                                'basic_amount'               => $service_tax_payable,   

                                'new_tax_amount'             => NULL,   

                                'new_tax_cess_amount'        => NULL,   

                                'new_tax_hecess_amount'      => NULL,   

                                'new_tax_total_amount'       => NULL,   

                                'service_tax_amount'         => NULL,   

                                'gross_amount'               => $service_tax_payable,

                                'tax_amount'                 => NULL,

                                'net_amount'                 => $service_tax_payable,

                                'dr_cr_ind'                  => 'C',

                                'deficit_amount_inpocket'    => NULL,

                                'deficit_amount_outpocket'   => NULL,

                                'deficit_amount_counsel'     => NULL,

                                'deficit_amount_service_tax' => NULL,

                                'part_full_ind'              => 'S' 

                                );

                    $vch_detail = $voucherDtlObj->insert($array);

                }

            

                //---- TDS

                if ($tds_amount > 0) {

                    $j++ ; $narration = 'TDS : '.$counsel_name ;

                    

                    $array = array( 'ref_voucher_serial_no'      => $voucher_serial_no,

                                    'row_no'                     => $j,

                                    'main_ac_code'               => $tdsact_code,

                                    'sub_ac_code'                => $counsel_code,

                                    'ref_bill_year'              => NULL,

                                    'ref_bill_no'                => NULL,

                                    'client_code'                => NULL,

                                    'matter_code'                => NULL,

                                    'initial_code'               => NULL,

                                    'expense_type'               => NULL,

                                    'expense_code'               => NULL,

                                    'narration'                  => $narration,

                                    'realise_amount_inpocket'    => NULL,

                                    'realise_amount_outpocket'   => NULL,

                                    'realise_amount_counsel'     => NULL,

                                    'realise_amount_service_tax' => NULL,

                                    'bill_no'                    => NULL,

                                    'bill_date'                  => NULL,

                                    'basic_amount'               => $tds_amount,   

                                    'new_tax_amount'             => NULL,   

                                    'new_tax_cess_amount'        => NULL,   

                                    'new_tax_hecess_amount'      => NULL,   

                                    'new_tax_total_amount'       => NULL,   

                                    'service_tax_amount'         => NULL,   

                                    'gross_amount'               => $tds_amount,

                                    'tax_amount'                 => NULL,

                                    'net_amount'                 => $tds_amount,

                                    'dr_cr_ind'                  => 'C',

                                    'deficit_amount_inpocket'    => NULL,

                                    'deficit_amount_outpocket'   => NULL,

                                    'deficit_amount_counsel'     => NULL,

                                    'deficit_amount_service_tax' => NULL,

                                    'part_full_ind'              => NULL 

                                    );

                    $vch_detail = $voucherDtlObj->insert($array);

                }

                

                    //---- CLERK TDS

                if ($tds_clerk_amount > 0) {

                    $my_qry1 = $this->temp_db->query("select clerk_code, sum(clerk_fee) clerk_amt from $mytemptable group by clerk_code order by clerk_code ")->getResultArray();                 

                    foreach ($my_qry1 as $my_row1) { 

                        $j++ ;

                    $narration = 'TDS : '.getAssociateName($my_row1['clerk_code']);



                    $array = array( 'ref_voucher_serial_no'      => $voucher_serial_no,

                                    'row_no'                     => $j,

                                    'main_ac_code'               => $ktdsact_code,

                                    'sub_ac_code'                => $my_row1['clerk_code'],

                                    'ref_bill_year'              => NULL,

                                    'ref_bill_no'                => NULL,

                                    'client_code'                => NULL,

                                    'matter_code'                => NULL,

                                    'initial_code'               => NULL,

                                    'expense_type'               => NULL,

                                    'expense_code'               => NULL,

                                    'narration'                  => $narration,

                                    'realise_amount_inpocket'    => NULL,

                                    'realise_amount_outpocket'   => NULL,

                                    'realise_amount_counsel'     => NULL,

                                    'realise_amount_service_tax' => NULL,

                                    'bill_no'                    => NULL,

                                    'bill_date'                  => NULL,

                                    'basic_amount'               => $tds_clerk_amount,   

                                    'new_tax_amount'             => NULL,   

                                    'new_tax_cess_amount'        => NULL,   

                                    'new_tax_hecess_amount'      => NULL,   

                                    'new_tax_total_amount'       => NULL,   

                                    'service_tax_amount'         => NULL,   

                                    'gross_amount'               => $tds_clerk_amount,

                                    'tax_amount'                 => NULL,

                                    'net_amount'                 => $tds_clerk_amount,

                                    'dr_cr_ind'                  => 'C',

                                    'deficit_amount_inpocket'    => NULL,

                                    'deficit_amount_outpocket'   => NULL,

                                    'deficit_amount_counsel'     => NULL,

                                    'deficit_amount_service_tax' => NULL,

                                    'part_full_ind'              => NULL 

                                    );

                    $vch_detail = $voucherDtlObj->insert($array);

                }

            

                }

                        //---- PEON TDS

                    if ($tds_peon_amount > 0) {

                        $my_qry1 = $this->temp_db->query("select peon_code, sum(peon_fee) peon_amt from $mytemptable group by peon_code order by peon_code ")->getResultArray();                 

                        foreach ($my_qry1 as $my_row1) { 

                

                            $j++ ;

                        $narration = 'TDS : '.getAssociateName($my_row1['peon_code']);

                        

                        $array = array( 'ref_voucher_serial_no'      => $voucher_serial_no,

                                        'row_no'                     => $j,

                                        'main_ac_code'               => $ptdsact_code,

                                        'sub_ac_code'                => $my_row1['peon_code'],

                                        'ref_bill_year'              => NULL,

                                        'ref_bill_no'                => NULL,

                                        'client_code'                => NULL,

                                        'matter_code'                => NULL,

                                        'initial_code'               => NULL,

                                        'expense_type'               => NULL,

                                        'expense_code'               => NULL,

                                        'narration'                  => $narration,

                                        'realise_amount_inpocket'    => NULL,

                                        'realise_amount_outpocket'   => NULL,

                                        'realise_amount_counsel'     => NULL,

                                        'realise_amount_service_tax' => NULL,

                                        'bill_no'                    => NULL,

                                        'bill_date'                  => NULL,

                                        'basic_amount'               => $tds_peon_amount,   

                                        'new_tax_amount'             => NULL,   

                                        'new_tax_cess_amount'        => NULL,   

                                        'new_tax_hecess_amount'      => NULL,   

                                        'new_tax_total_amount'       => NULL,   

                                        'service_tax_amount'         => NULL,   

                                        'gross_amount'               => $tds_peon_amount,

                                        'tax_amount'                 => NULL,

                                        'net_amount'                 => $tds_peon_amount,

                                        'dr_cr_ind'                  => 'C',

                                        'deficit_amount_inpocket'    => NULL,

                                        'deficit_amount_outpocket'   => NULL,

                                        'deficit_amount_counsel'     => NULL,

                                        'deficit_amount_service_tax' => NULL,

                                        'part_full_ind'              => NULL 

                                        );

                        $vch_detail = $voucherDtlObj->insert($array);

                    }

                

                }



                //--------------------------------------------------

                //  Part B : Payment Voucher generation (Voucher - Header/Detail)

                //--------------------------------------------------

                $this->db->query("delete from voucher_detail where ref_voucher_serial_no in (select serial_no from voucher_header where link_jv_serial_no = '$voucher_serial_no') ");

                $this->db->query("delete from voucher_header where link_jv_serial_no = '$voucher_serial_no' ");

                $trans_type   = 'MJ' ;

                $voucher_type = 'PV' ;

                $cnsact_qry   = $this->db->query("select key_value from control_keycodes where key_code = '007' ")->getRowArray();

                $cnsact_code  = $cnsact_qry['key_value'] ;

                

                //----------- For Counsel

                //-- Header 

                $payee_payer_type    = 'C' ;

                $payee_payer_code    = $counsel_code ;

                $payee_payer_name    = $counsel_name ;

                // $pan_no_cnsl         = getAssociatePan(

                $payment_type        = 'N' ; 

                $remarks             = 'COUNSEL PAYMENT AGAINST JV SERIAL NO '.$voucher_serial_no.'  DATED '.$voucher_serial_date ; 

                $link_jv_serial_no   = $voucher_serial_no ;

                $status_code         = 'A' ;

                

                $cnsadj_qry          = $this->temp_db->query("select sum(counsel_adj_amount) adj_amount from $myadjtable ")->getRowArray();

                $counsel_adj_amount = $cnsadj_qry['adj_amount'] ;  

                $vchtot_qry          = $this->db->query("select sum(gross_amount) totamt from voucher_detail where ref_voucher_serial_no = '$voucher_serial_no' and dr_cr_ind = 'C' and main_ac_code = '$cnsact_code' and sub_ac_code = '$counsel_code' and part_full_ind = 'S' ")->getRowArray();

                $service_tax_payable = $vchtot_qry['totamt'] ;  

                $vchtot_qry          = $this->db->query("select sum(gross_amount) totamt from voucher_detail where ref_voucher_serial_no = '$voucher_serial_no' and dr_cr_ind = 'C' and main_ac_code = '$cnsact_code' and sub_ac_code = '$counsel_code' and part_full_ind = 'C' ")->getRowArray();

                $counsel_fee_payable = $vchtot_qry['totamt'] - $counsel_adj_amount ;  if($counsel_fee_payable < 0) {$counsel_fee_payable = 0;} 

                

                $array = array( 'serial_no'             => '',

                                'branch_code'           => $branch_code,

                                'entry_date'            => $entry_date_ymd,

                                'trans_type'            => $trans_type,

                                'voucher_type'          => $voucher_type,

                                'payee_payer_type'      => $payee_payer_type,

                                'payee_payer_code'      => $payee_payer_code,

                                'payee_payer_name'      => $payee_payer_name,

                                'received_from'         => NULL,

                                'payment_type'          => $payment_type,

                                'daybook_code'          => NULL,

                                'instrument_type'       => NULL,

                                'instrument_no'         => NULL,

                                'instrument_dt'         => NULL,

                                'bank_name'             => NULL,

                                'basic_amount'          => $counsel_fee_payable,  

                                'new_tax_amount'        => NULL,  

                                'new_tax_cess_amount'   => NULL,   

                                'new_tax_hecess_amount' => NULL,   

                                'new_tax_total_amount'  => $service_tax_payable,   

                                'service_tax_amount'    => $service_tax_payable,   

                                'gross_amount'          => ($counsel_fee_payable+$service_tax_payable),   

                                'tax_code'              => NULL,

                                'tax_amount'            => NULL,                    

                                'net_amount'            => ($counsel_fee_payable+$service_tax_payable),    

                                'remarks'               => $remarks,

                                'status_code'           => $status_code,

                                'ref_ledger_serial_no'  => NULL,

                                'ref_jv_serial_no'      => NULL,

                                'ref_advance_serial_no' => NULL,

                                'link_jv_serial_no'     => $link_jv_serial_no,

                                'backlog_counsel_fee'   => NULL,

                                'backlog_clerk_fee'     => NULL,

                                'prepared_by'           => $global_userid,

                                'prepared_on'           => date_conv(date('d-m-Y')),

                                'passed_by'             => NULL,

                                'passed_on'             => NULL,

                                'paid_by'               => NULL,

                                'paid_on'               => NULL,

                            );

            

                $vch_header = $voucherHdrObj->insert($array);

                $payment_voucher_serial_no = $this->db->insertID();



                //-- Detail 

                $j = 1 ; 

                $narration = 'PAID TO '.$counsel_name ;

            

                $array = array( 'ref_voucher_serial_no'      => $payment_voucher_serial_no,

                                'row_no'                     => $j,

                                'main_ac_code'               => $cnsact_code,

                                'sub_ac_code'                => $counsel_code,

                                'ref_bill_year'              => NULL,

                                'ref_bill_no'                => NULL,

                                'client_code'                => NULL,

                                'matter_code'                => NULL,

                                'initial_code'               => NULL,

                                'expense_type'               => NULL,

                                'expense_code'               => NULL,

                                'narration'                  => $narration,

                                'realise_amount_inpocket'    => NULL,

                                'realise_amount_outpocket'   => NULL,

                                'realise_amount_counsel'     => NULL,

                                'realise_amount_service_tax' => NULL,

                                'bill_no'                    => NULL,

                                'bill_date'                  => NULL,

                                'basic_amount'               => $counsel_fee_payable,   

                                'new_tax_amount'             => NULL,   

                                'new_tax_cess_amount'        => NULL,   

                                'new_tax_hecess_amount'      => NULL,   

                                'new_tax_total_amount'       => $service_tax_payable,   

                                'service_tax_amount'         => $service_tax_payable,   

                                'gross_amount'               => ($counsel_fee_payable+$service_tax_payable),

                                'tax_amount'                 => NULL,

                                'net_amount'                 => ($counsel_fee_payable+$service_tax_payable),

                                'dr_cr_ind'                  => 'D',

                                'deficit_amount_inpocket'    => NULL,

                                'deficit_amount_outpocket'   => NULL,

                                'deficit_amount_counsel'     => NULL,

                                'deficit_amount_service_tax' => NULL,

                                'part_full_ind'              => NULL 

                            );



                $vch_detail = $voucherDtlObj->insert($array);

                $cnslpvmsg  = 'Please note Payment Voucher Serial No (Counsel) : '.$payment_voucher_serial_no ;

            

                //----- For Clerk

                if ($clerk_fee_payable > 0) {

                $j=1 ;  

                $k=0 ;

                $clrkpvmsg = 'Please note Payment Voucher Serial No (Clerk) : ';

                $my_sql1 = "select a.sub_ac_code, sum(a.gross_amount) totamt, b.adjamt

                                from sinhaco.voucher_detail a, (select x.clerk_code, sum(x.clerk_adj_amount) adjamt from ".'_temp.'.$myadjtable." x group by x.clerk_code) b 

                                where a.ref_voucher_serial_no = '$voucher_serial_no' 

                                and a.dr_cr_ind     = 'C' 

                                and a.main_ac_code  = '$cnsact_code' 

                                and a.part_full_ind = 'K' 

                                and a.sub_ac_code   = b.clerk_code 

                                group by a.sub_ac_code, b.adjamt";        

                $my_qry1 = $this->temp_db->query($my_sql1)->getResultArray();



                foreach($my_qry1 as $my_row1) { 

                    $k++ ;

                    //--- Header

                    $payee_payer_type    = 'K' ;

                    $payee_payer_code    = $my_row1['sub_ac_code'] ;

                    $payee_payer_name    = getAssociateName($my_row1['sub_ac_code']) ;

                    $payment_type        = 'N' ; 

                    $remarks             = 'CLERK PAYMENT AGAINST JV SERIAL NO '.$voucher_serial_no.'  DATED '.$voucher_serial_date ; 

                    $link_jv_serial_no   = $voucher_serial_no ;

                    $status_code         = 'A' ;

                    $clerk_code          = $payee_payer_code ;

                    $clerk_name          = $payee_payer_name ;

                    $clerk_fee_amount    = $my_row1['totamt'] - $my_row1['adjamt'] ;  

                    $narration           = 'PAID TO '.$clerk_name ;

                    $j = 1 ; 

                    

                    $array = array( 'serial_no'             => '',

                                    'branch_code'           => $branch_code,

                                    'entry_date'            => $entry_date_ymd,

                                    'trans_type'            => $trans_type,

                                    'voucher_type'          => $voucher_type,

                                    'payee_payer_type'      => $payee_payer_type,

                                    'payee_payer_code'      => $payee_payer_code,

                                    'payee_payer_name'      => $payee_payer_name,

                                    'received_from'         => NULL,

                                    'payment_type'          => $payment_type,

                                    'daybook_code'          => NULL,

                                    'instrument_type'       => NULL,

                                    'instrument_no'         => NULL,

                                    'instrument_dt'         => NULL,

                                    'bank_name'             => NULL,

                                    'basic_amount'          => $clerk_fee_amount,  

                                    'new_tax_amount'        => NULL,  

                                    'new_tax_cess_amount'   => NULL,   

                                    'new_tax_hecess_amount' => NULL,   

                                    'new_tax_total_amount'  => NULL,   

                                    'service_tax_amount'    => NULL,   

                                    'gross_amount'          => $clerk_fee_amount,   

                                    'tax_code'              => NULL,

                                    'tax_amount'            => NULL,                    

                                    'net_amount'            => $clerk_fee_amount,    

                                    'remarks'               => $remarks,

                                    'status_code'           => $status_code,

                                    'ref_ledger_serial_no'  => NULL,

                                    'ref_jv_serial_no'      => NULL,

                                    'ref_advance_serial_no' => NULL,

                                    'link_jv_serial_no'     => $link_jv_serial_no,

                                    'backlog_counsel_fee'   => NULL,

                                    'backlog_clerk_fee'     => NULL,

                                    'prepared_by'           => $global_userid,

                                    'prepared_on'           => date_conv(date('d-m-Y')),

                                    'passed_by'             => NULL,

                                    'passed_on'             => NULL,

                                    'paid_by'               => NULL,

                                    'paid_on'               => NULL,

                                );

                

                    $vch_header = $voucherHdrObj->insert($array);

                    $payment_voucher_serial_no = $this->db->insertID();



                    //-- Detail 

                    $array =  array( 'ref_voucher_serial_no'      => $payment_voucher_serial_no,

                                    'row_no'                     => $j,

                                    'main_ac_code'               => $cnsact_code,

                                    'sub_ac_code'                => $clerk_code,

                                    'ref_bill_year'              => NULL,

                                    'ref_bill_no'                => NULL,

                                    'client_code'                => NULL,

                                    'matter_code'                => NULL,

                                    'initial_code'               => NULL,

                                    'expense_type'               => NULL,

                                    'expense_code'               => NULL,

                                    'narration'                  => $narration,

                                    'realise_amount_inpocket'    => NULL,

                                    'realise_amount_outpocket'   => NULL,

                                    'realise_amount_counsel'     => NULL,

                                    'realise_amount_service_tax' => NULL,

                                    'bill_no'                    => NULL,

                                    'bill_date'                  => NULL,

                                    'basic_amount'               => $clerk_fee_amount,   

                                    'new_tax_amount'             => NULL,   

                                    'new_tax_cess_amount'        => NULL,   

                                    'new_tax_hecess_amount'      => NULL,   

                                    'new_tax_total_amount'       => NULL,   

                                    'service_tax_amount'         => NULL,   

                                    'gross_amount'               => $clerk_fee_amount,

                                    'tax_amount'                 => NULL,

                                    'net_amount'                 => $clerk_fee_amount,

                                    'dr_cr_ind'                  => 'D',

                                    'deficit_amount_inpocket'    => NULL,

                                    'deficit_amount_outpocket'   => NULL,

                                    'deficit_amount_counsel'     => NULL,

                                    'deficit_amount_service_tax' => NULL,

                                    'part_full_ind'              => NULL 

                                );

                    $vch_detail = $voucherDtlObj->insert($array);



                    if($k==1) { $clrkpvmsg .= $payment_voucher_serial_no ; } else { $clrkpvmsg .= ','.$payment_voucher_serial_no ; } 

                    } 

                }



                //----- For PEON

                if ($peon_fee_payable > 0) {

                $j=1 ;  

                $p=0 ;

                $peonpvmsg = 'Please note Payment Voucher Serial No (Peon) : ' ;

                

                $my_sql1 = "select a.sub_ac_code, sum(a.gross_amount) totamt, b.adjamt

                                from voucher_detail a, 

                                    (select x.peon_code, sum(x.peon_adj_amount) adjamt from $myadjtable x group by x.peon_code) b 

                            where a.ref_voucher_serial_no = '$voucher_serial_no' 

                                and a.dr_cr_ind             = 'C' 

                                and a.main_ac_code          = '$cnsact_code' 

                                and a.part_full_ind         = 'P' 

                                and a.sub_ac_code           = b.peon_code 

                                group by a.sub_ac_code, b.adjamt " ;        

                $my_qry1 = $this->temp_db->query($my_sql1)->getResultArray();	



                foreach($my_qry1 as $my_row1) { 

                    $p++ ;

                    //--- Header

                    $payee_payer_type    = 'P' ;

                    $payee_payer_code    = $my_row1['sub_ac_code'] ;

                    $payee_payer_name    = getAssociateName($my_row1['sub_ac_code'],$link) ;

                    $payment_type        = 'N' ; 

                    $remarks             = 'PEON PAYMENT AGAINST JV SERIAL NO '.$voucher_serial_no.'  DATED '.$voucher_serial_date ; 

                    $link_jv_serial_no   = $voucher_serial_no ;

                    $status_code         = 'A' ;

                    $peon_code           = $payee_payer_code ;

                    $peon_name           = $payee_payer_name ;

                    $peon_fee_amount     = $my_row1['totamt'] - $my_row1['adjamt'] ;  

                    $narration           = 'PAID TO '.$peon_name ;

                    $j = 1 ; 

            

                    $array = array( 'serial_no'             => '',

                                    'branch_code'           => $branch_code,

                                    'entry_date'            => $entry_date_ymd,

                                    'trans_type'            => $trans_type,

                                    'voucher_type'          => $voucher_type,

                                    'payee_payer_type'      => $payee_payer_type,

                                    'payee_payer_code'      => $payee_payer_code,

                                    'payee_payer_name'      => $payee_payer_name,

                                    'received_from'         => NULL,

                                    'payment_type'          => $payment_type,

                                    'daybook_code'          => NULL,

                                    'instrument_type'       => NULL,

                                    'instrument_no'         => NULL,

                                    'instrument_dt'         => NULL,

                                    'bank_name'             => NULL,

                                    'basic_amount'          => $peon_fee_amount,  

                                    'new_tax_amount'        => NULL,  

                                    'new_tax_cess_amount'   => NULL,   

                                    'new_tax_hecess_amount' => NULL,   

                                    'new_tax_total_amount'  => NULL,   

                                    'service_tax_amount'    => NULL,   

                                    'gross_amount'          => $peon_fee_amount,   

                                    'tax_code'              => NULL,

                                    'tax_amount'            => NULL,                    

                                    'net_amount'            => $peon_fee_amount,    

                                    'remarks'               => $remarks,

                                    'status_code'           => $status_code,

                                    'ref_ledger_serial_no'  => NULL,

                                    'ref_jv_serial_no'      => NULL,

                                    'ref_advance_serial_no' => NULL,

                                    'link_jv_serial_no'     => $link_jv_serial_no,

                                    'backlog_counsel_fee'   => NULL,

                                    'backlog_clerk_fee'     => NULL,

                                    'backlog_peon_fee'      => NULL,

                                    'prepared_by'           => $global_userid,

                                    'prepared_on'           => date_conv(date('d-m-Y')),

                                    'passed_by'             => NULL,

                                    'passed_on'             => NULL,

                                    'paid_by'               => NULL,

                                    'paid_on'               => NULL,

                                );

                

                    $vch_header = $voucherHdrObj->insert($array);

                    $payment_voucher_serial_no = $this->bd->insertID();



                    //-- Detail 

                    $array =  array( 'ref_voucher_serial_no'      => $payment_voucher_serial_no,

                                    'row_no'                     => $j,

                                    'main_ac_code'               => $cnsact_code,

                                    'sub_ac_code'                => $peon_code,

                                    'ref_bill_year'              => NULL,

                                    'ref_bill_no'                => NULL,

                                    'client_code'                => NULL,

                                    'matter_code'                => NULL,

                                    'initial_code'               => NULL,

                                    'expense_type'               => NULL,

                                    'expense_code'               => NULL,

                                    'narration'                  => $narration,

                                    'realise_amount_inpocket'    => NULL,

                                    'realise_amount_outpocket'   => NULL,

                                    'realise_amount_counsel'     => NULL,

                                    'realise_amount_service_tax' => NULL,

                                    'bill_no'                    => NULL,

                                    'bill_date'                  => NULL,

                                    'basic_amount'               => $peon_fee_amount,   

                                    'new_tax_amount'             => NULL,   

                                    'new_tax_cess_amount'        => NULL,   

                                    'new_tax_hecess_amount'      => NULL,   

                                    'new_tax_total_amount'       => NULL,   

                                    'service_tax_amount'         => NULL,   

                                    'gross_amount'               => $peon_fee_amount,

                                    'tax_amount'                 => NULL,

                                    'net_amount'                 => $peon_fee_amount,

                                    'dr_cr_ind'                  => 'D',

                                    'deficit_amount_inpocket'    => NULL,

                                    'deficit_amount_outpocket'   => NULL,

                                    'deficit_amount_counsel'     => NULL,

                                    'deficit_amount_service_tax' => NULL,

                                    'part_full_ind'              => NULL 

                                );

                    $vch_detail = $voucherDtlObj->insert($array);

                    

                    if($p==1) { $peonpvmsg .= $payment_voucher_serial_no ; } else { $peonpvmsg .= ','.$payment_voucher_serial_no ; } 

                    } 

                }



                if($user_option == 'Add') {

                    $message = 'Please note Voucher Serial No : ' . $voucher_serial_no ; 

                    

                    session()->setFlashdata('message', $message);

                    return redirect()->to(session()->last_selected_end_menu);

                } else {

                    session()->setFlashdata('message', "Record with Serial NO: [".$voucher_serial_no."] Updated Sucessfully !!");

                    return redirect()->to(session()->last_selected_end_menu);

                }

            

            } else if($user_option == 'Delete') {

                $voucher_serial_no = isset($_REQUEST['voucher_serial_no'])?$_REQUEST['voucher_serial_no']:null;

                

                $this->db->query("delete from voucher_header where serial_no             = '$voucher_serial_no' ");

                $this->db->query("delete from voucher_detail where ref_voucher_serial_no = '$voucher_serial_no' ");

                

                $this->db->query("delete from voucher_detail where ref_voucher_serial_no in (select serial_no from voucher_header where link_jv_serial_no = '$voucher_serial_no') ");

                $this->db->query("delete from voucher_header where link_jv_serial_no = '$voucher_serial_no' ");

                    

                $this->db->query("update counsel_memo_header set counsel_fee_jv = '', clerk_fee_jv = '', peon_fee_jv = '', service_tax_fee_jv = '', ref_voucher_serial_no = '' where ref_voucher_serial_no = '$voucher_serial_no' ");

                

                session()->setFlashdata('message', "Record with Serial NO: [".$voucher_serial_no."] Deleted Sucessfully !!");

                return redirect()->to(session()->last_selected_end_menu);



            } else if($user_option == 'Approve') {

                $voucher_serial_no      = isset($_REQUEST['voucher_serial_no'])   ?$_REQUEST['voucher_serial_no']   :null;

                $fin_year               = isset($_REQUEST['fin_year'])            ?$_REQUEST['fin_year']            :$global_curr_finyear;

                $branch_code            = isset($_REQUEST['branch_code'])         ?$_REQUEST['branch_code']         :session()->user_qry['branch_code'];

                $counsel_code           = isset($_REQUEST['counsel_code'])        ?$_REQUEST['counsel_code']        :null;

                $counsel_name           = isset($_REQUEST['counsel_name'])        ?$_REQUEST['counsel_name']        :null;

                $voucher_serial_date    = isset($_REQUEST['voucher_serial_date']) ?$_REQUEST['voucher_serial_date'] :null;

                $voucher_date           = isset($_REQUEST['voucher_date'])        ?$_REQUEST['voucher_date']        :$global_dmydate;

                $counsel_fee_curr       = isset($_REQUEST['counsel_fee_curr'])    ?$_REQUEST['counsel_fee_curr']    :0;

                $counsel_fee_blog       = isset($_REQUEST['counsel_fee_blog'])    ?$_REQUEST['counsel_fee_blog']    :0;

                $clerk_fee_blog         = isset($_REQUEST['clerk_fee_blog'])      ?$_REQUEST['clerk_fee_blog']      :0;

                $clerk_fee_curr         = isset($_REQUEST['clerk_fee_curr'])      ?$_REQUEST['clerk_fee_curr']      :0;

                $peon_fee_blog          = isset($_REQUEST['peon_fee_blog'])       ?$_REQUEST['peon_fee_blog']       :0;

                $peon_fee_curr          = isset($_REQUEST['peon_fee_curr'])       ?$_REQUEST['peon_fee_curr']       :0;

            

                $total_amount           = number_format(($counsel_fee_curr + $clerk_fee_curr + $peon_fee_curr),2,'.','') ;  

                $counsel_fee_payable    = isset($_REQUEST['counsel_fee_payable']) ?$_REQUEST['counsel_fee_payable'] :0;

                $clerk_fee_payable      = isset($_REQUEST['clerk_fee_payable'])   ?$_REQUEST['clerk_fee_payable']   :0;

                $peon_fee_payable       = isset($_REQUEST['peon_fee_payable'])    ?$_REQUEST['peon_fee_payable']   :0;

            

                $tax_amount             = isset($_REQUEST['tax_amount'])          ?$_REQUEST['tax_amount']          :0;

                $clerk_tax_amount       = isset($_REQUEST['clerk_tax_amount'])    ?$_REQUEST['clerk_tax_amount']    :0;

                $total_clerk_fee_amount = number_format(($clerk_fee_curr + $clerk_fee_blog),2,'.','') ;  

                

                $peon_tax_amount        = isset($_REQUEST['peon_tax_amount'])     ?$_REQUEST['peon_tax_amount']     :0;

                $total_peon_fee_amount  = number_format(($peon_fee_curr + $peon_fee_blog),2,'.','') ;  

                

                $vchtot_qry          = $this->db->query("select sum(gross_amount) totamt from voucher_detail where ref_voucher_serial_no = '$voucher_serial_no' and dr_cr_ind = 'C' and main_ac_code = '4999' ")->getRowArray();

                $clerk_tax_amount    = isset($vchtot_qry['totamt']) ? $vchtot_qry['totamt'] : 0; 

            

            

                //------------------------------------------------------------ 

                // Part A : MEMO JV Generation (Ledger Tranasaction - Header/Detail)

                //------------------------------------------------------------ 

                $doc_type            = 'JV' ;

                $ref_doc_type        = 'MJ' ;

                $narration           = 'COUNSEL MEMO JV' ; 

            

                $daybook_qry         = $this->db->query("select key_value from control_keycodes where key_code = '018' ")->getRowArray();

                $daybook_code        = $daybook_qry['key_value'] ;

            

                $doc_no              = getLastDocNo($fin_year,$branch_code,$daybook_code,'00','J');

                $doc_date            = date_conv($voucher_date) ;

                $jvmsg               = 'Please note Final JV No : '.$doc_no ;

                

                //--- Ledger Header

                $lh_array = array('serial_no'             => '',

                                'branch_code'           => $branch_code,

                                'fin_year'              => $fin_year,

                                'doc_type'              => $doc_type,

                                'doc_date'              => $doc_date,

                                'doc_no'                => $doc_no,

                                'daybook_code'          => $daybook_code,

                                'narration'             => $narration,

                                'payee_payer_type'      => 'C',

                                'payee_payer_code'      => $counsel_code,

                                'payee_payer_name'      => $counsel_name,

                                'payment_type'          => 'N',

                                'basic_amount'          => NULL,

                                'new_tax_amount'        => NULL,

                                'new_tax_cess_amount'   => NULL,

                                'new_tax_hecess_amount' => NULL,

                                'new_tax_total_amount'  => NULL,

                                'service_tax_amount'    => NULL,

                                'gross_amount'          => $total_amount,

                                    'tax_amount'            => 0,

                                'net_amount'            => $total_amount,

                                'status_code'           => 'C',

                                'ref_doc_serial_no'     => $voucher_serial_no,

                                'ref_doc_type'          => $ref_doc_type,

                                'prepared_by'           => $global_userid,

                                'prepared_on'           => $global_sysdate,

                                'approved_by'           => $global_userid,

                                'approved_on'           => $global_sysdate

                                );

                $ld_header = $ledgerTranHeaderObj->insert($lh_array);

                $ledger_serial_no = $this->db->insertID();

            

                //--- Ledger Detail

                $vchdtl_qry = $this->db->query("select * from voucher_detail where ref_voucher_serial_no = '$voucher_serial_no' ")->getResultArray(); 

                foreach($vchdtl_qry as $vchdtl_row) {

                    $ld_array = array('ref_ledger_serial_no'  => $ledger_serial_no,

                                        'branch_code'           => $branch_code,

                                        'main_ac_code'          => $vchdtl_row['main_ac_code'],

                                        'sub_ac_code'           => $vchdtl_row['sub_ac_code'],

                                        'client_code'           => $vchdtl_row['client_code'],

                                        'matter_code'           => $vchdtl_row['matter_code'],

                                        'initial_code'          => $vchdtl_row['initial_code'],

                                        'expense_type'          => $vchdtl_row['expense_type'],

                                        'expense_code'          => $vchdtl_row['expense_code'],

                                        'narration'             => $vchdtl_row['narration'],

                                        'bill_no'               => NULL,

                                        'bill_date'             => NULL,

                                        'basic_amount'          => NULL,

                                        'new_tax_amount'        => NULL,

                                        'new_tax_cess_amount'   => NULL,

                                        'new_tax_hecess_amount' => NULL,

                                        'new_tax_total_amount'  => NULL,

                                        'service_tax_amount'    => NULL,

                                        'gross_amount'          => $vchdtl_row['gross_amount'],

                                        'tax_amount'            => $vchdtl_row['tax_amount'],

                                        'net_amount'            => $vchdtl_row['net_amount'],

                                        'dr_cr_ind'             => $vchdtl_row['dr_cr_ind'],

                                        'record_type'           => 'G',

                                        'ref_doc_serial_no'     => $voucher_serial_no,

                                        'ref_doc_type'          => $ref_doc_type

                                        );

                    $ld_detail = $ledgerTranDetailObj->insert($ld_array);

                }

            

                //--- TDS Certificate

                if ($tax_amount > 0) {

                    $vchdtl_qry = $this->db->query("select sub_ac_code from voucher_detail where ref_voucher_serial_no = '$voucher_serial_no' and part_full_ind = 'C'  ")->getResultArray(); 

                

                    foreach($vchdtl_qry as $vchdtl_row) {

                        $pan_no_cnsl = getAssociatePan($vchdtl_row['sub_ac_code']);

                        

                        $td_array = array('serial_no'             => '',

                                            'branch_code'           => $branch_code,

                                            'pay_rcpt_ind'          => 'P',

                                            'ref_ledger_serial_no'  => $ledger_serial_no,

                                            'fin_year'              => $fin_year,

                                            'daybook_code'          => $daybook_code,

                                            'doc_no'                => $doc_no,

                                            'doc_date'              => $doc_date,

                                            'instrument_no'         => NULL,

                                            'instrument_dt'         => NULL,

                                            'bank_name'             => NULL,

                                            'dr_cr_ind'             => 'C',

                                            'payee_payer_type'      => 'C',

                                            'payee_payer_code'      => $counsel_code,

                                            'payee_payer_name'      => $counsel_name,

                                            'pan_no'                => $pan_no_cnsl,

                                            'gross_amount'          => ($counsel_fee_payable + $counsel_fee_blog) + $tax_amount ,//($counsel_fee_curr),

                                            'tax_code'              => 'T001', // 'tax_code' => NULL, (modified on 29/12/2009 by PC)

                                            'tax_amount'            => $tax_amount,

                                            'net_amount'            => ($counsel_fee_payable),

                                            'tds_deposit_ind'       => 'N'

                                            );

                        $td_header = $tdsCertificateObj->insert($td_array);

                    }

                }

                //--- TDS Certificate (Clerk)

                if ($clerk_tax_amount > 0) {

                    $vchdtl_qry = $this->db->query("select sub_ac_code from voucher_detail where ref_voucher_serial_no = '$voucher_serial_no' and part_full_ind = 'K' ")->getResultArray();



                    foreach($vchdtl_qry as $vchdtl_row) {

                    

                    $clerk_name = getAssociateName($vchdtl_row['sub_ac_code']) ;

                    $pan_no_k = getAssociatePan($vchdtl_row['sub_ac_code']) ;

                    $j++ ;

                

                    $td_array = array('serial_no'               => '',

                                        'branch_code'           => $branch_code,

                                        'pay_rcpt_ind'          => 'P',

                                        'ref_ledger_serial_no'  => $ledger_serial_no,

                                        'fin_year'              => $fin_year,

                                        'daybook_code'          => $daybook_code,

                                        'doc_no'                => $doc_no,

                                        'doc_date'              => $doc_date,

                                        'instrument_no'         => NULL,

                                        'instrument_dt'         => NULL,

                                        'bank_name'             => NULL,

                                        'dr_cr_ind'             => 'C',

                                        'payee_payer_type'      => 'K',

                                        'payee_payer_code'      => $vchdtl_row['sub_ac_code'],

                                        'payee_payer_name'      => $clerk_name,

                                        'pan_no'                => $pan_no_k,

                                        'gross_amount'          => $total_clerk_fee_amount, 

                                        'tax_code'              => 'T001', 

                                        'tax_amount'            => $clerk_tax_amount,

                                        'net_amount'            => ($total_clerk_fee_amount - $clerk_tax_amount),

                                        'tds_deposit_ind'       => 'N'

                                        );

                    $td_header = $tdsCertificateObj->insert($td_array);

                    }

            

                }

            

            

                //--- TDS Certificate (Peon)

                if ($peon_tax_amount > 0) {

                    $vchdtl_qry = $this->db->query("select sub_ac_code from voucher_detail where ref_voucher_serial_no = '$voucher_serial_no' and part_full_ind = 'P' ")->getResultArray(); 

                    foreach($vchdtl_qry as $vchdtl_row) {

                        $peon_name = getAssociateName($vchdtl_row['sub_ac_code']);

                        $pan_no_p  = getAssociatePan($vchdtl_row['sub_ac_code']);

                        $j++ ;

                    

                        $td_array = array('serial_no'             => '',

                                            'branch_code'           => $branch_code,

                                            'pay_rcpt_ind'          => 'P',

                                            'ref_ledger_serial_no'  => $ledger_serial_no,

                                            'fin_year'              => $fin_year,

                                            'daybook_code'          => $daybook_code,

                                            'doc_no'                => $doc_no,

                                            'doc_date'              => $doc_date,

                                            'instrument_no'         => NULL,

                                            'instrument_dt'         => NULL,

                                            'bank_name'             => NULL,

                                            'dr_cr_ind'             => 'C',

                                            'payee_payer_type'      => 'P',

                                            'payee_payer_code'      => $vchdtl_row['sub_ac_code'],

                                            'payee_payer_name'      => $peon_name,//getAssociateName($my_row1['sub_ac_code'],$link),

                                            'pan_no'                => $pan_no_p,

                                            'gross_amount'          => $total_peon_fee_amount, //($clerk_fee_payable +  + $clerk_tax_amount ),

                                            'tax_code'              => 'T001', // 'tax_code' => NULL, (modified on 29/12/2009 by PC)

                                            'tax_amount'            => $peon_tax_amount,

                                            'net_amount'            => ($total_peon_fee_amount - $peon_tax_amount), //$peon_fee_payable,

                                            'tds_deposit_ind'       => 'N'

                                            );

                        $td_header = $tdsCertificateObj->insert($td_array);

                    }

            

                }

                

                //--- Counsel Memo Header

                $memhdr_sql = "update counsel_memo_header set counsel_fee_passed = counsel_fee_jv, clerk_fee_passed = clerk_fee_jv, peon_fee_passed = peon_fee_jv, service_tax_fee_passed = service_tax_fee_jv, counsel_fee_payable = counsel_fee_jv, clerk_fee_payable = clerk_fee_jv, peon_fee_payable = peon_fee_jv, service_tax_fee_payable = service_tax_fee_jv, status_code = 'C', ref_ledger_serial_no = '$ledger_serial_no' where ref_voucher_serial_no = '$voucher_serial_no' " ;

                $memhdr_qry = $this->db->query($memhdr_sql);

                

                //--- Voucher Header

                $vchhdr_sql = "update voucher_header set status_code = 'C', ref_ledger_serial_no = '$ledger_serial_no', passed_by = '$global_userid', passed_on = '$global_sysdate' where serial_no = '$voucher_serial_no' " ;

                $vchhdr_qry = $this->db->query($vchhdr_sql);

            

                //--- Ledger Posting (for Memo JV)

                $this->ledger_posting($ledger_serial_no);



                if($user_option == 'Add' || $user_option == 'Edit') { 

                    echo $msg;echo $cnslpvmsg;echo $clrkpvmsg;

                } else if($user_option == 'Approve') {

                    echo $jvmsg;echo $cnslpvmsg;echo $clrkpvmsg;

                } die;

            } else if($user_option == 'Voucher') {

                $voucher_serial_no = isset($_REQUEST['voucher_serial_no'])?$_REQUEST['voucher_serial_no']:'';



                $print = true; $response = $this->common_print_expenses($voucher_serial_no); // Surajit: window.open('rep_fin_voucher_receipts_made_client.php?serial_no=$serial_no');



                if(!is_object($response)) {

                    return view("pages/Finance/Journals/counsel_memo_JV", ['print' => $print, "data" => $data, "displayId" => $displayId, 'params' => $response['params'], 'user_option' => $user_option, 'serial_no' => $voucher_serial_no]);

                } else return $response;  

                

            } else if($user_option == 'Print') {

                $voucher_print = true;

                $params['voucher_serial_no'] = $voucher_serial_no = isset($_REQUEST['voucher_serial_no'])?$_REQUEST['voucher_serial_no']:'';

                $params['voucher_type'] = isset($_REQUEST['voucher_type'])?$_REQUEST['voucher_type']:'' ;



                $params['vchhdr_qry'] = $vchhdr_qry = $this->db->query("select * from voucher_header where serial_no = '$voucher_serial_no' ")->getRowArray();

                $params['voucher_serial_date']  = date_conv($vchhdr_qry['entry_date']);

                $params['daybook_code']         = $vchhdr_qry['daybook_code']; 

                $params['payee_payer_code']     = $vchhdr_qry['payee_payer_code']; 

                $params['payee_payer_name']     = $vchhdr_qry['payee_payer_name']; 

                $params['remarks']              = $vchhdr_qry['remarks']; 

                $params['hdr_gross_amount']     = $vchhdr_qry['gross_amount']; 

                $params['hdr_tax_amount']       = $vchhdr_qry['tax_amount']; 

                $params['hdr_net_amount']       = $vchhdr_qry['net_amount'];

                $params['cnsl_fee_backlog']     = $vchhdr_qry['backlog_counsel_fee']; 

                $params['clerk_fee_backlog']    = $vchhdr_qry['backlog_clerk_fee']; 

                $params['peon_fee_backlog']     = $vchhdr_qry['backlog_peon_fee']; 



                $params['fin_year'] = isset($_REQUEST['fin_year'])?$_REQUEST['fin_year']:$global_curr_finyear ;

                $params['branch_qry'] = $this->db->query(session()->branch_selection_stmt)->getResultArray();

                

                $params['tdsact_qry'] = $tdsact_qry = $this->db->query("select key_value from control_keycodes where key_code = '016' ")->getRowArray();

                $params['tdsact_code'] = $tdsact_code = $tdsact_qry['key_value'] ;

                

                $params['ktdsact_qry'] = $ktdsact_qry = $this->db->query("select key_value from control_keycodes where key_code = '030' ")->getRowArray();

                $params['ktdsact_code']       = $ktdsact_qry['key_value'] ;

                

                $params['cnsact_qry'] = $cnsact_qry = $this->db->query("select key_value from control_keycodes where key_code = '007' ")->getRowArray();

                $params['cnsact_code'] = $cnsact_code = $cnsact_qry['key_value'] ;

                 

                $params['voucher_date']      = $global_dmydate ;

                $params['current_date']      = $global_dmydate ;

                $params['finyr_start_date']  = $global_curr_finyr_fdmydate ;  

                $params['finyr_end_date']    = $global_curr_finyr_ldmydate ;  

              

                $params['vchhdr_qry']          = $this->db->query("select * from voucher_header where serial_no = '$voucher_serial_no' ")->getRowArray();

                $params['branch_code'] = $branch_code = $vchhdr_qry['branch_code'] ;

                $params['branch_name']         = getBranchName($branch_code) ;

                $params['voucher_serial_date'] = date_conv($vchhdr_qry['entry_date']) ;

                $params['counsel_code'] = $counsel_code = $vchhdr_qry['payee_payer_code'] ;

                $params['counsel_name']        = $vchhdr_qry['payee_payer_name'] ;

                $params['basic_amount']        = $vchhdr_qry['basic_amount'] ;

                $params['service_tax_amount']  = $vchhdr_qry['service_tax_amount'] ;

                $params['gross_amount']        = $vchhdr_qry['gross_amount'] ;

                $params['counsel_fee_blog'] = $counsel_fee_blog = $vchhdr_qry['backlog_counsel_fee'] ;

                $params['clerk_fee_blog'] = $clerk_fee_blog = $vchhdr_qry['backlog_clerk_fee'] ;

                $params['peon_fee_blog'] = $peon_fee_blog = $vchhdr_qry['backlog_peon_fee'] ;

                $params['hdr_user']            = strtoupper($vchhdr_qry['prepared_by']) ;  

              

                $params['branch_sql'] = $branch_sql = $this->db->query("select * from branch_master where branch_code = '$branch_code' ")->getRowArray();

                $params['branch_addr1'] = $branch_sql['address_line_1'].', '.$branch_sql['city'].' - '.$branch_sql['pin_code'] ;

                $params['branch_addr2'] = 'TEL : '.$branch_sql['phone_no'] ;

                $params['branch_addr3'] = 'FAX : '.$branch_sql['fax_no'] ;

                $params['branch_addr4'] = 'E-Mail : '.$branch_sql['email_id'] ;



                $params['vchdtl_qry'] = $vchdtl_qry = $this->db->query("select * from voucher_detail where ref_voucher_serial_no = '$voucher_serial_no' order by dr_cr_ind desc")->getResultArray();

                $params['vchdtl_cnt'] = count($vchdtl_qry);

               

                $params['my_qry1'] = $my_qry1 = $this->db->query("select sum(counsel_fee_jv) cnsl_fee, sum(clerk_fee_jv) clrk_fee, sum(service_tax_fee_jv) svtax_fee from counsel_memo_header where ref_voucher_serial_no = '$voucher_serial_no' ")->getRowArray();

                $params['cnsl_fee_current']     = $my_qry1['cnsl_fee'] ;

                $params['clrk_fee_current']     = $my_qry1['clrk_fee'] ;

                $params['serv_tax_fee_current'] = $my_qry1['svtax_fee'] ;

              

                $params['my_qry2'] = $my_qry2 = $this->db->query("select sum(gross_amount) tax_amt from voucher_detail where ref_voucher_serial_no = '$voucher_serial_no' and main_ac_code = '3999' ")->getRowArray();

                $params['tax_amt_current'] = $my_qry2['tax_amt'] ;

                

                $params['my_qry_clrk'] = $my_qry_clrk = $this->db->query("select sum(gross_amount) tax_amt from voucher_detail where ref_voucher_serial_no = '$voucher_serial_no' and main_ac_code = '4999' ")->getRowArray();

                $params['tax_amt_clerk'] = $my_qry_clrk['tax_amt'] ;

              

                $params['my_qry_peon'] = $my_qry_peon = $this->db->query("select sum(gross_amount) tax_amt from voucher_detail where ref_voucher_serial_no = '$voucher_serial_no' and main_ac_code = '5999' ")->getRowArray();

                $params['tax_amt_peon'] = $my_qry_peon['tax_amt'] ;

              

                $params['vchtot_qry'] = $vchtot_qry = $this->db->query("select sum(gross_amount) totamt from voucher_detail where ref_voucher_serial_no = '$voucher_serial_no' and dr_cr_ind = 'C' and main_ac_code = '$cnsact_code' and sub_ac_code = '$counsel_code' ")->getRowArray();

                $params['counsel_fee_payable'] = $counsel_fee_payable = $vchtot_qry['totamt'];  

                $params['vchtot_qry']          = $this->db->query("select sum(gross_amount) totamt from voucher_detail where ref_voucher_serial_no = '$voucher_serial_no' and dr_cr_ind = 'C' and main_ac_code = '$cnsact_code' and sub_ac_code != '$counsel_code' and narration LIKE '%PAYABLE CLERK%' ")->getRowArray();

                $params['clerk_fee_payable'] = $clerk_fee_payable = $vchtot_qry['totamt'];  

                $params['vchtot_qry']          = $this->db->query("select sum(gross_amount) totamt from voucher_detail where ref_voucher_serial_no = '$voucher_serial_no' and dr_cr_ind = 'C' and main_ac_code = '4999' ")->getRowArray();

                $params['clerk_tax_amount'] = $clerk_tax_amount = $vchtot_qry['totamt']; 

                $params['vchtot_qry']          = $this->db->query("select sum(gross_amount) totamt from voucher_detail where ref_voucher_serial_no = '$voucher_serial_no' and dr_cr_ind = 'C' and main_ac_code = '$cnsact_code' and sub_ac_code != '$counsel_code' and narration LIKE '%PAYABLE PEON%' ")->getRowArray();

                $params['peon_fee_payable'] = $peon_fee_payable = $vchtot_qry['totamt'];  

                $params['vchtot_qry']          = $this->db->query("select sum(gross_amount) totamt from voucher_detail where ref_voucher_serial_no = '$voucher_serial_no' and dr_cr_ind = 'C' and main_ac_code = '$tdsact_code' ")->getRowArray();

                $params['tax_amount'] = $tax_amount = $vchtot_qry['totamt']; 

                $params['vchtot_qry']          = $this->db->query("select sum(gross_amount) totamt from voucher_detail where ref_voucher_serial_no = '$voucher_serial_no' and dr_cr_ind = 'C' and main_ac_code = '4999' ")->getRowArray();

                $params['clerk_tax_amount']    = $vchtot_qry['totamt']; 

                $params['vchtot_qry']          = $this->db->query("select sum(gross_amount) totamt from voucher_detail where ref_voucher_serial_no = '$voucher_serial_no' and dr_cr_ind = 'D' and main_ac_code = '4999' ")->getRowArray();

                $params['counsel_tot_amt']     = $vchtot_qry['totamt'];

                $params['vchtot_qry']          = $this->db->query("select sum(gross_amount) totamt from voucher_detail where ref_voucher_serial_no = '$voucher_serial_no' and dr_cr_ind = 'C' and main_ac_code = '5999' ")->getRowArray();

                $params['peon_tax_amount'] = $peon_tax_amount = $vchtot_qry['totamt']; 

              

                $params['counsel_fee_curr'] = $counsel_fee_curr = ($counsel_fee_payable + $counsel_fee_blog) + $tax_amount ;  

                $params['clerk_fee_curr'] = $clerk_fee_curr = $clerk_fee_payable + $clerk_tax_amount ;

                $params['counsel_fee_total'] = $counsel_fee_curr + $counsel_fee_blog ;  

                $params['clerk_fee_total'] = $clerk_fee_curr + $clerk_fee_blog ; 

                $params['peon_fee_curr'] = $peon_fee_curr = $peon_fee_payable + $peon_tax_amount ;

                $params['peon_fee_total'] = $peon_fee_curr + $peon_fee_blog ; 

              

                return view("pages/Finance/Journals/counsel_memo_JV", ['voucher_print' => true, "data" => $data, "displayId" => $displayId, 'params' => $params, 'user_option' => $user_option, 'serial_no' => $voucher_serial_no]);

              

            }        

        }



        $params = [

            'voucher_serial_no' => isset($voucher_serial_no) ? $voucher_serial_no : '',

            'global_sysdate' => $global_sysdate,

            'global_curr_finyr_fymddate' => $global_curr_finyr_fymddate,

            'global_curr_finyr_lymddate' => $global_curr_finyr_lymddate,

            'global_curr_finyear' => isset($global_curr_finyear) ? $global_curr_finyear : '',

            'global_userid' => isset($global_userid) ? $global_userid : '',

            'fin_year' => isset($fin_year) ? $fin_year : '',

            'voucher_serial_date ' => isset($voucher_serial_date) ? $voucher_serial_date : '' ,

            'global_dmydate' =>  isset($global_dmydate) ? $global_dmydate : '',

            'counsel_fee' =>  isset($counsel_fee) ? $counsel_fee : 0,

            'clerk_fee' =>  isset($clerk_fee) ? $clerk_fee : 0,

            'voucher_serial_date' =>  isset($voucher_serial_date) ? $voucher_serial_date : '',

            'finyr_start_date' =>  isset($finyr_start_date) ? $finyr_start_date : '',

            'finyr_end_date' =>  isset($finyr_end_date) ? $finyr_end_date : '',

            'service_tax_fee' =>  isset($service_tax_fee) ? $service_tax_fee : 0,

            'peon_fee' =>  isset($peon_fee) ? $peon_fee : 0,

            'counsel_code' =>  isset($counsel_code) ? $counsel_code : '',

            'total_fee' =>  isset($total_fee ) ? $total_fee : 0,

            'counsel_name' =>  isset($counsel_name ) ? $counsel_name : '',

            'counsel_fee_blog' =>  isset($counsel_fee_blog ) ? $counsel_fee_blog : 0,

            'clerk_fee_payable' =>  isset($clerk_fee_payable ) ? $clerk_fee_payable : 0,

            'total_row_count' =>  isset($total_row_count ) ? $total_row_count : 0,

            'clerk_fee_curr' =>  isset($clerk_fee_curr ) ? $clerk_fee_curr : 0,

            'tax_amount' =>  isset($tax_amount ) ? $tax_amount : 0,

            'pan_no_cnsl' =>  isset($pan_no_cnsl ) ? $pan_no_cnsl : '',

            'clerk_fee_blog' =>  isset($clerk_fee_blog ) ? $clerk_fee_blog : 0,

            'clerk_tax_amount' =>  isset($clerk_tax_amount ) ? $clerk_tax_amount : 0,

            'pan_no_k' =>  isset($pan_no_k ) ? $pan_no_k : '',

            'peon_fee_curr' =>  isset($peon_fee_curr ) ? $peon_fee_curr : 0,

            'peon_tax_amount' =>  isset($peon_tax_amount ) ? $peon_tax_amount : 0,

            'peon_fee_blog' =>  isset($peon_fee_blog ) ? $peon_fee_blog : 0,

            'peon_fee_payable' =>  isset($peon_fee_payable ) ? $peon_fee_payable : 0,

            'voucher_date' =>  isset($voucher_date ) ? $voucher_date : '',

        ];



        return view("pages/Finance/Journals/counsel_memo_JV", compact('params', 'data', 'user_option', 'selemode', 'displayId', 'memo_qry', 'vchdtl_cnt', 'vchdtl_qry', 'memo_cnt', 'redv', 'disv', 'disb_proc', 'disb_rese', 'disb_conf', 'redk', 'disk'));

    }



    /*********************************************************************************************/

    /***************************** Finance [Reports] ***********************************/

    /*********************************************************************************************/

    

     public function daybook() {



        $requested_url = session()->requested_end_menu_url;

        $output_type = isset($_REQUEST['output_type']) ? $_REQUEST['output_type'] : '';

        $showActionBtns = false;



        if($this->request->getMethod() == "post") {

            if($output_type == 'Report' || $output_type == 'Pdf' || $output_type == 'Excel') { 



                $showActionBtns = true;

                $date_from     = $_REQUEST['date_from'] ; $date_from = date_conv($date_from,'-');

                $date_to       = $_REQUEST['date_to'] ;   $date_to   = date_conv($date_to,'-');

                $branch_code   = $_REQUEST['branch_code'] ;

                $fin_year      = $_REQUEST['fin_year'] ;

                $daybook_code  = $_REQUEST['daybook_code'] ;

                $daybook_desc  = $_REQUEST['daybook_desc'] ;

                $report_desc   = 'Daybook';



                $branch_qry    = $this->db->query("select branch_name from branch_master where branch_code = '$branch_code' ")->getRowArray() ;

                $branch_name   = $branch_qry['branch_name'] ;

                

                $ac_qry        = $this->db->query("select ifnull(main_ac_code,'') main_ac_code,ifnull(sub_ac_code,'') sub_ac_code from daybook_master where daybook_code = '$daybook_code' ")->getRowArray() ;

                $main_ac_code  = $ac_qry['main_ac_code'];

                $sub_ac_code   = $ac_qry['sub_ac_code'];

                //-------------------------------------------------------------

                $ldg_stmt = "select a.*, b.* from ledger_trans_hdr a, ledger_trans_dtl b where a.fin_year = '$fin_year' 

                        and a.doc_date >= '$date_from' and a.doc_date <= '$date_to' and a.doc_type in ('PV','RV','JV') and a.status_code = 'C'

                        and a.serial_no = b.ref_ledger_serial_no and ifnull(b.main_ac_code,'') = '$main_ac_code' and ifnull(b.sub_ac_code,'') = '$sub_ac_code'            

                        order by a.doc_date,a.doc_no";

                $ldg_qry  = $this->db->query($ldg_stmt)->getResultArray() ;

                $ldg_cnt  = count($ldg_qry);

                

                // daybook opening balance

                

                $start_date_ymd     = $date_from;  

                $end_date_ymd       = $date_to;

                $trans_yyyymm       = substr($start_date_ymd,0,4).substr($start_date_ymd,5,2);

                

                //----- Fin year

                $finyr_dat      = $this->db->query("select fin_year from params where '$start_date_ymd' between start_date and end_date")->getRowArray();

                $financial_year = $finyr_dat['fin_year'];

                

                //----- Creation of Temporary table 

                $logdt_qry      = $this->db->query("select current_date, current_time, date_format(current_date,'%d-%m-%Y') current_dmydate ")->getResultArray()[0];

                $user_id        = session()->userId ;

                $curr_time      = $logdt_qry['current_time'];

                $curr_date      = $logdt_qry['current_dmydate'];

                $curr_day       = substr($curr_date,0,2) ;

                $curr_month     = substr($curr_date,3,2) ; 

                $curr_year      = substr($curr_date,6,4) ;

                $temp_id        = $user_id."_".$curr_year.$curr_month.$curr_day.str_replace(':','',$curr_time);



                $mydbopetbl = $temp_id.'_daybook_query_opbal';

                $this->temp_db->query("drop table IF EXISTS $mydbopetbl");

                $this->temp_db->query("create table $mydbopetbl(branch_code varchar(4),daybook_type varchar(2),daybook_code varchar(2),main_ac_code varchar(6),sub_ac_code varchar(4),trans_yyyymm varchar(6),trans_date date, rowdesc varchar(50), opbal double(12,2),debit double(12,2),credit double(12,2),clbal double(12,2),ind varchar(1))") ;

                

                $mydbqrytbl = $temp_id.'_daybook_query_detail';

                $this->temp_db->query("drop table IF EXISTS $mydbqrytbl");

                $this->temp_db->query("create table $mydbqrytbl(branch_code varchar(4),daybook_type varchar(2),daybook_code varchar(2),main_ac_code varchar(6),sub_ac_code varchar(4),trans_yyyymm varchar(6),trans_date date, rowdesc varchar(50), opbal double(12,2),debit double(12,2),credit double(12,2),clbal double(12,2),ind varchar(1))") ;

                

                $query1 = $this->db->query("select a.branch_code,a.daybook_type,a.daybook_code,a.main_ac_code,a.sub_ac_code,'$trans_yyyymm' as yearmonth,'$start_date_ymd' as ymd1,'$start_date_ymd' as ymd2,(sum(ifnull(c.amount_cr,0.00)) - sum(ifnull(c.amount_dr,0.00))) as amount,0.00 as amt1,0.00 as amt2,0.00 as amt3,'A'

                        from daybook_master a

                        left outer join daybook_balance c 

                        on c.daybook_code = a.daybook_code 

                        and c.fin_year = '$financial_year' 

                        and c.record_code = '01' 

                        where a.branch_code like '$branch_code'

                        and a.daybook_code = '$daybook_code'

                        group by a.daybook_type,a.daybook_code,'$trans_yyyymm',$start_date_ymd ")->getRowArray();

            

                $daybook_branch_code  = $query1['branch_code'];

                $daybook_daybook_type = $query1['daybook_type'];

                $daybook_daybook_code = $query1['daybook_code'];

                $daybook_main_ac_code = $query1['main_ac_code'];

                $daybook_sub_ac_code  = $query1['sub_ac_code'];

                $daybook_yearmonth    = $query1['yearmonth'];

                $daybook_ymd1   = $query1['ymd1'];

                $daybook_ymd2   = $query1['ymd2'];

                $daybook_amount = $query1['amount'];

                $daybook_amt1   = $query1['amt1'];

                $daybook_amt2   = $query1['amt2'];

                $daybook_amt3   = $query1['amt3'];

                $daybook_A      = $query1['A'];

                

                $opbal_sql_1 = "insert into $mydbopetbl (branch_code,daybook_type,daybook_code,main_ac_code,sub_ac_code,trans_yyyymm,trans_date,rowdesc,opbal,debit,credit,clbal,ind)

                                values ('$daybook_branch_code','$daybook_daybook_type', '$daybook_daybook_code', '$daybook_main_ac_code', '$daybook_sub_ac_code', 

                                '$daybook_yearmonth', '$daybook_ymd1', '$daybook_ymd2', '$daybook_amount', '$daybook_amt1', '$daybook_amt2', '$daybook_amt3', '$daybook_A' )";

                $this->temp_db->query($opbal_sql_1) ;  

                

                $query2 = $this->db->query("select b.branch_code,c.daybook_type,c.daybook_code,c.main_ac_code,c.sub_ac_code,'$trans_yyyymm' as yearmonth,'$start_date_ymd' as ymd1,'$start_date_ymd' as ymd2,0.00 as amt1,sum(if(b.dr_cr_ind='D',b.gross_amount,0)) as amount1,sum(if(b.dr_cr_ind='C',b.gross_amount,0)) as amount2,0.00 as amt2,'B'

                        from ledger_trans_hdr a, ledger_trans_dtl b, daybook_master c 

                        where a.fin_year = '$financial_year'

                        and a.doc_date < '$start_date_ymd' 

                        and a.status_code = 'C' 

                        and a.serial_no = b.ref_ledger_serial_no

                        and b.main_ac_code = c.main_ac_code

                        and ifnull(b.sub_ac_code, ' ') = ifnull(c.sub_ac_code, ' ') 

                        and c.branch_code like '$branch_code'

                        and c.daybook_code = '$daybook_code'

                    group by c.daybook_type,c.daybook_code,'$trans_yyyymm',$start_date_ymd ")->getRowArray();



                $daybook_branch_code2  = empty(!$query2) ? $query2['branch_code'] : '';

                $daybook_daybook_type2 = empty(!$query2) ? $query2['daybook_type'] : '';

                $daybook_daybook_code2 = empty(!$query2) ? $query2['daybook_code'] : '';

                $daybook_main_ac_code2 = empty(!$query2) ? $query2['main_ac_code'] : '';

                $daybook_sub_ac_code2  = empty(!$query2) ? $query2['sub_ac_code'] : '';

                $daybook_yearmonth2    = empty(!$query2) ? $query2['yearmonth'] : '';

                $daybook2_ymd1         = empty(!$query2) ? $query2['ymd1'] : '';

                $daybook2_ymd2         = empty(!$query2) ? $query2['ymd2'] : '';

                $daybook2_amt1         = empty(!$query2) ? $query2['amt1'] : '';

                $daybook2_amount1      = empty(!$query2) ? $query2['amount1'] : '';

                $daybook2_amount2      = empty(!$query2) ? $query2['amount2'] : '';

                $daybook2_amt2         = empty(!$query2) ? $query2['amt2'] : '';

                $daybook_B             = empty(!$query2) ? $query2['B'] : '';



                $opbal_sql_2 = "insert into $mydbopetbl (branch_code,daybook_type,daybook_code,main_ac_code,sub_ac_code,trans_yyyymm,trans_date,rowdesc,opbal,debit,credit,clbal,ind)

                            values ('$daybook_branch_code2','$daybook_daybook_type2', '$daybook_daybook_code2', '$daybook_main_ac_code2', '$daybook_sub_ac_code2', 

                            '$daybook_yearmonth2', '$daybook2_ymd1', '$daybook2_ymd2', '$daybook2_amt1', '$daybook2_amount1', '$daybook2_amount2', '$daybook2_amt2', '$daybook_B' ) " ;

                $this->temp_db->query($opbal_sql_2) ; 

                //echo '<pre>';print_r($query3);die;



                $opbal_sql_3 = "insert into $mydbqrytbl (branch_code,daybook_type,daybook_code,main_ac_code,sub_ac_code,trans_yyyymm,trans_date,rowdesc,opbal,debit,credit,clbal,ind)

                            select a.branch_code,a.daybook_type,a.daybook_code,a.main_ac_code,a.sub_ac_code,a.trans_yyyymm,a.trans_date,a.rowdesc,sum(ifnull(a.opbal,0)+ifnull(a.debit,0)-ifnull(a.credit,0)),0.00,0.00,0.00,'A'

                            from $mydbopetbl a group by a.daybook_type,a.daybook_code,a.trans_yyyymm" ;

                $this->temp_db->query($opbal_sql_3) ;  

                

                $opbal_sql_4 = "select sum(opbal+debit-credit) opngbal from $mydbqrytbl ";

                $opbal_qry_4 = $this->temp_db->query($opbal_sql_4)->getRowArray() ;  

                $cdopbal     = $opbal_qry_4['opngbal'] ;

            

                if(empty($ldg_qry)) {

                    session()->setFlashdata('message', 'No Records Found !!');

                    return redirect()->to($this->requested_url());

                }



                $params = [

                    "report_desc" => $report_desc,

                    "branch_name" => $branch_name,

                    "fin_year" => $fin_year,

                    "date_from" => $date_from,

                    "date_to" => $date_to,

                    "daybook_desc" => $daybook_desc,

                    "cdopbal" => $cdopbal,

                    "requested_url" => $requested_url,

                ];



                if ($output_type == 'Pdf') {

                    $report_type = 'Pdf'; $dompdf = new \Dompdf\Dompdf(); 

                    $reportHTML = view("pages/Finance/daybook", compact("ldg_qry", "params", "ldg_cnt", 'report_type', 'showActionBtns'));

                    $dompdf->loadHtml($reportHTML);

                    $dompdf->setPaper('A4', 'landscape'); // portrait

                    $dompdf->render(); 

                    $dompdf->stream('abc.pdf', array('Attachment'=>0)); exit;

                } else if($output_type == 'Excel') {

                    $showActionBtns = true;

                    $fileName = 'Finance-Daybook-'.date('d-m-Y').'.xlsx';  

                    $spreadsheet = new Spreadsheet();

                    $sheet = $spreadsheet->getActiveSheet();

                    $rows = 1;



                    $headings = ['Doc Date', 'Doc#', 'Instr#', 'Instr Dt', 'Narration', 'Receipt', 'Payment'];

                    $column = 'A'; $rows++;



                    foreach ($headings as $heading) {

                        $cell = $column . $rows;

                        $sheet->setCellValue($cell, $heading); // Set the cell value



                        // Apply formatting

                        $style = $sheet->getStyle($cell);

                        $style->getFont()->setBold(true);

                        $style->getAlignment()->setHorizontal(Alignment::HORIZONTAL_CENTER);

                        $style->getFill()->setFillType(Fill::FILL_SOLID)->getStartColor()->setRGB('c8d5ef');

                        $style->getBorders()->getAllBorders()->setBorderStyle(\PhpOffice\PhpSpreadsheet\Style\Border::BORDER_THIN); // Add borders

                        ++$column; // Move to the next column

                    } $rows++;



                    $gdopbal = $cdopbal ;

                    $gtdramt = 0; 

                    $gtcramt = 0; 

                    $rowcnt  = 1 ;

                    $report_row = isset($ldg_qry[$rowcnt-1]) ? $ldg_qry[$rowcnt-1] : '' ;   

                    $report_cnt = $ldg_cnt ;



                    while ($rowcnt <= $report_cnt) {

                        $dtdramt = 0; 

                        $dtcramt = 0; 

                        $pdocdt = substr($report_row['doc_date'],0,4).substr($report_row['doc_date'],5,2).substr($report_row['doc_date'],8,2) ;

                        $opbalance_ind = 'Y';

                        while ($pdocdt == (substr($report_row['doc_date'],0,4).substr($report_row['doc_date'],5,2).substr($report_row['doc_date'],8,2)) && $rowcnt <= $report_cnt) {

                            if($opbalance_ind == 'Y') {

                                $sheet->setCellValue('E' . $rows, 'Opening Balance');

                                $sheet->setCellValue('F' . $rows, ($cdopbal > 0.00) ? number_format(abs($cdopbal), 2, '.', '') : '');

                                $sheet->setCellValue('G' . $rows, ($cdopbal < 0.00) ? number_format(abs($cdopbal), 2, '.', '') : '');

                                $style = $sheet->getStyle('A' . $rows . ':G' . $rows);

                                $style->getFont()->setBold(true);

                                $style->getBorders()->getAllBorders()->setBorderStyle(\PhpOffice\PhpSpreadsheet\Style\Border::BORDER_THIN);

                            }$rows++;



                            $sheet->setCellValue('A' . $rows, date_conv($report_row['doc_date'],'-'));

                            $sheet->setCellValue('B' . $rows, $report_row['doc_no']);

                            $sheet->setCellValue('C' . $rows, $report_row['instrument_no']);

                            $sheet->setCellValue('D' . $rows, ($report_row['doc_date'] != '' && $report_row['doc_date'] != '0000-00-00') ? date_conv($report_row['doc_date']) : '' );

                            $sheet->setCellValue('E' . $rows, strtoupper($report_row['narration']));

                            $sheet->setCellValue('F' . $rows, ($report_row['dr_cr_ind'] == 'D' && $report_row['net_amount'] > 0) ? $report_row['net_amount'] : '');

                            $sheet->setCellValue('G' . $rows, ($report_row['dr_cr_ind'] == 'C' && $report_row['net_amount'] > 0) ? $report_row['net_amount'] : '');

                            

                            if($report_row['dr_cr_ind'] == 'D')

                                $dtdramt = $dtdramt + $report_row['net_amount'] ;                   

                            else

                                $dtcramt = $dtcramt + $report_row['net_amount'] ;                   

                            

                            $report_row = ($rowcnt < $report_cnt) ? $ldg_qry[$rowcnt] : $report_row;

                            $rowcnt = $rowcnt + 1 ;



                            $style = $sheet->getStyle('A' . $rows . ':G' . $rows);

                            $style->getBorders()->getAllBorders()->setBorderStyle(\PhpOffice\PhpSpreadsheet\Style\Border::BORDER_THIN); 

                            $rows++;

                        }

                        $cdclbal = $cdopbal + $dtdramt - $dtcramt ;

                        $gtdramt = $gtdramt + $dtdramt ;                   

                        $gtcramt = $gtcramt + $dtcramt ;

                        $cdopbal = $cdclbal ;



                        $sheet->setCellValue('E' . $rows, 'Total');

                        $sheet->setCellValue('F' . $rows, ($dtdramt > 0) ? number_format($dtdramt, 2, '.', '') : '');

                        $sheet->setCellValue('G' . $rows, ($dtcramt > 0) ? number_format($dtcramt, 2, '.', '') : '');

                        $style = $sheet->getStyle('A' . $rows . ':G' . $rows);

                        $style->getFont()->setBold(true);

                        $style->getBorders()->getAllBorders()->setBorderStyle(\PhpOffice\PhpSpreadsheet\Style\Border::BORDER_THIN); 

                        $rows++;



                        $sheet->setCellValue('E' . $rows, 'Closing Balance');

                        $sheet->setCellValue('F' . $rows, ($cdclbal > 0) ? number_format($cdclbal, 2, '.', '') : '');

                        $sheet->setCellValue('G' . $rows, ($cdclbal < 0) ? number_format($cdclbal, 2, '.', '') : '');

                        $style = $sheet->getStyle('A' . $rows . ':G' . $rows);

                        $style->getFont()->setBold(true);

                        $style->getBorders()->getBottom()->setBorderStyle(\PhpOffice\PhpSpreadsheet\Style\Border::BORDER_MEDIUM); // Set to BORDER_MEDIUM for bold bottom border

                        $style->getBorders()->getLeft()->setBorderStyle(\PhpOffice\PhpSpreadsheet\Style\Border::BORDER_THIN); // Set to BORDER_THIN for other borders

                        $style->getBorders()->getRight()->setBorderStyle(\PhpOffice\PhpSpreadsheet\Style\Border::BORDER_THIN);

                        $style->getBorders()->getTop()->setBorderStyle(\PhpOffice\PhpSpreadsheet\Style\Border::BORDER_THIN); 

                        $rows++;

                    }

                    $gdclbal = $gdopbal + $gtdramt - $gtcramt ;

                        $sheet->setCellValue('E' . $rows, '*** PERIOD CONTROL ***');

                        $style = $sheet->getStyle('A' . $rows . ':G' . $rows);

                        $style->getAlignment()->setHorizontal(Alignment::HORIZONTAL_CENTER);

                        $style->getBorders()->getAllBorders()->setBorderStyle(\PhpOffice\PhpSpreadsheet\Style\Border::BORDER_THIN); 

                        $style->getFill()->setFillType(Fill::FILL_SOLID)->getStartColor()->setRGB('ffe93a');

                        $style->getFont()->setBold(true);

                        $rows++;



                        $sheet->setCellValue('E' . $rows, 'Period Opening Balance');

                        $sheet->setCellValue('F' . $rows, ($gdopbal > 0) ? number_format(abs($gdopbal), 2, '.', '') : '');

                        $sheet->setCellValue('G' . $rows, ($gdopbal < 0) ? number_format(abs($gdopbal), 2, '.', '') : '');

                        $style = $sheet->getStyle('A' . $rows . ':G' . $rows);

                        $style->getFont()->setBold(true);

                        $style->getAlignment()->setHorizontal(Alignment::HORIZONTAL_CENTER);

                        $style->getBorders()->getAllBorders()->setBorderStyle(\PhpOffice\PhpSpreadsheet\Style\Border::BORDER_THIN); 

                        $style->getFill()->setFillType(Fill::FILL_SOLID)->getStartColor()->setRGB('ffe93a');

                        $rows++;



                        $sheet->setCellValue('E' . $rows, 'Period Total');

                        $sheet->setCellValue('F' . $rows, ($gtdramt > 0) ? number_format(abs($gtdramt), 2, '.', '') : '');

                        $sheet->setCellValue('G' . $rows, ($gtcramt > 0) ? number_format(abs($gtcramt), 2, '.', '') : '');

                        $style = $sheet->getStyle('A' . $rows . ':G' . $rows);

                        $style->getFont()->setBold(true);

                        $style->getAlignment()->setHorizontal(Alignment::HORIZONTAL_CENTER);

                        $style->getBorders()->getAllBorders()->setBorderStyle(\PhpOffice\PhpSpreadsheet\Style\Border::BORDER_THIN);

                        $style->getFill()->setFillType(Fill::FILL_SOLID)->getStartColor()->setRGB('ffe93a'); 

                        $rows++;



                        $sheet->setCellValue('E' . $rows, 'Period Closing Balance');

                        $sheet->setCellValue('F' . $rows, ($gdclbal > 0) ? number_format(abs($gdclbal), 2, '.', '') : '');

                        $sheet->setCellValue('G' . $rows, ($gdclbal < 0) ? number_format(abs($gdclbal), 2, '.', '') : '');



                        $style = $sheet->getStyle('A' . $rows . ':G' . $rows);

                        $style->getFont()->setBold(true);

                        $style->getAlignment()->setHorizontal(Alignment::HORIZONTAL_CENTER);

                        $style->getBorders()->getBottom()->setBorderStyle(\PhpOffice\PhpSpreadsheet\Style\Border::BORDER_MEDIUM); 

                        $style->getBorders()->getLeft()->setBorderStyle(\PhpOffice\PhpSpreadsheet\Style\Border::BORDER_THIN); 

                        $style->getBorders()->getRight()->setBorderStyle(\PhpOffice\PhpSpreadsheet\Style\Border::BORDER_THIN);

                        $style->getBorders()->getTop()->setBorderStyle(\PhpOffice\PhpSpreadsheet\Style\Border::BORDER_THIN);  

                        $style->getFill()->setFillType(Fill::FILL_SOLID)->getStartColor()->setRGB('ffe93a');

                        $rows++;



                        $writer = new Xlsx($spreadsheet);

                        $writer->save($fileName);

                        header('Content-Type: application/vnd.ms-excel');

                        header('Content-Disposition: attachment; filename="'.basename($fileName).'"');

                        header('Expires: 0');

                        header('Cache-control: must-revalidate');

                        header('Pragma: public');

                        header('Content-Length:'.filesize($fileName));

                        flush();

                        readfile($fileName); 

                } else return view("pages/Finance/daybook", compact("ldg_qry", "params", "ldg_cnt", 'showActionBtns'));

            } else if($output_type == 'innerReport' || $output_type == 'innerPdf' || $output_type == 'innerExcel'){



                $serial_no = isset($_REQUEST['serial_no'])?$_REQUEST['serial_no']:null;



                $tranhdr_row = $this->db->query("select a.*, b.branch_name from ledger_trans_hdr a, branch_master b where a.serial_no = '$serial_no' and a.branch_code = b.branch_code  ")->getRowArray();

                // echo '<pre>';print_r($tranhdr_row);die;

                $trandtl_qry = $this->db->query("select a.*, b.branch_name from ledger_trans_dtl a, branch_master b

                                                    where a.ref_ledger_serial_no = '$serial_no' 

                                                        and a.branch_code = b.branch_code  ")->getResultArray();

                $trandtl_cnt = count($trandtl_qry) ;

                

                $vchrhdr_row = $this->db->query("select a.prepared_by, a.prepared_on, b.serial_no from voucher_header a, ledger_trans_hdr b where a.ref_ledger_serial_no = '$serial_no' and a.ref_ledger_serial_no = b.serial_no  ")->getResultArray() ;

                

                if(empty($trandtl_qry)) {

                    session()->setFlashdata('message', 'No Records Found !!');

                    return redirect()->to($this->requested_url());

                }



                if ($output_type == 'innerPdf') {

                    $report_type = 'Pdf'; $dompdf = new \Dompdf\Dompdf(); 

                    $reportHTML = view("pages/Finance/daybook", compact("trandtl_qry", "vchrhdr_row", "tranhdr_row", 'showActionBtns', 'requested_url', 'report_type'));

                    $dompdf->loadHtml($reportHTML);

                    $dompdf->setPaper('A4', 'landscape'); // portrait

                    $dompdf->render();

                    $dompdf->stream('abc.pdf', array('Attachment'=>0)); exit;

                } else if ($output_type == 'innerExcel') {

                    $fileName = 'Daybook-'.date('d-m-Y').'.xlsx';  

                    $spreadsheet = new Spreadsheet();

                    $sheet = $spreadsheet->getActiveSheet();



                    // Define the headings

                    $headings = ['Main', 'Sub', 'Matter', 'Client', 'Bill Number', 'Purpose', 'Debit', 'Credit'];

                    // Loop through the headings and set the formatting

                    $column = 'A';

                    foreach ($headings as $heading) {

                        $cell = $column . '1';



                        // Set the cell value

                        $sheet->setCellValue($cell, $heading);



                        // Apply formatting

                        $style = $sheet->getStyle($cell);

                        $style->getFont()->setBold(true);

                        $style->getAlignment()->setHorizontal(Alignment::HORIZONTAL_CENTER);

                        $style->getFill()->setFillType(Fill::FILL_SOLID)->getStartColor()->setRGB('c8d5ef');

                        // Add borders

                        $style->getBorders()->getTop()->setBorderStyle(\PhpOffice\PhpSpreadsheet\Style\Border::BORDER_THIN);

                        $style->getBorders()->getBottom()->setBorderStyle(\PhpOffice\PhpSpreadsheet\Style\Border::BORDER_THIN);

                        $style->getBorders()->getLeft()->setBorderStyle(\PhpOffice\PhpSpreadsheet\Style\Border::BORDER_THIN);

                        $style->getBorders()->getRight()->setBorderStyle(\PhpOffice\PhpSpreadsheet\Style\Border::BORDER_THIN);



                        // Move to the next column

                        ++$column;

                    }

                    $rows = 2;

                    $tdtotal  = 0; 

                    $tctotal  = 0; 

                    $rowcnt     = 1 ;

                    // $report_row = isset($ldg_qry[$rowcnt-1]) ? $ldg_qry[$rowcnt-1] : '' ;  

                    // $report_cnt = $ldg_cnt ;

                    foreach($trandtl_qry as $trandtl_row) {

                        $sheet->setCellValue('A' . $rows, $trandtl_row['main_ac_code']);

                        $sheet->setCellValue('B' . $rows, $trandtl_row['sub_ac_code']);

                        $sheet->setCellValue('C' . $rows, $trandtl_row['matter_code']);

                        $sheet->setCellValue('D' . $rows, $trandtl_row['client_code']);

                        $sheet->setCellValue('E' . $rows, $trandtl_row['bill_no']);

                        $sheet->setCellValue('F' . $rows, $trandtl_row['narration']);

                        $sheet->setCellValue('G' . $rows, ($trandtl_row['dr_cr_ind'] == 'D') ? $trandtl_row['gross_amount'] : '');

                        $sheet->setCellValue('H' . $rows, ($trandtl_row['dr_cr_ind'] == 'C') ? $trandtl_row['gross_amount'] : '');



                        // Apply border to the current row

                        $style = $sheet->getStyle('A' . $rows . ':H' . $rows);

                        $style->getBorders()->getAllBorders()->setBorderStyle(\PhpOffice\PhpSpreadsheet\Style\Border::BORDER_THIN);



                        if($trandtl_row['dr_cr_ind'] == 'D') { $tdtotal = $tdtotal + $trandtl_row['gross_amount'] ; } else { $tctotal = $tctotal + $trandtl_row['gross_amount'] ; }  

                        $rows++;

                    }

                    $sheet->setCellValue('F' . $rows, 'TOTAL');

                    $sheet->setCellValue('G' . $rows, ($tdtotal != 0) ? number_format(abs($tdtotal),2,'.','') : '');

                    $sheet->setCellValue('H' . $rows, ($tctotal != 0) ? number_format(abs($tctotal),2,'.','') : '');



                    // Apply Background Color to the current row

                    $style = $sheet->getStyle('A' . $rows . ':H' . $rows);

                    $style->getFont()->setBold(true);

                    $style->getAlignment()->setHorizontal(Alignment::HORIZONTAL_CENTER);

                    $style->getBorders()->getAllBorders()->setBorderStyle(\PhpOffice\PhpSpreadsheet\Style\Border::BORDER_THIN);

                    $style->getFill()->setFillType(Fill::FILL_SOLID)->getStartColor()->setRGB('ffe93a');



                    $writer = new Xlsx($spreadsheet);

                    $writer->save($fileName);

                    header('Content-Type: application/vnd.ms-excel');

                    header('Content-Disposition: attachment; filename="'.basename($fileName).'"');

                    header('Expires: 0');

                    header('Cache-control: must-revalidate');

                    header('Pragma: public');

                    header('Content-Length:'.filesize($fileName));

                    flush();

                    readfile($fileName); 

                } else return view("pages/Finance/daybook", compact("trandtl_qry", "vchrhdr_row", "tranhdr_row", 'showActionBtns', 'requested_url'));



            }

        } else {



            $data = [];

            $data = branches(session()->userId);

            // $displayId   = ['payee_help_id' => '4402'] ;

            $data['finyr_qry']  = $this->db->query("select fin_year from params order by fin_year desc")->getResultArray(); 

            $data['ason_date'] = date('d-m-Y');

    

            $curr_finyr = session()->financialYear;

            $data['curr_fyrsdt'] = '01-04-'.substr($curr_finyr,0,4);

            $data['daybook_qry'] = $this->db->query("select daybook_type,daybook_code,daybook_desc from daybook_master where daybook_type != 'JB' order by daybook_type desc,daybook_desc")->getResultArray();

            return view("pages/Finance/daybook", compact("data"));

        } 

    }



    public function payment_register() {



        $requested_url = session()->requested_end_menu_url;

        $output_type = isset($_REQUEST['output_type']) ? $_REQUEST['output_type'] : '';

        $showActionBtns = $show_summary_report = false;



        if($this->request->getMethod() == "post") {



            if($output_type == 'Report' || $output_type == 'Pdf' || $output_type == 'Excel') { 

                $showActionBtns = true;



                $form_report_type   = $_REQUEST['report_type'] ;

                $branch_code   = $_REQUEST['branch_code'] ;

                $start_date    = $_REQUEST['start_date'] ;    $start_date_ymd = date_conv($start_date);

                $end_date      = $_REQUEST['end_date'] ;      $end_date_ymd   = date_conv($end_date);

                $payee_type    = $_REQUEST['payee_payer_type'] ;    if(empty($payee_type)) { $payee_type = '%' ; }

                $payee_code    = $_REQUEST['payee_payer_code'] ;    if(empty($payee_code)) { $payee_code = '%' ; }

                $payee_name    = $_REQUEST['payee_payer_name'] ;    if(empty($payee_name)) { $payee_name = '%' ; }

                $payee_name    = $payee_name;

                //-------

                $branch_qry    = $this->db->query("select branch_name from branch_master where branch_code = '$branch_code' ")->getRowArray() ;

                $branch_name   = $branch_qry['branch_name'] ;



                $payreg_sql = $report_desc = $payee_type_name = '';



                switch($form_report_type) {



                    case 'D' :

                        $report_desc   = 'PAYMENT REGISTER';



                        $payreg_sql = "select a.serial_no, a.doc_date, a.doc_no, a.doc_type, a.daybook_code, a.payee_payer_code, a.payee_payer_name, a.gross_amount,a.tax_amount,a.net_amount, b.narration, b.gross_amount paid_amount 

                                    from ledger_trans_hdr a, ledger_trans_dtl b

                                    where a.branch_code = '$branch_code' 

                                    and a.doc_date between '$start_date_ymd' and '$end_date_ymd'

                                    and a.status_code = 'C'

                                    and a.doc_type = 'PV'

                                    and a.ref_doc_type != 'CB'

                                    and a.payee_payer_type like '$payee_type' 

                                    and ifnull(a.payee_payer_code,'%') like '$payee_code'

                                    and a.payee_payer_name like '$payee_name' 

                                    and a.serial_no = b.ref_ledger_serial_no 

                                    and b.dr_cr_ind = 'D'

                                    order by a.payee_payer_name,a.doc_date,a.serial_no" ; 

                        break;

                        

                    case 'S' :

                        $show_summary_report = true;

                        $report_desc   = 'PAYMENT REGISTER - Summary';



                        if ($payee_type == '%' ) { $payee_type_name = 'All' ;} 

                        if ($payee_type == 'E' ) { $payee_type_name = 'Employee' ;}

                        if ($payee_type == 'S' ) { $payee_type_name = 'Supplier' ;} 

                        if ($payee_type == 'C' ) { $payee_type_name = 'Counsel' ;}

                        if ($payee_type == 'A' ) { $payee_type_name = 'Arbitrator' ;} 

                        if ($payee_type == 'T' ) { $payee_type_name = 'Stenographer' ;}

                        if ($payee_type == 'O' ) { $payee_type_name = 'Others' ;} 



                        $payreg_sql = "select a.serial_no, a.doc_date, a.doc_no, a.doc_type, a.daybook_code, a.payee_payer_code, a.payee_payer_name, 

                                    sum(b.gross_amount) paid_amount

                                    from ledger_trans_hdr a, ledger_trans_dtl b

                                    where a.branch_code                     = '$branch_code' 

                                    and a.doc_date                  between '$start_date_ymd' and '$end_date_ymd'

                                    and a.status_code                     = 'C'

                                    and a.doc_type                        = 'PV'

                                    and a.ref_doc_type                   != 'CB'

                                    and a.payee_payer_type             like '$payee_type' 

                                    and ifnull(a.payee_payer_code,'%') like '$payee_code'

                                    and a.payee_payer_name             like '$payee_name' 

                                    and a.serial_no                       = b.ref_ledger_serial_no 

                                    and b.dr_cr_ind                       = 'D'

                                group by a.payee_payer_name order by a.payee_payer_name,a.doc_date,a.serial_no"; 

                        break;

                }

                        

                $payreg_qry  = $this->db->query($payreg_sql)->getResultArray() ;

                $payreg_cnt  = count($payreg_qry) ;

                // echo '<pre>';print_r($payreg_qry);die;



                if(empty($payreg_qry)) {

                    session()->setFlashdata('message', 'No Records Found !!');

                    return redirect()->to($this->requested_url());

                }

                $params = [

                    "requested_url" => $requested_url,

                    "payreg_cnt" => $payreg_cnt,

                    "report_desc" => $report_desc,

                    "branch_name" => $branch_name,

                    "start_date" => $start_date,

                    "end_date" => $end_date,

                    "payee_code" => $payee_code,

                    "payee_name" => $payee_name, 

                    "payee_type_name" => $payee_type_name,

                    "branch_code" => $branch_code,

                    "payee_type" => $payee_type,



                ];

                if ($output_type == 'Pdf') {

                    $report_type = 'Pdf'; $dompdf = new \Dompdf\Dompdf(); 

                    $reportHTML = view("pages/Finance/payment_register", compact("payreg_qry", "params", 'report_type', 'showActionBtns', 'form_report_type'));

                    $dompdf->loadHtml($reportHTML);

                    $dompdf->setPaper('A4', 'landscape'); // portrait

                    $dompdf->render(); 

                    $dompdf->stream('abc.pdf', array('Attachment'=>0)); exit;



                } else if($output_type == 'Excel') {



                    $showActionBtns = true;

                    $spreadsheet = new Spreadsheet();

                    $sheet = $spreadsheet->getActiveSheet();

                    $rows = 1;

                    

                    $fileName = $headings = '';

                    switch($form_report_type) { 

                        case 'D' :



                            $fileName = 'Finance-Payment-Register-Details'.date('d-m-Y').'.xlsx';  

                            $headings = ['Payee Name', 'Doc#', 'DB', 'Payee', 'Narration', 'Gross', 'TDS', 'Net'];

                            break;



                        case 'S' :



                            $fileName = 'Finance-Payment-Register-Summary'.date('d-m-Y').'.xlsx';  

                            $headings = ['Date', 'Amount'];

                            break;

                    }



                    $column = 'A'; $rows++;



                    foreach ($headings as $heading) {

                        $cell = $column . $rows;

                        $sheet->setCellValue($cell, $heading); // Set the cell value



                        // Apply formatting

                        $style = $sheet->getStyle($cell);

                        $style->getFont()->setBold(true);

                        $style->getAlignment()->setHorizontal(Alignment::HORIZONTAL_CENTER);

                        $style->getFill()->setFillType(Fill::FILL_SOLID)->getStartColor()->setRGB('c8d5ef');

                        $style->getBorders()->getAllBorders()->setBorderStyle(\PhpOffice\PhpSpreadsheet\Style\Border::BORDER_THIN); // Add borders

                        ++$column; // Move to the next column

                    } $rows++;



                    $tgramt  = 0; 

                    $ttxamt  = 0; 

                    $tntamt  = 0; 

                    $tosamt  = 0;

                    $rowcnt     = 1 ;

                    $report_row = isset($payreg_qry[$rowcnt-1]) ? $payreg_qry[$rowcnt-1] : '' ;

                    $report_cnt = $params['payreg_cnt'] ;

                    switch($form_report_type) { 

                        case 'D' :

                            while ($rowcnt <= $report_cnt) {

                                $psrlind = 'Y';

                                $pgramt  = $report_row['gross_amount'] ;

                                $ptxamt  = $report_row['tax_amount'] ;

                                $pntamt  = $report_row['net_amount'] ;

                                $pserial = $report_row['serial_no'] ;

                                while($pserial == $report_row['serial_no'] && $rowcnt <= $report_cnt)  {

                                    $sheet->setCellValue('A' . $rows, ($psrlind=='Y') ? date_conv($report_row['doc_date'],'-') : '');

                                    $sheet->setCellValue('B' . $rows, ($psrlind=='Y') ? $report_row['doc_no']  : '');

                                    $sheet->setCellValue('C' . $rows, ($psrlind=='Y') ? $report_row['daybook_code'] : '');

                                    $sheet->setCellValue('D' . $rows, ($psrlind=='Y') ? strtoupper($report_row['payee_payer_name']) : '' );

                                    $sheet->setCellValue('E' . $rows, strtoupper($report_row['narration']));

                                    $sheet->setCellValue('F' . $rows, $report_row['paid_amount']);

                                

                                    $report_row = ($rowcnt < $report_cnt) ? $payreg_qry[$rowcnt] : $report_row;

                                    $rowcnt = $rowcnt + 1 ;



                                    $style = $sheet->getStyle('A' . $rows . ':H' . $rows);

                                    $style->getBorders()->getAllBorders()->setBorderStyle(\PhpOffice\PhpSpreadsheet\Style\Border::BORDER_THIN); 

                                    $rows++;

                                }

                                $sheet->setCellValue('E' . $rows, 'Total');

                                $sheet->setCellValue('F' . $rows, ($pgramt > 0) ? number_format($pgramt, 2, '.', '') : '');

                                $sheet->setCellValue('G' . $rows, ($ptxamt > 0) ? number_format($ptxamt, 2, '.', '') : '');

                                $sheet->setCellValue('H' . $rows, ($pntamt > 0) ? number_format($pntamt, 2, '.', '') : '');



                                $tgramt  = $tgramt + $pgramt ;

                                $ttxamt  = $ttxamt + $ptxamt ;

                                $tntamt  = $tntamt + $pntamt ;



                                $style = $sheet->getStyle('A' . $rows . ':H' . $rows);

                                $style->getFont()->setBold(true);

                                $style->getBorders()->getBottom()->setBorderStyle(\PhpOffice\PhpSpreadsheet\Style\Border::BORDER_MEDIUM); 

                                $style->getBorders()->getLeft()->setBorderStyle(\PhpOffice\PhpSpreadsheet\Style\Border::BORDER_THIN); 

                                $style->getBorders()->getRight()->setBorderStyle(\PhpOffice\PhpSpreadsheet\Style\Border::BORDER_THIN);

                                $style->getBorders()->getTop()->setBorderStyle(\PhpOffice\PhpSpreadsheet\Style\Border::BORDER_THIN);   

                                $rows++;

                            }

                            $sheet->setCellValue('E' . $rows, 'PERIOD TOTAL');

                            $sheet->setCellValue('F' . $rows, ($tgramt > 0) ? number_format($tgramt, 2, '.', '') : '');

                            $sheet->setCellValue('G' . $rows, ($ttxamt > 0) ? number_format($ttxamt, 2, '.', '') : '');

                            $sheet->setCellValue('H' . $rows, ($tntamt > 0) ? number_format($tntamt, 2, '.', '') : '');



                            $style = $sheet->getStyle('A' . $rows . ':H' . $rows);

                            $style->getFont()->setBold(true);

                            $style->getAlignment()->setHorizontal(Alignment::HORIZONTAL_CENTER);

                            $style->getBorders()->getAllBorders()->setBorderStyle(\PhpOffice\PhpSpreadsheet\Style\Border::BORDER_THIN); 

                            $style->getBorders()->getBottom()->setBorderStyle(\PhpOffice\PhpSpreadsheet\Style\Border::BORDER_MEDIUM); 

                            $style->getBorders()->getRight()->setBorderStyle(\PhpOffice\PhpSpreadsheet\Style\Border::BORDER_MEDIUM);

                            $style->getFill()->setFillType(Fill::FILL_SOLID)->getStartColor()->setRGB('ffe93a');

                            $rows++;

                        break;

                        case 'S' :

                            while ($rowcnt <= $report_cnt) {

                                $psrlind = 'Y';

                                $pserial = $report_row['serial_no'] ;

                                while($pserial == $report_row['serial_no'] && $rowcnt <= $report_cnt) 

                                {

                                    $rowdesc  = $report_row['payee_payer_name'] ; 

                                    $rosamt   = $report_row['paid_amount'] ; 

                                    $tosamt   = $tosamt + $rosamt  ; 



                                    $sheet->setCellValue('A' . $rows, strtoupper($report_row['payee_payer_name']));

                                    $sheet->setCellValue('B' . $rows, ($rosamt == 0.00) ? '' : number_format($rosamt,2,'.',''));



                                    $report_row = ($rowcnt < $report_cnt) ? $payreg_qry[$rowcnt] : $report_row;

                                    $rowcnt = $rowcnt + 1 ;



                                    $style = $sheet->getStyle('A' . $rows . ':B' . $rows);

                                    $style->getBorders()->getAllBorders()->setBorderStyle(\PhpOffice\PhpSpreadsheet\Style\Border::BORDER_THIN); 

                                    $rows++;

                                }

                            }

                            $sheet->setCellValue('A' . $rows, 'TOTAL');

                            $sheet->setCellValue('B' . $rows, ($tosamt == 0.00) ? '' : number_format($tosamt,2,'.',''));



                            $style = $sheet->getStyle('A' . $rows . ':B' . $rows);

                            $style->getFont()->setBold(true);

                            $style->getAlignment()->setHorizontal(Alignment::HORIZONTAL_CENTER);

                            $style->getBorders()->getAllBorders()->setBorderStyle(\PhpOffice\PhpSpreadsheet\Style\Border::BORDER_THIN); 

                            $style->getBorders()->getBottom()->setBorderStyle(\PhpOffice\PhpSpreadsheet\Style\Border::BORDER_MEDIUM); 

                            $style->getBorders()->getTop()->setBorderStyle(\PhpOffice\PhpSpreadsheet\Style\Border::BORDER_MEDIUM);

                            $style->getBorders()->getRight()->setBorderStyle(\PhpOffice\PhpSpreadsheet\Style\Border::BORDER_MEDIUM);

                            $style->getFill()->setFillType(Fill::FILL_SOLID)->getStartColor()->setRGB('ffe93a');

                            $rows++;

                        break;

                    }



                    $writer = new Xlsx($spreadsheet);

                    $writer->save($fileName);

                    header('Content-Type: application/vnd.ms-excel');

                    header('Content-Disposition: attachment; filename="'.basename($fileName).'"');

                    header('Expires: 0');

                    header('Cache-control: must-revalidate');

                    header('Pragma: public');

                    header('Content-Length:'.filesize($fileName));

                    flush();

                    readfile($fileName); 

                } else return view("pages/Finance/payment_register", compact("payreg_qry", "params", 'showActionBtns', 'form_report_type', 'show_summary_report'));





            } else if($output_type == 'innerReport' || $output_type == 'innerPdf' || $output_type == 'innerExcel'){



                $serial_no = isset($_REQUEST['serial_no'])?$_REQUEST['serial_no']:null;



                $tranhdr_row = $this->db->query("select a.*, b.branch_name from ledger_trans_hdr a, branch_master b where a.serial_no = '$serial_no' and a.branch_code = b.branch_code  ")->getRowArray();

                // echo '<pre>';print_r($tranhdr_row);die;

                $trandtl_qry = $this->db->query("select a.*, b.branch_name from ledger_trans_dtl a, branch_master b

                                                    where a.ref_ledger_serial_no = '$serial_no' 

                                                        and a.branch_code = b.branch_code  ")->getResultArray();

                $trandtl_cnt = count($trandtl_qry) ;

                

                $vchrhdr_row = $this->db->query("select a.prepared_by, a.prepared_on, b.serial_no from voucher_header a, ledger_trans_hdr b where a.ref_ledger_serial_no = '$serial_no' and a.ref_ledger_serial_no = b.serial_no  ")->getResultArray() ;

                

                if(empty($trandtl_qry)) {

                    session()->setFlashdata('message', 'No Records Found !!');

                    return redirect()->to($this->requested_url());

                }



                if ($output_type == 'innerPdf') {

                    $report_type = 'Pdf'; $dompdf = new \Dompdf\Dompdf(); 

                    $reportHTML = view("pages/Finance/daybook", compact("trandtl_qry", "vchrhdr_row", "tranhdr_row", 'showActionBtns', 'requested_url', 'report_type'));

                    $dompdf->loadHtml($reportHTML);

                    $dompdf->setPaper('A4', 'landscape'); // portrait

                    $dompdf->render();

                    $dompdf->stream('abc.pdf', array('Attachment'=>0)); exit;

                } else if ($output_type == 'innerExcel') {

                    $fileName = 'Daybook-'.date('d-m-Y').'.xlsx';  

                    $spreadsheet = new Spreadsheet();

                    $sheet = $spreadsheet->getActiveSheet();



                    // Define the headings

                    $headings = ['Main', 'Sub', 'Matter', 'Client', 'Bill Number', 'Purpose', 'Debit', 'Credit'];

                    // Loop through the headings and set the formatting

                    $column = 'A';

                    foreach ($headings as $heading) {

                        $cell = $column . '1';



                        // Set the cell value

                        $sheet->setCellValue($cell, $heading);



                        // Apply formatting

                        $style = $sheet->getStyle($cell);

                        $style->getFont()->setBold(true);

                        $style->getAlignment()->setHorizontal(Alignment::HORIZONTAL_CENTER);

                        $style->getFill()->setFillType(Fill::FILL_SOLID)->getStartColor()->setRGB('c8d5ef');

                        // Add borders

                        $style->getBorders()->getTop()->setBorderStyle(\PhpOffice\PhpSpreadsheet\Style\Border::BORDER_THIN);

                        $style->getBorders()->getBottom()->setBorderStyle(\PhpOffice\PhpSpreadsheet\Style\Border::BORDER_THIN);

                        $style->getBorders()->getLeft()->setBorderStyle(\PhpOffice\PhpSpreadsheet\Style\Border::BORDER_THIN);

                        $style->getBorders()->getRight()->setBorderStyle(\PhpOffice\PhpSpreadsheet\Style\Border::BORDER_THIN);



                        // Move to the next column

                        ++$column;

                    }

                    $rows = 2;

                    $tdtotal  = 0; 

                    $tctotal  = 0; 

                    $rowcnt     = 1 ;

                    // $report_row = isset($ldg_qry[$rowcnt-1]) ? $ldg_qry[$rowcnt-1] : '' ;  

                    // $report_cnt = $ldg_cnt ;

                    foreach($trandtl_qry as $trandtl_row) {

                        $sheet->setCellValue('A' . $rows, $trandtl_row['main_ac_code']);

                        $sheet->setCellValue('B' . $rows, $trandtl_row['sub_ac_code']);

                        $sheet->setCellValue('C' . $rows, $trandtl_row['matter_code']);

                        $sheet->setCellValue('D' . $rows, $trandtl_row['client_code']);

                        $sheet->setCellValue('E' . $rows, $trandtl_row['bill_no']);

                        $sheet->setCellValue('F' . $rows, $trandtl_row['narration']);

                        $sheet->setCellValue('G' . $rows, ($trandtl_row['dr_cr_ind'] == 'D') ? $trandtl_row['gross_amount'] : '');

                        $sheet->setCellValue('H' . $rows, ($trandtl_row['dr_cr_ind'] == 'C') ? $trandtl_row['gross_amount'] : '');



                        // Apply border to the current row

                        $style = $sheet->getStyle('A' . $rows . ':H' . $rows);

                        $style->getBorders()->getAllBorders()->setBorderStyle(\PhpOffice\PhpSpreadsheet\Style\Border::BORDER_THIN);



                        if($trandtl_row['dr_cr_ind'] == 'D') { $tdtotal = $tdtotal + $trandtl_row['gross_amount'] ; } else { $tctotal = $tctotal + $trandtl_row['gross_amount'] ; }  

                        $rows++;

                    }

                    $sheet->setCellValue('F' . $rows, 'TOTAL');

                    $sheet->setCellValue('G' . $rows, ($tdtotal != 0) ? number_format(abs($tdtotal),2,'.','') : '');

                    $sheet->setCellValue('H' . $rows, ($tctotal != 0) ? number_format(abs($tctotal),2,'.','') : '');



                    // Apply Background Color to the current row

                    $style = $sheet->getStyle('A' . $rows . ':H' . $rows);

                    $style->getFont()->setBold(true);

                    $style->getAlignment()->setHorizontal(Alignment::HORIZONTAL_CENTER);

                    $style->getBorders()->getAllBorders()->setBorderStyle(\PhpOffice\PhpSpreadsheet\Style\Border::BORDER_THIN);

                    $style->getFill()->setFillType(Fill::FILL_SOLID)->getStartColor()->setRGB('ffe93a');



                    $writer = new Xlsx($spreadsheet);

                    $writer->save($fileName);

                    header('Content-Type: application/vnd.ms-excel');

                    header('Content-Disposition: attachment; filename="'.basename($fileName).'"');

                    header('Expires: 0');

                    header('Cache-control: must-revalidate');

                    header('Pragma: public');

                    header('Content-Length:'.filesize($fileName));

                    flush();

                    readfile($fileName); 

                } else return view("pages/Finance/daybook", compact("trandtl_qry", "vchrhdr_row", "tranhdr_row", 'showActionBtns', 'requested_url'));



            }



        }else {



            $data = [];

            $data = branches(session()->userId);

            $displayId = ['payee_help_id' => '4403'];

            $data['finyr_qry']  = $this->db->query("select fin_year from params order by fin_year desc")->getResultArray(); 

            $data['ason_date'] = date('d-m-Y');

    

            $curr_finyr = session()->financialYear;

            $data['curr_fyrsdt'] = '01-04-'.substr($curr_finyr,0,4);

            $data['daybook_qry'] = $this->db->query("select daybook_type,daybook_code,daybook_desc from daybook_master where daybook_type != 'JB' order by daybook_type desc,daybook_desc")->getResultArray();

            return view("pages/Finance/payment_register", compact("data", "displayId"));

        } 

    }



    public function receipt_register() {

        $requested_url = session()->requested_end_menu_url;

        $output_type = isset($_REQUEST['output_type']) ? $_REQUEST['output_type'] : '';

        $showActionBtns = false;

        $displayId = ['other_help_id' => '4404', 'client_help_id' => '4547', 'court_help_id' => '4221', 'initial_help_id' => '4191'];



        if($this->request->getMethod() == "post") { 

            if($output_type == 'Report' || $output_type == 'Pdf' || $output_type == 'Excel') { 



                $showActionBtns = true;

                $report_desc   = 'RECEIPT REGISTER - Summary';

                $report_seqn   = $_REQUEST['report_seqn'] ;



                //-------

                $branch_code   = $_REQUEST['branch_code'] ;

                $start_date    = $_REQUEST['start_date'] ;    $start_date_ymd = date_conv($start_date);

                $end_date      = $_REQUEST['end_date'] ;      $end_date_ymd   = date_conv($end_date);

                $payee_type    = $_REQUEST['payee_payer_type'] ; 

                $form_report_type    = $_REQUEST['report_type'] ; 

                

                $payee_code    = $_REQUEST['payee_payer_code'] ;    if(empty($payee_code)) { $payee_code = '%' ; }

                $payee_name    = $_REQUEST['payee_payer_name'] ;    if(empty($payee_name)) { $payee_name = '%' ; }

                $court_code    = '%' ; 

                $initial_code  = '%' ;  

                    

                $branch_qry    = $this->db->query("select branch_name from branch_master where branch_code = '$branch_code' ")->getRowArray() ;

                $branch_name   = $branch_qry['branch_name'] ;



                if($report_seqn == 'C')      { $group_by_clause = "a.payee_payer_code" ;  $order_by_clause = "a.payee_payer_code" ; }

                else if($report_seqn == 'M') { $group_by_clause = "d.court_code,d.initial_code,a.payee_payer_code" ; $order_by_clause = "c.code_desc" ; }

                else if($report_seqn == 'I') { $group_by_clause = "d.initial_code" ;  $order_by_clause = "g.initial_name" ; }



                $payreg_sql = '';

                if ($form_report_type == 'S'){



                    switch($report_seqn) {

                        case 'C' :

                            $payreg_sql = "select a.serial_no, a.doc_type, a.daybook_code, a.payee_payer_code, a.payee_payer_name, sum(b.gross_amount) paid_amount 

                                        from ledger_trans_hdr a, ledger_trans_dtl b 

                                        where a.branch_code = '$branch_code' 

                                        and a.doc_date between '$start_date_ymd' and '$end_date_ymd'

                                        and a.status_code = 'C'

                                        and a.doc_type = 'RV'

                                        and a.payee_payer_type like '$payee_type' 

                                        and ifnull(a.payee_payer_code,'%') like '$payee_code'

                                        and a.payee_payer_name like '$payee_name' 

                                        and a.serial_no = b.ref_ledger_serial_no 

                                        and b.dr_cr_ind = 'C'

                                        group by ".$group_by_clause."  order by ".$order_by_clause ; 

                        break;

                        case 'M' :

                            $payreg_sql = "select a.serial_no, a.doc_type, c.code_desc court_name, g.initial_name, a.daybook_code, a.payee_payer_code, a.payee_payer_name, sum(b.gross_amount) paid_amount 

                                    from ledger_trans_hdr a, ledger_trans_dtl b,  code_master c, fileinfo_header d 

                                    left outer join initial_master g on g.initial_code = d.initial_code 

                                    where a.branch_code = '$branch_code' 

                                    and a.doc_date between '$start_date_ymd' and '$end_date_ymd'

                                    and a.status_code = 'C'

                                    and a.doc_type =  'RV'

                                    and a.payee_payer_type like '$payee_type' 

                                    and ifnull(a.payee_payer_code,'%') like '$payee_code'

                                    and a.payee_payer_name like '$payee_name' 

                                    and d.court_code like '$court_code'

                                    and d.initial_code like '$initial_code'

                                    and ifnull(d.initial_code,'') = d.initial_code

                                    and ifnull(d.matter_code,'') = b.matter_code

                                    and d.court_code = c.code_code and c.type_code = '001'     

                                    and a.serial_no = b.ref_ledger_serial_no 

                                    and b.dr_cr_ind = 'C'

                                    group by ".$group_by_clause."  order by ".$order_by_clause ;

                        break;

                        case 'I' :

                            $payreg_sql = "select a.serial_no, a.doc_type, a.daybook_code, g.initial_name, a.payee_payer_code, a.payee_payer_name, sum(b.gross_amount) paid_amount 

                                    from ledger_trans_hdr a, ledger_trans_dtl b, fileinfo_header d left outer join initial_master g on g.initial_code = d.initial_code

                                    where a.branch_code = '$branch_code' 

                                    and a.doc_date between '$start_date_ymd' and '$end_date_ymd'

                                    and a.status_code = 'C'

                                    and a.doc_type = 'RV'

                                    and a.payee_payer_type like '$payee_type' 

                                    and ifnull(a.payee_payer_code,'%') like '$payee_code'

                                    and a.payee_payer_name like '$payee_name' 

                                    and a.serial_no = b.ref_ledger_serial_no 

                                    and b.dr_cr_ind = 'C'

                                    group by ".$group_by_clause."  order by ".$order_by_clause ;

                        break;

                    }

                } 



                $payreg_qry  = $this->db->query($payreg_sql)->getResultArray() ;

                // echo '<pre>';print_r($payreg_qry);die;

                $payreg_cnt  = count($payreg_qry) ;



                if(empty($payreg_qry)) {

                    session()->setFlashdata('message', 'No Records Found !!');

                    return redirect()->to($this->requested_url());

                }



                $params = [

                    'payreg_cnt' => $payreg_cnt,

                    'report_desc' => $report_desc,

                    'branch_name' => $branch_name,

                    'payee_name' => $payee_name,

                    'payee_code' => $payee_code,

                    'start_date' => $start_date,

                    'end_date' => $end_date,

                    'requested_url' => $requested_url,



                ];

                if ($output_type == 'Pdf') {

                    $report_type = 'Pdf'; $dompdf = new \Dompdf\Dompdf(); 

                    $reportHTML = view("pages/Finance/receipt_register", compact('showActionBtns', 'payreg_qry', 'report_type', 'params', "form_report_type"));

                    $dompdf->loadHtml($reportHTML);

                    $dompdf->setPaper('A4', 'landscape'); // portrait

                    $dompdf->render();

                    $dompdf->stream('abc.pdf', array('Attachment'=>0)); exit;

                } else if($output_type == 'Excel'){



                    $showActionBtns = true;

                    $spreadsheet = new Spreadsheet();

                    $sheet = $spreadsheet->getActiveSheet();

                    $rows = 1;

                    

                    $fileName = $headings = '';

                    $fileName = 'Finance-Receipt-Register-Summary'.date('d-m-Y').'.xlsx';  

                    $headings = ['Payee Name', 'Amount'];



                    $column = 'A'; $rows++;



                    foreach ($headings as $heading) {

                        $cell = $column . $rows;

                        $sheet->setCellValue($cell, $heading); // Set the cell value



                        // Apply formatting

                        $style = $sheet->getStyle($cell);

                        $style->getFont()->setBold(true);

                        $style->getAlignment()->setHorizontal(Alignment::HORIZONTAL_CENTER);

                        $style->getFill()->setFillType(Fill::FILL_SOLID)->getStartColor()->setRGB('c8d5ef');

                        $style->getBorders()->getAllBorders()->setBorderStyle(\PhpOffice\PhpSpreadsheet\Style\Border::BORDER_THIN); // Add borders

                        ++$column; // Move to the next column

                    } $rows++;



                    $tosamt     = 0;

                    $rowcnt     = 1;

                    $report_row = isset($payreg_qry[$rowcnt-1]) ? $payreg_qry[$rowcnt-1] : '' ;

                    $report_cnt = $params['payreg_cnt'] ;

                    while ($rowcnt <= $report_cnt) {

                        $pserial = $report_row['serial_no'] ;

                        while($pserial == $report_row['serial_no'] && $rowcnt <= $report_cnt) { 



                            $sheet->setCellValue('A' . $rows, strtoupper($report_row['payee_payer_name']));

                            $sheet->setCellValue('B' . $rows, ($report_row['paid_amount'] == 0.00) ? '' : number_format($report_row['paid_amount'],2,'.',''));

    

                            $report_row = ($rowcnt < $report_cnt) ? $payreg_qry[$rowcnt] : $report_row;

                            $rowcnt = $rowcnt + 1 ;

    

                            $rowdesc  = $report_row['payee_payer_name'] ; 

                            $rosamt   = $report_row['paid_amount'] ; 

                            $tosamt   = $tosamt + $rosamt  ; 



                            $style = $sheet->getStyle('A' . $rows . ':B' . $rows);

                            $style->getBorders()->getAllBorders()->setBorderStyle(\PhpOffice\PhpSpreadsheet\Style\Border::BORDER_THIN); 

                            $rows++;

                        }

                    }

                    $sheet->setCellValue('A' . $rows, 'Total');

                    $sheet->setCellValue('B' . $rows, ($tosamt == 0.00) ? '' : number_format($tosamt,2,'.',''));



                    $style = $sheet->getStyle('A' . $rows . ':B' . $rows);

                    $style->getFont()->setBold(true);

                    $style->getAlignment()->setHorizontal(Alignment::HORIZONTAL_CENTER);

                    $style->getBorders()->getAllBorders()->setBorderStyle(\PhpOffice\PhpSpreadsheet\Style\Border::BORDER_THIN); 

                    $style->getBorders()->getBottom()->setBorderStyle(\PhpOffice\PhpSpreadsheet\Style\Border::BORDER_MEDIUM); 

                    $style->getBorders()->getRight()->setBorderStyle(\PhpOffice\PhpSpreadsheet\Style\Border::BORDER_MEDIUM);

                    $style->getBorders()->getTop()->setBorderStyle(\PhpOffice\PhpSpreadsheet\Style\Border::BORDER_MEDIUM);

                    $style->getFill()->setFillType(Fill::FILL_SOLID)->getStartColor()->setRGB('ffe93a');

                    $rows++;



                    $writer = new Xlsx($spreadsheet);

                    $writer->save($fileName);

                    header('Content-Type: application/vnd.ms-excel');

                    header('Content-Disposition: attachment; filename="'.basename($fileName).'"');

                    header('Expires: 0');

                    header('Cache-control: must-revalidate');

                    header('Pragma: public');

                    header('Content-Length:'.filesize($fileName));

                    flush();

                    readfile($fileName); 



                }else return view("pages/Finance/receipt_register", compact('showActionBtns', 'payreg_qry', 'params', "form_report_type"));

            }

        } else {

            $data = [];

            $data = branches(session()->userId);

            $data['finyr_qry']  = $this->db->query("select fin_year from params order by fin_year desc")->getResultArray(); 

            $data['ason_date'] = date('d-m-Y');

    

            $curr_finyr = session()->financialYear;

            $data['curr_fyrsdt'] = '01-04-'.substr($curr_finyr,0,4);

            $data['daybook_qry'] = $this->db->query("select daybook_type,daybook_code,daybook_desc from daybook_master where daybook_type != 'JB' order by daybook_type desc,daybook_desc")->getResultArray();

            return view("pages/Finance/receipt_register", compact("data", "displayId"));

        }





    }



    public function journal_register() {

        $requested_url = session()->requested_end_menu_url;

        $output_type = isset($_REQUEST['output_type']) ? $_REQUEST['output_type'] : '';

        $showActionBtns = false;



        if($this->request->getMethod() == "post") { 

            if($output_type == 'Report' || $output_type == 'Pdf' || $output_type == 'Excel') { 



                $report_desc   = 'JOURNAL REGISTER';



                $branch_code   = $_REQUEST['branch_code'] ;

                $start_date    = $_REQUEST['start_date'] ;    $start_date_ymd = date_conv($start_date);

                $end_date      = $_REQUEST['end_date'] ;      $end_date_ymd   = date_conv($end_date);

                $journal_type  = $_REQUEST['journal_type'] ;



                $branch_qry    = $this->db->query("select branch_name from branch_master where branch_code = '$branch_code' ")->getRowArray() ;

                $branch_name   = $branch_qry['branch_name'] ;



                $jvtype_qry    = $this->db->query("select code_desc from code_master where type_code = '032' and code_code = '$journal_type' ")->getRowArray() ;

                $jvtype_name   = $jvtype_qry['code_desc'] ;



                $jnlreg_sql = "select a.serial_no, a.doc_date, a.doc_no, a.daybook_code, a.doc_type, a.ref_doc_type, b.main_ac_code, b.sub_ac_code, b.client_code, b.matter_code, b.initial_code, b.narration, b.gross_amount, b.dr_cr_ind

                            from ledger_trans_hdr a, ledger_trans_dtl b

                            where a.branch_code = '$branch_code' 

                            and a.doc_date between '$start_date_ymd' and '$end_date_ymd'

                            and a.status_code = 'C'

                            and a.doc_type = 'JV'

                            and a.daybook_code = '40'

                            and a.ref_doc_type like '$journal_type'

                            and a.serial_no = b.ref_ledger_serial_no 

                            order by a.doc_date,a.serial_no";

                $jnlreg_qry  = $this->db->query($jnlreg_sql)->getResultArray() ;

                // echo '<pre>';print_r($jnlreg_qry);die;

                $jnlreg_cnt  = count($jnlreg_qry) ;



                if(empty($jnlreg_qry)) {

                    session()->setFlashdata('message', 'No Records Found !!');

                    return redirect()->to($this->requested_url());

                }



                $params = [

                    'jnlreg_cnt' => $jnlreg_cnt,

                    'report_desc' => $report_desc,

                    'branch_name' => $branch_name,

                    'start_date' => $start_date,

                    'end_date' => $end_date,

                    'jvtype_name' => $jvtype_name,

                    'requested_url' => $requested_url,



                ];

                if ($output_type == 'Pdf') {

                    $report_type = 'Pdf'; $dompdf = new \Dompdf\Dompdf(); 

                    $reportHTML = view("pages/Finance/journal_register", compact('jnlreg_qry', 'params', 'report_type'));

                    $dompdf->loadHtml($reportHTML);

                    $dompdf->setPaper('A4', 'landscape'); // portrait

                    $dompdf->render();

                    $dompdf->stream('abc.pdf', array('Attachment'=>0)); exit;

                }else if($output_type == 'Excel') {



                    $showActionBtns = true;

                    $spreadsheet = new Spreadsheet();

                    $sheet = $spreadsheet->getActiveSheet();

                    $rows = 1;





                    $fileName = $headings = '';

                    $fileName = 'Finance-Journal-Register-'.date('d-m-Y').'.xlsx';  

                    $headings = ['Date', 'Doc#', 'Main', 'Sub', 'Client', 'Matter', 'Intial', 'Narration', 'Debit', 'Credit'];



                    $column = 'A'; $rows++;



                    foreach ($headings as $heading) {

                        $cell = $column . $rows;

                        $sheet->setCellValue($cell, $heading); // Set the cell value



                        // Apply formatting

                        $style = $sheet->getStyle($cell);

                        $style->getFont()->setBold(true);

                        $style->getAlignment()->setHorizontal(Alignment::HORIZONTAL_CENTER);

                        $style->getFill()->setFillType(Fill::FILL_SOLID)->getStartColor()->setRGB('c8d5ef');

                        $style->getBorders()->getAllBorders()->setBorderStyle(\PhpOffice\PhpSpreadsheet\Style\Border::BORDER_THIN); // Add borders

                        ++$column; // Move to the next column

                    } $rows++;



                    $tdramt  = 0; 

                    $tcramt  = 0; 

                    $rowcnt     = 1 ;

                    $report_row = isset($jnlreg_qry[$rowcnt-1]) ? $jnlreg_qry[$rowcnt-1] : '' ; 

                    $report_cnt = $params['jnlreg_cnt'] ;

                    while ($rowcnt <= $report_cnt) { 

                        $sdramt  = 0; 

                        $scramt  = 0; 

                        $psrlind = 'Y';

                        $pserial = $report_row['serial_no'] ;

                        while($pserial == $report_row['serial_no'] && $rowcnt <= $report_cnt) {

                            $sheet->setCellValue('A' . $rows, ($psrlind=='Y') ? date_conv($report_row['doc_date'],'-') : '');

                            $sheet->setCellValue('B' . $rows, ($psrlind=='Y') ? $report_row['doc_no']  : '');

                            $sheet->setCellValue('C' . $rows, $report_row['main_ac_code']);

                            $sheet->setCellValue('D' . $rows, strtoupper($report_row['sub_ac_code']) );

                            $sheet->setCellValue('E' . $rows, strtoupper($report_row['client_code']));

                            $sheet->setCellValue('F' . $rows, $report_row['matter_code']);

                            $sheet->setCellValue('G' . $rows, strtoupper($report_row['initial_code']));

                            $sheet->setCellValue('H' . $rows, strtoupper($report_row['narration']));

                            $sheet->setCellValue('I' . $rows, ($report_row['dr_cr_ind'] == 'D') ? $report_row['gross_amount'] : '');

                            $sheet->setCellValue('J' . $rows, ($report_row['dr_cr_ind'] == 'C') ? $report_row['gross_amount'] : '');



                            $psrlind = 'N' ;

                            if ($report_row['dr_cr_ind'] == 'D') {$sdramt  = $sdramt + $report_row['gross_amount'] ; }                  

                            if ($report_row['dr_cr_ind'] == 'C') {$scramt  = $scramt + $report_row['gross_amount'] ; } 

                            

                            $report_row = ($rowcnt < $report_cnt) ? $jnlreg_qry[$rowcnt] : $report_row; 

                            $rowcnt = $rowcnt + 1 ;



                            $style = $sheet->getStyle('A' . $rows . ':J' . $rows);

                            $style->getBorders()->getAllBorders()->setBorderStyle(\PhpOffice\PhpSpreadsheet\Style\Border::BORDER_THIN); 

                            $rows++;

                        }

                        $sheet->setCellValue('H' . $rows, 'Total');

                        $sheet->setCellValue('I' . $rows, ($sdramt > 0) ? number_format($sdramt, 2, '.', '') : '');

                        $sheet->setCellValue('J' . $rows, ($sdramt > 0) ? number_format($sdramt, 2, '.', '') : '');



                        $tdramt  = $tdramt + $sdramt ;

	                    $tcramt  = $tcramt + $scramt ;



                        $style = $sheet->getStyle('A' . $rows . ':J' . $rows);

                        $style->getFont()->setBold(true);

                        $style->getBorders()->getBottom()->setBorderStyle(\PhpOffice\PhpSpreadsheet\Style\Border::BORDER_MEDIUM); 

                        $style->getBorders()->getLeft()->setBorderStyle(\PhpOffice\PhpSpreadsheet\Style\Border::BORDER_MEDIUM); 

                        $style->getBorders()->getRight()->setBorderStyle(\PhpOffice\PhpSpreadsheet\Style\Border::BORDER_MEDIUM);

                        $style->getBorders()->getTop()->setBorderStyle(\PhpOffice\PhpSpreadsheet\Style\Border::BORDER_MEDIUM);   

                        $style->getFill()->setFillType(Fill::FILL_SOLID)->getStartColor()->setRGB('c8efe3');


                        $rows++;

                    }

                    $sheet->setCellValue('H' . $rows, 'PERIOD TOTAL');

                    $sheet->setCellValue('I' . $rows, ($tdramt > 0) ? number_format($tdramt, 2, '.', '') : '');

                    $sheet->setCellValue('J' . $rows, ($tdramt > 0) ? number_format($tdramt, 2, '.', '') : '');



                    $style = $sheet->getStyle('A' . $rows . ':J' . $rows);

                    $style->getFont()->setBold(true);

                    $style->getAlignment()->setHorizontal(Alignment::HORIZONTAL_CENTER);

                    $style->getBorders()->getAllBorders()->setBorderStyle(\PhpOffice\PhpSpreadsheet\Style\Border::BORDER_THIN); 

                    $style->getBorders()->getBottom()->setBorderStyle(\PhpOffice\PhpSpreadsheet\Style\Border::BORDER_MEDIUM); 

                    $style->getBorders()->getRight()->setBorderStyle(\PhpOffice\PhpSpreadsheet\Style\Border::BORDER_MEDIUM);

                    $style->getFill()->setFillType(Fill::FILL_SOLID)->getStartColor()->setRGB('ffe93a');

                    $rows++;



                    $writer = new Xlsx($spreadsheet);

                    $writer->save($fileName);

                    header('Content-Type: application/vnd.ms-excel');

                    header('Content-Disposition: attachment; filename="'.basename($fileName).'"');

                    header('Expires: 0');

                    header('Cache-control: must-revalidate');

                    header('Pragma: public');

                    header('Content-Length:'.filesize($fileName));

                    flush();

                    readfile($fileName); 





                } else return view("pages/Finance/journal_register", compact('jnlreg_qry', 'params'));

            }

        }else {

            $data = [];

            $data = branches(session()->userId);

    

            $curr_finyr = session()->financialYear;

            $data['curr_fyrsdt'] = '01-04-'.substr($curr_finyr,0,4);

            return view("pages/Finance/journal_register", compact("data"));

        }





    }



    public function acknowledgement_slip() {

        $requested_url = session()->requested_end_menu_url;

        $output_type = isset($_REQUEST['output_type']) ? $_REQUEST['output_type'] : '';

        $showActionBtns = false;



        if($this->request->getMethod() == "post") {

            if($output_type == 'Report' || $output_type == 'Pdf' || $output_type == 'Excel') { 



                $branch_code      = $_REQUEST['branch_code'] ;

                $received_date    = $_REQUEST['received_date'] ; 

                $received_from    = $_REQUEST['received_from_name'] ; 

                $received_from    = str_replace('_|_','&', $received_from) ;

                $received_from    = str_replace('-|-',"'", $received_from) ;

                $instrument_type  = isset($_REQUEST['instrument_type']) ? $_REQUEST['instrument_type'] : null; 

                $instrument_no    = isset($_REQUEST['instrument_no']) ? $_REQUEST['instrument_no'] : null; 

                $instrument_dt    = isset($_REQUEST['instrument_dt']) ? $_REQUEST['instrument_dt'] : null; 

                $instrument_bk    = isset($_REQUEST['instrument_bk']) ? $_REQUEST['instrument_bk'] : null; 

                $received_amt     = $_REQUEST['received_amount'] ;

                $narration        = $_REQUEST['narration'] ;

                $narration        = str_replace('_|_', '&', $narration) ;

                $narration        = str_replace('-|-', "'", $narration) ;

                $received_amt_riw = int_to_words($received_amt).' only' ;



                $instrument_desc = $instrument_details = '';

                if($instrument_type != 'C') {$instrument_details = 'No '.$instrument_no.'&nbsp;&nbsp;&nbsp; Dated '.$instrument_dt.'&nbsp;&nbsp; On '.$instrument_bk ; } else { $instrument_details = '' ; }



                if($instrument_type == 'D') {$instrument_desc = 'Draft' ; } else if($instrument_type == 'Q') {$instrument_desc = 'Cheque' ; } else { $instrument_details = 'Cash' ; }



                $branch_qry    = $this->db->query("select * from branch_master where branch_code = '$branch_code' ")->getRowArray() ;

                $branch_name   = $branch_qry['branch_name'] ;

                $branch_addr1  = $branch_qry['address_line_1'].', '.$branch_qry['city'].' - '.$branch_qry['pin_code'] ;

                $branch_addr2  = 'TEL : '.$branch_qry['phone_no'].'     FAX : '.$branch_qry['fax_no'] ;

                $branch_addr3  = 'E-Mail : '.$branch_qry['email_id'] ;



                $params = [

                    'branch_addr1'  => $branch_addr1,

                    'branch_addr2'  => $branch_addr2,

                    'branch_addr3'  => $branch_addr3,

                    'received_from'  => $received_from,

                    'received_amt_riw'  => $received_amt_riw,

                    'instrument_desc'  => $instrument_desc,

                    'instrument_details'  => $instrument_details,

                    'narration'  => $narration,

                    'received_amt'  => $received_amt,

                    'requested_url'  => $requested_url,



                ];



                if ($output_type == 'Pdf') {

                    $report_type = 'Pdf'; $dompdf = new \Dompdf\Dompdf(); 

                    $reportHTML = view("pages/Finance/acknowledgement_slip", compact('params', 'report_type'));

                    $dompdf->loadHtml($reportHTML);

                    $dompdf->setPaper('A4', 'landscape'); // portrait

                    $dompdf->render();

                    $dompdf->stream('abc.pdf', array('Attachment'=>0)); exit;

                }else return view("pages/Finance/acknowledgement_slip", compact('params'));

                

            }



        } else {

            $data = [];

            $data = branches(session()->userId);

    

            $curr_finyr = session()->financialYear;

            $data['curr_fyrsdt'] = '01-04-'.substr($curr_finyr,0,4);

            return view("pages/Finance/acknowledgement_slip", compact("data"));

        }



    }



    public function money_receipt() {

        $requested_url = session()->requested_end_menu_url;

        $output_type = isset($_REQUEST['output_type']) ? $_REQUEST['output_type'] : '';

        $showActionBtns = false;



        if($this->request->getMethod() == "post") {

            if($output_type == 'Report' || $output_type == 'Pdf') {



                $branch_code        = $_REQUEST['branch_code'] ;

                $fin_year           = $_REQUEST['fin_year'] ;

                $daybook_code       = $_REQUEST['daybook_code'] ;

                $voucher_no         = $_REQUEST['voucher_no'] ;

                $received_date      = $_REQUEST['received_date'] ; 

                $received_from      = stripslashes($_REQUEST['received_from_name']) ;  

                $received_from      = str_replace('_|_','&', $received_from) ;

                $received_from      = str_replace('-|-',"'", $received_from) ;

                $instrument_type    = $_REQUEST['instrument_type'] ;

                $instrument_no      = $_REQUEST['instrument_no'] ;

                $instrument_dt      = $_REQUEST['instrument_dt'] ;

                $instrument_bk      = $_REQUEST['instrument_bk'] ;

                $received_amount       = $_REQUEST['received_amt'] ;

                $narration          = $_REQUEST['narration'] ;

                $narration          = str_replace('_|_','&', $narration) ;

                $narration          = str_replace('-|-',"'", $narration) ;

                $serial_no          = $_REQUEST['ledger_serial_no'] ;

                $money_receipt_no   = $_REQUEST['money_receipt_no'] ;

                $money_receipt_date = $_REQUEST['money_receipt_date'] ;

                 

                $received_amt_riw = int_to_words($received_amount).' only' ;

              

                if($instrument_type != 'C') {$instrument_details = 'No '.$instrument_no.'&nbsp;&nbsp;&nbsp; Dated '.$instrument_dt.'&nbsp;&nbsp; On '.$instrument_bk ; } else { $instrument_details = '' ; }

              

                if($instrument_type == 'D') {$instrument_desc = 'Draft ' ; } else if($instrument_type == 'Q') {$instrument_desc = 'Cheque' ; } else { $instrument_desc = 'Cash  ' ; }

              

                //----- 

                $branch_qry    = $this->db->query("select * from branch_master where branch_code = '$branch_code' ")->getRowArray() ;

                $branch_name   = $branch_qry['branch_name'] ;

                $branch_addr1  = $branch_qry['address_line_1'].', '.$branch_qry['city'].' - '.$branch_qry['pin_code'] ;

                $branch_addr2  = 'TEL : '.$branch_qry['phone_no'].'     FAX : '.$branch_qry['fax_no'] ;

                $branch_addr3  = 'E-Mail : '.$branch_qry['email_id'] ;



                if ($money_receipt_no == '' || $money_receipt_no == 0) {



                    $money_receipt_no = get_last_doc_no($fin_year,$branch_code,'MR','00','X');

                }



                $ledger_trans_hdr_table  = $this->db->table("ledger_trans_hdr");

    

                $array = array('money_receipt_no'   => $money_receipt_no,

                               'money_receipt_date' => date_conv($money_receipt_date) 

                        );

                $where = "serial_no = '".$serial_no."'";

                $ledgerHeaderexpense = $ledger_trans_hdr_table->update($array,$where);



                $params = [

                    'branch_name' => $branch_name,

                    'branch_addr1' => $branch_addr1,

                    'branch_addr2' => $branch_addr2,

                    'branch_addr3' => $branch_addr3,

                    'money_receipt_no' => $money_receipt_no,

                    'money_receipt_date' => $money_receipt_date,

                    'received_from' => $received_from,

                    'received_amt_riw' => $received_amt_riw,

                    'instrument_desc' => $instrument_desc,

                    'instrument_details' => $instrument_details,

                    'narration' => $narration,

                    'received_amount' => $received_amount,

                    'requested_url' => $requested_url,

                ];



                if ($output_type == 'Pdf') {

                    $report_type = 'Pdf'; $dompdf = new \Dompdf\Dompdf(); 

                    $reportHTML = view("pages/Finance/money_receipt", compact('params', 'report_type'));

                    $dompdf->loadHtml($reportHTML);

                    $dompdf->setPaper('A4', 'landscape'); // portrait

                    $dompdf->render();

                    $dompdf->stream('abc.pdf', array('Attachment'=>0)); exit;

                } else  return view("pages/Finance/money_receipt", compact("params"));

            }

        } else {

            $data = [];

            $data = branches(session()->userId);

    

            $data['finyr_qry']  = $this->db->query("select * from params order by fin_year desc ")->getResultArray() ;

            $data['dbook_qry']  = $this->db->query("select * from daybook_master where daybook_type in ('CB','BB') order by daybook_code ")->getResultArray() ;



            $curr_finyr = session()->financialYear;

            $data['curr_fyrsdt'] = '01-04-'.substr($curr_finyr,0,4);

            return view("pages/Finance/money_receipt", compact("data"));

        }

    }



    public function list_of_courtwise_expenses() {

        $requested_url = session()->requested_end_menu_url;

        $output_type = isset($_REQUEST['output_type']) ? $_REQUEST['output_type'] : '';

        $displayId = ['matter_help_id' => '4220', 'client_help_id' => '4072', 'court_help_id' => '4221'];

        $showActionBtns = false;



        if($this->request->getMethod() == "post") {

            if($output_type == 'Report' || $output_type == 'Pdf' || $output_type == 'Excel') { 



                $branch_code     = $_REQUEST['branch_code'] ;

                $start_date      = $_REQUEST['start_date'] ;      if($start_date != '')   { $start_date_ymd = date_conv($start_date); } else { $start_date_ymd = '1901-01-01'; }

                $end_date        = $_REQUEST['end_date'] ;        if($end_date   != '')   { $end_date_ymd   = date_conv($end_date);   } else { $end_date_ymd   = $global_sysdate ; }

                $court_code      = $_REQUEST['court_code'] ;      if(empty($court_code))  { $court_code   = '%' ; }

                $client_code     = $_REQUEST['client_code'] ;     if(empty($client_code)) { $client_code  = '%' ; }

                $client_name     = isset($_REQUEST['client_name']) ? $_REQUEST['client_name'] : '' ; 

                $matter_code     = $_REQUEST['matter_code'] ;     if(empty($matter_code)) { $matter_code  = '%' ; }

                $form_report_type = $_REQUEST['report_type'] ;

                $branch_qry    = $this->db->query("select * from branch_master where branch_code = '$branch_code' ")->getRowArray() ;

                $branch_name   = $branch_qry['branch_name'] ;

                //$branch_name     = getBranchName($branch_code,$link) ;



                if($start_date == '')  {$period_desc = "UPTO ".$end_date ;} else {$period_desc = $start_date.' - '.$end_date ;}



                if($court_code  == '%') { $court_heading   = 'COURT : ALL'  ; } else { $court_heading   = 'COURT : SELECTIVE'  ; }

                if($client_code == '%') { $client_heading  = 'CLIENT : ALL' ; } else { $client_heading  = 'CLIENT : SELECTIVE' ; }

                if($matter_code == '%') { $matter_heading  = 'MATTER : ALL' ; } else { $matter_heading  = 'MATTER : SELECTIVE' ; }

                if($client_code == '%') { $client_name     = 'ALL' ; } else { $client_name     = $client_name ; }



                $report_desc1 = "LIST OF COURT-WISE EXPENSES : ".$period_desc ;

                $report_desc2 = '[ '.$court_heading.' / '.$client_heading.' / '.$matter_heading.' ]' ;

                

                $trandtl_sql = '';

                

                $trandtl_sql = "select if(c.court_code='','ZZZ',c.court_code) court_code, 

                        ifnull(d.code_desc,'UNKNOWN') court_name, a.exp_date, a.client_code, b.client_name, a.matter_code, 

                        ltrim(concat(c.matter_desc1,' ',matter_desc2)) matter_desc, a.description narration, a.amount exp_amount

                        from court_expense a, client_master b, fileinfo_header c

                        left outer join code_master d on d.code_code = c.court_code and d.type_code = '001'

                        where a.exp_date between '$start_date_ymd' and '$end_date_ymd' 

                        and a.client_code like '$client_code'     

                        and a.matter_code like '$matter_code'   

                        and a.client_code = b.client_code

                        and a.matter_code = c.matter_code 

                        and c.court_code like '$court_code'    

                        order by 2,3,4,6 ";

                    

                

                $trandtl_qry  = $this->db->query($trandtl_sql)->getResultArray();				   

                $trandtl_cnt  = count($trandtl_qry);



                if(empty($trandtl_qry)) {

                    session()->setFlashdata('message', 'No Records Found !!');

                    return redirect()->to($this->requested_url());

                }



                $params = [

                    'trandtl_cnt' => $trandtl_cnt,

                    'report_desc1' => $report_desc1,

                    'report_desc2' => $report_desc2,

                    'requested_url' => $requested_url,

                ];



                if ($output_type == 'Pdf') {

                    $report_type = 'Pdf'; $dompdf = new \Dompdf\Dompdf(); 

                    $reportHTML = view("pages/Finance/list_of_courtwise_expenses", compact('trandtl_qry', 'params', 'report_type'));

                    $dompdf->loadHtml($reportHTML);

                    $dompdf->setPaper('A4', 'landscape'); // portrait

                    $dompdf->render();

                    $dompdf->stream('abc.pdf', array('Attachment'=>0)); exit;

                }else if($output_type == 'Excel') {



                    $showActionBtns = true;

                    $spreadsheet = new Spreadsheet();

                    $sheet = $spreadsheet->getActiveSheet();

                    $rows = 1;



                    $fileName = $headings = '';

                    $fileName = 'Finance-Courtwise-Expenses-Details'.date('d-m-Y').'.xlsx';  

                    $headings = ['Client / Matter', 'Date', 'Narration', 'Amount'];



                    $column = 'A'; $rows++;



                    foreach ($headings as $heading) {

                        $cell = $column . $rows;

                        $sheet->setCellValue($cell, $heading); // Set the cell value



                        // Apply formatting

                        $style = $sheet->getStyle($cell);

                        $style->getFont()->setBold(true);

                        $style->getAlignment()->setHorizontal(Alignment::HORIZONTAL_CENTER);

                        $style->getFill()->setFillType(Fill::FILL_SOLID)->getStartColor()->setRGB('c8d5ef');

                        $style->getBorders()->getAllBorders()->setBorderStyle(\PhpOffice\PhpSpreadsheet\Style\Border::BORDER_THIN); // Add borders

                        ++$column; // Move to the next column

                    } $rows++;



                    $texpamt = 0; 

                    $rowcnt     = 1 ;

                    $report_row = isset($trandtl_qry[$rowcnt-1]) ? $trandtl_qry[$rowcnt-1] : '' ; 

                    $report_cnt = $params['trandtl_cnt'] ;

                    while ($rowcnt <= $report_cnt) {

                        $cexpamt   = 0; 

                        $pcourtind = 'Y' ;

                        $pcourtcd  = $report_row['court_code'] ;

                        $pcourtnm  = $report_row['court_name'] ;

                        while($pcourtcd == $report_row['court_code'] && $rowcnt <= $report_cnt)

                        {

                            if ($pcourtind == 'Y') {

                                $sheet->setCellValue('A' . $rows, $pcourtnm);

                                $pcourtind = 'N' ;



                                $style = $sheet->getStyle('A' . $rows . ':D' . $rows);

                                $style->getFont()->setBold(true);

                                $style->getBorders()->getRight()->setBorderStyle(\PhpOffice\PhpSpreadsheet\Style\Border::BORDER_THIN); 

                                $sheet->mergeCells('A' . $rows . ':D' . $rows);

                                $rows++;

                            }

                            $sheet->setCellValue('A' . $rows, strtoupper($report_row['client_name']));

                            $sheet->setCellValue('B' . $rows, date_conv($report_row['exp_date']));

                            $sheet->setCellValue('C' . $rows, strtoupper($report_row['narration']));

                            $sheet->setCellValue('D' . $rows, number_format($report_row['exp_amount'], 2, '.', ''));

                            $style = $sheet->getStyle('A' . $rows . ':D' . $rows);

                            $style->getBorders()->getAllBorders()->setBorderStyle(\PhpOffice\PhpSpreadsheet\Style\Border::BORDER_THIN); 

                            $rows++;

                            $sheet->setCellValue('A' . $rows, strtoupper($report_row['matter_desc']));



                            $cexpamt += $report_row['exp_amount'] ;

                            $report_row = ($rowcnt < $report_cnt) ? $trandtl_qry[$rowcnt] : $report_row;  

                            $rowcnt = $rowcnt + 1 ;



                            $style = $sheet->getStyle('A' . $rows . ':D' . $rows);

                            $style->getBorders()->getRight()->setBorderStyle(\PhpOffice\PhpSpreadsheet\Style\Border::BORDER_THIN); 

                            $sheet->mergeCells('A' . $rows . ':D' . $rows); 

                            $style->getAlignment()->setWrapText(true);

                            $rows++;

                        }

                        $sheet->setCellValue('A' . $rows, 'Court Total');

                        $sheet->setCellValue('D' . $rows, ($cexpamt > 0) ? number_format($cexpamt,2,'.','') : '');

                        $texpamt += $cexpamt ;



                        $style = $sheet->getStyle('A' . $rows . ':D' . $rows);

                        $style->getFont()->setBold(true);

                        $style->getAlignment()->setHorizontal(Alignment::HORIZONTAL_RIGHT);

                        $style->getBorders()->getAllBorders()->setBorderStyle(\PhpOffice\PhpSpreadsheet\Style\Border::BORDER_THIN); 

                        $style->getBorders()->getBottom()->setBorderStyle(\PhpOffice\PhpSpreadsheet\Style\Border::BORDER_MEDIUM); 

                        $style->getBorders()->getRight()->setBorderStyle(\PhpOffice\PhpSpreadsheet\Style\Border::BORDER_MEDIUM);

                        $style->getBorders()->getTop()->setBorderStyle(\PhpOffice\PhpSpreadsheet\Style\Border::BORDER_MEDIUM);

                        $style->getFill()->setFillType(Fill::FILL_SOLID)->getStartColor()->setRGB('c8efe3');

                        $sheet->mergeCells('A' . $rows . ':C' . $rows);

                        $rows++;

                    }

                    $sheet->setCellValue('A' . $rows, 'PERIOD TOTAL');

                    $sheet->setCellValue('D' . $rows, ($texpamt > 0) ? number_format($texpamt,2,'.','') : '');



                    $style = $sheet->getStyle('A' . $rows . ':D' . $rows);

                    $style->getFont()->setBold(true);

                    $style->getAlignment()->setHorizontal(Alignment::HORIZONTAL_RIGHT);

                    $style->getBorders()->getAllBorders()->setBorderStyle(\PhpOffice\PhpSpreadsheet\Style\Border::BORDER_THIN); 

                    $style->getBorders()->getBottom()->setBorderStyle(\PhpOffice\PhpSpreadsheet\Style\Border::BORDER_MEDIUM); 

                    $style->getBorders()->getRight()->setBorderStyle(\PhpOffice\PhpSpreadsheet\Style\Border::BORDER_MEDIUM);

                    $style->getBorders()->getTop()->setBorderStyle(\PhpOffice\PhpSpreadsheet\Style\Border::BORDER_MEDIUM);

                    $style->getFill()->setFillType(Fill::FILL_SOLID)->getStartColor()->setRGB('ffe93a');

                    $sheet->mergeCells('A' . $rows . ':C' . $rows);

                    $rows++;



                    $writer = new Xlsx($spreadsheet);

                    $writer->save($fileName);

                    header('Content-Type: application/vnd.ms-excel');

                    header('Content-Disposition: attachment; filename="'.basename($fileName).'"');

                    header('Expires: 0');

                    header('Cache-control: must-revalidate');

                    header('Pragma: public');

                    header('Content-Length:'.filesize($fileName));

                    flush();

                    readfile($fileName); 



                } else return view("pages/Finance/list_of_courtwise_expenses", compact('trandtl_qry', 'params'));

            }



        } else {

            $data = [];

            $data = branches(session()->userId);

    

            $curr_finyr = session()->financialYear;

            $data['curr_fyrsdt'] = '01-04-'.substr($curr_finyr,0,4);

            return view("pages/Finance/list_of_courtwise_expenses", compact("data", "displayId"));

        }

    }



    public function list_of_balance_sub_ac_wise() {

        $requested_url = session()->requested_end_menu_url;

        $output_type = isset($_REQUEST['output_type']) ? $_REQUEST['output_type'] : '';

        $displayId = ['mainac_help_id' => '4537'];

        $showActionBtns = false;



        if($this->request->getMethod() == "post") {

            if($output_type == 'Report' || $output_type == 'Pdf' || $output_type == 'Excel') { 



                $report_desc   = "LIST OF BALANCE (SUB A/C-wise)" ;

                $branch_code   = $_REQUEST['branch_code'] ;

                $ason_date     = $_REQUEST['ason_date'] ;       

                $main_ac_code  = $_REQUEST['main_ac_code'] ;   if($main_ac_code == '')  { $main_ac_code = '%' ; }

                $main_ac_desc  = $_REQUEST['main_ac_desc'] ;   if($main_ac_code == '%') { $main_ac_desc = 'ALL' ; }  

                $branch_qry    = $this->db->query("select * from branch_master where branch_code = '$branch_code' ")->getRowArray() ;

                $branch_name   = $branch_qry['branch_name'] ;

                $fin_year      = get_fin_year($ason_date) ; 

                $fin_syymm     = substr($fin_year,0,4).'04' ;

                $start_date    = '01-04-'.substr($fin_year,0,4) ;

              

                $start_date_ymd  = date_conv($start_date,'-') ; 

                $end_date_ymd    = date_conv($ason_date,'-') ; 

              

                $ip_address     = $_SERVER['REMOTE_ADDR'];

                $user_id        = session()->userId;

                $logdt_qry      = $this->db->query("select current_date, current_time, date_format(current_date,'%d-%m-%Y') current_dmydate ")->getRowArray();

                $curr_time      = $logdt_qry['current_time'];

                $curr_date      = $logdt_qry['current_dmydate'];

                $curr_day       = substr($curr_date,0,2) ;

                $curr_month     = substr($curr_date,3,2) ; 

                $curr_year      = substr($curr_date,6,4) ;

                $temp_id        = $user_id."_".$curr_year.$curr_month.$curr_day.str_replace(':','',$curr_time);

              

                $mytemptable = $temp_id."subac_balance" ;

                $this->db->query("drop table IF EXISTS $mytemptable");

                $mytempsql   = "create table $mytemptable(main_ac_code varchar(6), sub_ac_code varchar(6), level_ind char(1), opbal double(13,2), dramt double(13,2), cramt double(13,2), clbal double(13,2)) ";

                $this->db->query($mytempsql) ;

                //$this->temp_db->query($mytempsql) ;

              

                $my_sql1 = "insert into $mytemptable (main_ac_code,sub_ac_code,level_ind,opbal,dramt,cramt,clbal)

                        select a.main_ac_code, a.sub_ac_code, '1', (sum(ifnull(a.amount_dr,0.00) - ifnull(a.amount_cr,0.00))),0,0,(sum(ifnull(a.amount_dr,0.00) - ifnull(a.amount_cr,0.00)))  

                        from sub_account_balance a

                        where a.branch_code = '$branch_code' 

                        and a.fin_year = '$fin_year' 

                        and a.record_code = '01'

                        and a.yyyy_mm = '$fin_syymm'

                        and a.main_ac_code like '$main_ac_code'

                        group by a.main_ac_code, a.sub_ac_code " ;

                $this->db->query($my_sql1) ;



                $my_sql2 = "insert into $mytemptable (main_ac_code,sub_ac_code,level_ind,opbal,dramt,cramt,clbal)

                        select b.main_ac_code, b.sub_ac_code, '2', 0, sum(if(b.dr_cr_ind='D',b.gross_amount,0)),sum(if(b.dr_cr_ind='C',b.gross_amount,0)), sum(if(b.dr_cr_ind='D',b.gross_amount,(0-b.gross_amount)))

                        from ledger_trans_hdr a, ledger_trans_dtl b, sub_account_master c

                        where a.branch_code = '$branch_code' 

                        and a.fin_year = '$fin_year' 

                        and a.doc_date between '$start_date_ymd' and '$end_date_ymd' 

                        and a.status_code = 'C'

                        and a.serial_no = b.ref_ledger_serial_no

                        and b.main_ac_code like '$main_ac_code' 

                        and b.main_ac_code = c.main_ac_code

                        and b.sub_ac_code = c.sub_ac_code 

                        group by b.main_ac_code, b.sub_ac_code " ; 

                $this->db->query($my_sql2)  ;



                $subacbal_sql  = "select a.main_ac_code,a.sub_ac_code,b.main_ac_desc,c.sub_ac_desc,sum(a.opbal) opbalamt, sum(a.dramt) totdramt, sum(a.cramt) totcramt, sum(a.clbal) clbalamt

                            from $mytemptable a, account_master b, sub_account_master c 

                            where a.main_ac_code = b.main_ac_code 

                            and a.main_ac_code = c.main_ac_code 

                            and a.sub_ac_code = c.sub_ac_code

                            group by a.main_ac_code, a.sub_ac_code                           

                            order by a.main_ac_code, c.sub_ac_desc ";

                $subacbal_qry  = $this->db->query($subacbal_sql)->getResultArray();

                $subacbal_cnt  = count($subacbal_qry);



                if(empty($subacbal_qry)) {

                    session()->setFlashdata('message', 'No Records Found !!');

                    return redirect()->to($this->requested_url());

                }



                $params = [

                    'subacbal_cnt' => $subacbal_cnt,

                    'report_desc' => $report_desc,

                    'branch_name' => $branch_name,

                    'ason_date' => $ason_date,

                    'requested_url' => $requested_url,

                ];

                if ($output_type == 'Pdf') {

                    $report_type = 'Pdf'; $dompdf = new \Dompdf\Dompdf(); 

                    $reportHTML = view("pages/Finance/list_of_balance_sub_ac_wise", compact('subacbal_qry', 'params', 'report_type'));

                    $dompdf->loadHtml($reportHTML);

                    $dompdf->setPaper('A4', 'landscape'); // portrait

                    $dompdf->render();

                    $dompdf->stream('abc.pdf', array('Attachment'=>0)); exit;

                } else if($output_type == 'Excel'){

                    $showActionBtns = true;

                    $spreadsheet = new Spreadsheet();

                    $sheet = $spreadsheet->getActiveSheet();

                    $rows = 1;



                    $fileName = $headings = '';

                    $fileName = 'Finance-Balance-Sub-Account-Wise-'.date('d-m-Y').'.xlsx';  

                    $headings = ['Account', 'Sub A/c Description', 'Opening', '', 'Debit', 'Credit', 'Closing', ''];

                    $column = 'A'; $rows++;



                    foreach ($headings as $heading) {

                        $cell = $column . $rows;

                        $sheet->setCellValue($cell, $heading); // Set the cell value



                        // Apply formatting

                        $style = $sheet->getStyle($cell);

                        $style->getFont()->setBold(true);

                        $style->getAlignment()->setHorizontal(Alignment::HORIZONTAL_CENTER);

                        $style->getFill()->setFillType(Fill::FILL_SOLID)->getStartColor()->setRGB('c8d5ef');

                        $style->getBorders()->getAllBorders()->setBorderStyle(\PhpOffice\PhpSpreadsheet\Style\Border::BORDER_THIN); // Add borders

                        ++$column; // Move to the next column

                    } $rows++;



                    $gopbalamt  = 0; 

                    $gtotdramt  = 0; 

                    $gtotcramt  = 0; 

                    $gclbalamt  = 0; 

                    $rowcnt     = 1 ;

                    $report_row = isset($subacbal_qry[$rowcnt-1]) ? $subacbal_qry[$rowcnt-1] : '' ; 

                    $report_cnt = $params['subacbal_cnt'] ;

                    while ($rowcnt <= $report_cnt) {

                        $mopbalamt = 0; 

                        $mtotdramt = 0; 

                        $mtotcramt = 0; 

                        $mclbalamt = 0; 

                        $pmactcd   = $report_row['main_ac_code'] ;

                        $pmactnm   = $report_row['main_ac_desc'] ;

                        $pmactind  = 'Y';

                        while ($pmactcd == $report_row['main_ac_code'] && $rowcnt <= $report_cnt) {

                            if ($pmactind == 'Y') {

                                $sheet->setCellValue('A' . $rows, $pmactnm .' ['.$pmactcd.']');

                                $pmactind = 'N' ;



                                $style = $sheet->getStyle('A' . $rows . ':H' . $rows);

                                $style->getFont()->setBold(true);

                                $style->getBorders()->getRight()->setBorderStyle(\PhpOffice\PhpSpreadsheet\Style\Border::BORDER_THIN); 

                                //$sheet->mergeCells('A' . $rows . ':I' . $rows);

                                $rows++;

                            }

                            $sheet->setCellValue('A' . $rows, $report_row['sub_ac_code']);

                            $sheet->setCellValue('B' . $rows, $report_row['sub_ac_desc']);

                            $sheet->setCellValue('C' . $rows, ($report_row['opbalamt'] != 0) ? number_format(abs($report_row['opbalamt']),2,'.','') : '');

                            $sheet->setCellValue('D' . $rows, ($report_row['opbalamt'] < 0) ? 'CR' : '');

                            $sheet->setCellValue('E' . $rows, ($report_row['totdramt'] > 0) ? $report_row['totdramt'] : '');

                            $sheet->setCellValue('F' . $rows, ($report_row['totcramt'] > 0) ? $report_row['totcramt'] : '');

                            $sheet->setCellValue('G' . $rows, ($report_row['clbalamt'] != 0) ? number_format(abs($report_row['clbalamt']),2,'.','') : '');

                            $sheet->setCellValue('H' . $rows, ($report_row['clbalamt']  < 0) ? 'CR' : '');



                            $mopbalamt = $mopbalamt + $report_row['opbalamt'] ;                   

                            $mtotdramt = $mtotdramt + $report_row['totdramt'] ;                   

                            $mtotcramt = $mtotcramt + $report_row['totcramt'] ;                   

                            $mclbalamt = $mclbalamt + $report_row['clbalamt'] ;                   

                            

                            $report_row = ($rowcnt < $report_cnt) ? $subacbal_qry[$rowcnt] : $report_row;   

                            $rowcnt = $rowcnt + 1 ;



                            $style = $sheet->getStyle('A' . $rows . ':H' . $rows);

                            $style->getBorders()->getRight()->setBorderStyle(\PhpOffice\PhpSpreadsheet\Style\Border::BORDER_THIN); 

                            $rows++;

                        }

                        

                        $sheet->setCellValue('A' . $rows, 'Total');

                        $sheet->setCellValue('C' . $rows, ($mopbalamt != 0) ? number_format(abs($mopbalamt),2,'.','') : ''); 

                        $sheet->setCellValue('D' . $rows, ($mopbalamt < 0) ? 'CR' : ''); 

                        $sheet->setCellValue('E' . $rows, ($mtotdramt > 0) ? number_format($mtotdramt,2,'.','') : ''); 

                        $sheet->setCellValue('F' . $rows, ($mtotcramt > 0) ? number_format($mtotcramt,2,'.','') : ''); 

                        $sheet->setCellValue('G' . $rows, ($mclbalamt != 0) ? number_format(abs($mclbalamt),2,'.','') : ''); 

                        $sheet->setCellValue('H' . $rows, ($mclbalamt < 0) ? 'CR' : ''); 



                        $gopbalamt = $gopbalamt + $mopbalamt ;                   

                        $gtotdramt = $gtotdramt + $mtotdramt ;                   

                        $gtotcramt = $gtotcramt + $mtotcramt ;                   

                        $gclbalamt = $gclbalamt + $mclbalamt ;  

                        

                        $style = $sheet->getStyle('A' . $rows . ':H' . $rows);

                        $style->getFont()->setBold(true);

                        $style->getAlignment()->setHorizontal(Alignment::HORIZONTAL_RIGHT);

                        $style->getBorders()->getAllBorders()->setBorderStyle(\PhpOffice\PhpSpreadsheet\Style\Border::BORDER_THIN); 

                        $style->getBorders()->getBottom()->setBorderStyle(\PhpOffice\PhpSpreadsheet\Style\Border::BORDER_MEDIUM); 

                        $style->getBorders()->getRight()->setBorderStyle(\PhpOffice\PhpSpreadsheet\Style\Border::BORDER_MEDIUM);

                        $style->getBorders()->getTop()->setBorderStyle(\PhpOffice\PhpSpreadsheet\Style\Border::BORDER_MEDIUM);

                        $style->getFill()->setFillType(Fill::FILL_SOLID)->getStartColor()->setRGB('c8efe3');

                        $sheet->mergeCells('A' . $rows . ':B' . $rows);

                        $rows++;

                    }

                    $sheet->setCellValue('A' . $rows, 'GRAND TOTAL');

                    $sheet->setCellValue('C' . $rows, ($gopbalamt != 0) ? number_format(abs($gopbalamt),2,'.','') : ''); 

                    $sheet->setCellValue('D' . $rows, ($gopbalamt < 0) ? 'CR' : ''); 

                    $sheet->setCellValue('E' . $rows, ($gtotdramt > 0) ? number_format($gtotdramt,2,'.','') : ''); 

                    $sheet->setCellValue('F' . $rows, ($gtotcramt > 0) ? number_format($gtotcramt,2,'.','') : ''); 

                    $sheet->setCellValue('G' . $rows, ($gclbalamt != 0) ? number_format(abs($gclbalamt),2,'.','') : ''); 

                    $sheet->setCellValue('H' . $rows, ($gclbalamt < 0) ? 'CR' : '');  



                    $style = $sheet->getStyle('A' . $rows . ':H' . $rows);

                    $style->getFont()->setBold(true);

                    $style->getAlignment()->setHorizontal(Alignment::HORIZONTAL_RIGHT);

                    $style->getBorders()->getAllBorders()->setBorderStyle(\PhpOffice\PhpSpreadsheet\Style\Border::BORDER_THIN); 

                    $style->getBorders()->getBottom()->setBorderStyle(\PhpOffice\PhpSpreadsheet\Style\Border::BORDER_MEDIUM); 

                    $style->getBorders()->getRight()->setBorderStyle(\PhpOffice\PhpSpreadsheet\Style\Border::BORDER_MEDIUM);

                    $style->getBorders()->getTop()->setBorderStyle(\PhpOffice\PhpSpreadsheet\Style\Border::BORDER_MEDIUM);

                    $style->getFill()->setFillType(Fill::FILL_SOLID)->getStartColor()->setRGB('ffe93a');

                    $sheet->mergeCells('A' . $rows . ':B' . $rows);

                    $rows++;



                    $writer = new Xlsx($spreadsheet);

                    $writer->save($fileName);

                    header('Content-Type: application/vnd.ms-excel');

                    header('Content-Disposition: attachment; filename="'.basename($fileName).'"');

                    header('Expires: 0');

                    header('Cache-control: must-revalidate');

                    header('Pragma: public');

                    header('Content-Length:'.filesize($fileName));

                    flush();

                    readfile($fileName); 



                } else return view("pages/Finance/list_of_balance_sub_ac_wise", compact("subacbal_qry", "params"));



            }

        } else {

            $data = [];

            $data = branches(session()->userId);

    

            $curr_finyr = session()->financialYear;

            $data['curr_fyrsdt'] = '01-04-'.substr($curr_finyr,0,4);

            return view("pages/Finance/list_of_balance_sub_ac_wise", compact("data", "displayId"));

        }

    }



    public function list_of_balance_client_wise() {         // pending for unsolved sql query

        $requested_url = session()->requested_end_menu_url;

        $output_type = isset($_REQUEST['output_type']) ? $_REQUEST['output_type'] : '';

        $displayId = ['client_help_id' => '4072'];

        $showActionBtns = false;



        if($this->request->getMethod() == "post") {

            if($output_type == 'Report' || $output_type == 'Pdf' || $output_type == 'Excel') {

                session()->setFlashdata('message', 'Working on this page !!');

                return redirect()->to($this->requested_url());

                $report_desc   = "LIST OF BALANCE (CLIENT-wise)" ;

                $branch_code   = $_REQUEST['branch_code'] ;

                $ason_date     = $_REQUEST['ason_date'] ;       

                $client_code   = $_REQUEST['client_code'] ;   if($client_code == '')  { $client_code = '%' ; }

                $clinet_name   = $_REQUEST['client_name'] ;   if($client_code == '%') { $client_name = 'ALL' ; }  

                $form_report_type   = $_REQUEST['report_type'] ;  

                $branch_qry    = $this->db->query("select * from branch_master where branch_code = '$branch_code' ")->getRowArray() ;

                $branch_name   = $branch_qry['branch_name'] ;

                $fin_year      = get_fin_year($ason_date) ; 

                $fin_syymm     = substr($fin_year,0,4).'04' ;

                $start_date    = '01-04-'.substr($fin_year,0,4) ;

              

                $start_date_ymd  = date_conv($start_date,'-') ; 

                $end_date_ymd    = date_conv($ason_date,'-') ; 

              

                $user_id        = session()->userId;

                $logdt_qry      = $this->db->query("select current_date, current_time, date_format(current_date,'%d-%m-%Y') current_dmydate ")->getRowArray();

                $curr_time      = $logdt_qry['current_time'];

                $curr_date      = $logdt_qry['current_dmydate'];

                $curr_day       = substr($curr_date,0,2) ;

                $curr_month     = substr($curr_date,3,2) ; 

                $curr_year      = substr($curr_date,6,4) ;

                $temp_id        = $user_id."_".$curr_year.$curr_month.$curr_day.str_replace(':','',$curr_time);



                $mytemptable = $temp_id."client_balance" ;

                $this->db->query("drop table IF EXISTS $mytemptable");

                $mytempsql   = "create table $mytemptable(client_code varchar(6), matter_code varchar(6), level_ind char(1), opbal double(13,2), dramt double(13,2), cramt double(13,2), clbal double(13,2)) ";

                $this->db->query($mytempsql) ;

                

                $my_sql1 = "insert into $mytemptable (client_code,matter_code,level_ind,opbal,dramt,cramt,clbal)

                        select b.client_code, a.matter_code, '1', (sum(ifnull(a.amount_dr,0.00) - ifnull(a.amount_cr,0.00))),0,0,(sum(ifnull(a.amount_dr,0.00) - ifnull(a.amount_cr,0.00)))  

                        from matter_balance a, fileinfo_header b,ledger_trans_dtl c

                        where a.branch_code = '$branch_code' 

                        and a.fin_year = '$fin_year' 

                        and a.record_code = '01'

                        and a.yyyy_mm = '$fin_syymm'

                        and a.matter_code = b.matter_code

                        and c.matter_code = b.matter_code

                        and b.client_code like '$client_code' 

                        group by c.main_ac_code, a.matter_code" ;

                $this->db->query($my_sql1)  ; 

                

                // $my_sql2 = "insert into $mytemptable (client_code,matter_code,level_ind,opbal,dramt,cramt,clbal)

                //         select b.client_code, b.matter_code, '2', 0, sum(if(b.dr_cr_ind='D',b.gross_amount,0)),sum(if(b.dr_cr_ind='C',b.gross_amount,0)), sum(if(b.dr_cr_ind='D',b.gross_amount,(0-b.gross_amount)))

                //         from ledger_trans_hdr a, ledger_trans_dtl b 

                //         where a.branch_code = '$branch_code' 

                //         and a.fin_year = '$fin_year' 

                //         and a.doc_date between '$start_date_ymd' and '$end_date_ymd' 

                //         and a.status_code = 'C'

                //         and a.serial_no = b.ref_ledger_serial_no

                //         and b.client_code like '$client_code' 

                //         group by b.client_code, b.matter_code limit 1000" ;

                // $this->db->query($my_sql2)  ;

                

                $clientbal_sql = '';

                switch($form_report_type) {

                    case 'D' :

                        $clientbal_sql  = "select a.client_code,a.matter_code,b.client_name,if(c.matter_desc1 != '', concat(c.matter_desc1,' : ',c.matter_desc2), c.matter_desc2) matter_desc,sum(a.opbal) opbalamt, sum(a.dramt) totdramt, sum(a.cramt) totcramt, sum(a.clbal) clbalamt

                                    from $mytemptable a, client_master b, fileinfo_header c 

                                    where a.client_code = b.client_code 

                                    and a.matter_code = c.matter_code 

                                    group by a.client_code, a.matter_code 

                                    order by b.client_name, a.matter_code limit 100" ;

                    break;

                    case 'S' :

                        $clientbal_sql  = "select a.client_code,b.client_name,sum(a.opbal) opbalamt, sum(a.dramt) totdramt, sum(a.cramt) totcramt, sum(a.clbal) clbalamt

                                    from $mytemptable a, client_master b 

                                    where a.client_code = b.client_code 

                                    group by a.client_code 

                                    order by b.client_name " ;

                    break;

                }

                        

                $clientbal_qry  = $this->db->query($clientbal_sql)->getResultArray();

                $clientbal_cnt  = count($clientbal_qry);

        //echo '<pre>';print_r($clientbal_qry);

                if(empty($clientbal_qry)) {

                    session()->setFlashdata('message', 'No Records Found !!');

                    return redirect()->to($this->requested_url());

                }



                $params = [

                    'clientbal_cnt' => $clientbal_cnt,

                    'report_desc' => $report_desc,

                    'branch_name' => $branch_name,

                    'ason_date' => $ason_date,

                    'requested_url' => $requested_url,

                ];



                if ($output_type == 'Pdf') {

                    $report_type = 'Pdf'; $dompdf = new \Dompdf\Dompdf(); 

                    $reportHTML = view("pages/Finance/list_of_balance_client_wise", compact('clientbal_qry', 'params', 'form_report_type', 'report_type'));

                    $dompdf->loadHtml($reportHTML);

                    $dompdf->setPaper('A4', 'landscape'); // portrait

                    $dompdf->render();

                    $dompdf->stream('abc.pdf', array('Attachment'=>0)); exit;

                } else return view("pages/Finance/list_of_balance_client_wise", compact("clientbal_qry", "params", "form_report_type"));

            }

        } else {

            $data = [];

            $data = branches(session()->userId);



            return view("pages/Finance/list_of_balance_client_wise", compact("data", "displayId"));

        }

    }



    public function list_of_advances_received() {

        $requested_url = session()->requested_end_menu_url;

        $output_type = isset($_REQUEST['output_type']) ? $_REQUEST['output_type'] : '';

        $displayId = ['payee_help_id' => '4549'];

        $showActionBtns = false;



        if($this->request->getMethod() == "post") {

            if($output_type == 'Report' || $output_type == 'Pdf' || $output_type == 'Excel') {

                $report_desc   = 'LIST OF ADVANCE RECEIVED DURING A PERIOD' ;



                $advance_type = $_REQUEST['advance_type'] ;

                $branch_code  = $_REQUEST['branch_code'] ;

                $start_date   = $_REQUEST['start_date'] ;   $start_date_ymd = date_conv($start_date,'-');

                $end_date     = $_REQUEST['end_date'] ;     $end_date_ymd   = date_conv($end_date,'-') ;  

                $payee_type   = $_REQUEST['payee_type'] ;  

                $payee_code   = $_REQUEST['payee_code'] ;   if($payee_code == '') { $payee_code = '%' ; }

                $payee_name   = $_REQUEST['payee_name'] ;   if($payee_name == '') { $payee_name = 'ALL' ; }

                //

                $period_desc  = $start_date.' TO '.$end_date ; 

                //

                $branch_qry   = $this->db->query("select branch_name from branch_master where branch_code = '$branch_code' ")->getRowArray() ;

                $branch_name  = $branch_qry['branch_name'] ;



                //-------------------------------------------------------------

                $trans_sql    = "select a.*,b.doc_date,b.doc_no,b.doc_type,b.daybook_code

                            from advance_details a, ledger_trans_hdr b

                            where a.branch_code like '$branch_code'

                            and a.advance_type = '$advance_type'

                            and a.payee_payer_type like '$payee_type'

                            and a.payee_payer_code like '$payee_code' 

                            and a.ref_ledger_serial_no = b.serial_no

                            and b.doc_date between '$start_date_ymd'  and '$end_date_ymd'  

                            order by a.payee_payer_type,a.payee_payer_name,b.doc_date,b.doc_no " ;

                $trans_qry  = $this->db->query($trans_sql)->getResultArray();

                // echo '<pre>';print_r($trans_qry);die;

                $trans_cnt  = count($trans_qry);



                if(empty($trans_qry)) {

                    session()->setFlashdata('message', 'No Records Found !!');

                    return redirect()->to($this->requested_url());

                }



                $params = [

                    'trans_cnt' => $trans_cnt,

                    'report_desc' => $report_desc,

                    'branch_name' => $branch_name,

                    'period_desc' => $period_desc,

                    'payee_type' => $payee_type,

                    'payee_name' => $payee_name,

                    'requested_url' => $requested_url,

                ];



                if ($output_type == 'Pdf') {

                    $report_type = 'Pdf'; $dompdf = new \Dompdf\Dompdf(); 

                    $reportHTML = view("pages/Finance/list_of_advances_received", compact('trans_qry', 'params', 'report_type'));

                    $dompdf->loadHtml($reportHTML);

                    $dompdf->setPaper('A4', 'landscape'); // portrait

                    $dompdf->render();

                    $dompdf->stream('abc.pdf', array('Attachment'=>0)); exit;

                } else if($output_type == 'Excel'){

                    $showActionBtns = true;

                    $spreadsheet = new Spreadsheet();

                    $sheet = $spreadsheet->getActiveSheet();

                    $rows = 1;



                    $fileName = $headings = '';

                    $fileName = 'Finance-Advances-Received-'.date('d-m-Y').'.xlsx';  

                    $headings = ['Date', 'DB', 'Type', 'Doc#', 'Cheque No', 'Cheque Date', 'Gross', 'TDS', 'Net'];

                    $column = 'A'; $rows++;



                    foreach ($headings as $heading) {

                        $cell = $column . $rows;

                        $sheet->setCellValue($cell, $heading); // Set the cell value



                        // Apply formatting

                        $style = $sheet->getStyle($cell);

                        $style->getFont()->setBold(true);

                        $style->getAlignment()->setHorizontal(Alignment::HORIZONTAL_CENTER);

                        $style->getFill()->setFillType(Fill::FILL_SOLID)->getStartColor()->setRGB('c8d5ef');

                        $style->getBorders()->getAllBorders()->setBorderStyle(\PhpOffice\PhpSpreadsheet\Style\Border::BORDER_THIN); // Add borders

                        ++$column; // Move to the next column

                    } $rows++;



                    $tgrsamt = 0; 

                    $ttaxamt = 0; 

                    $tnetamt = 0 ;

                    $rowcnt     = 1 ;

                    $report_row = isset($trans_qry[$rowcnt-1]) ? $trans_qry[$rowcnt-1] : '' ;

                    $report_cnt = $params['trans_cnt'] ;

                    while ($rowcnt <= $report_cnt) {

                        $pgrsamt = 0; 

                        $ptaxamt = 0; 

                        $pnetamt = 0 ;

                        $ppayind = 'Y';

                        $ppaycd  = $report_row['payee_payer_code'];

                        $ppaynm  = $report_row['payee_payer_name'];

                        while ($ppaycd == $report_row['payee_payer_code'] && $rowcnt <= $report_cnt) {

                            if ($ppayind == 'Y') {

                                $sheet->setCellValue('A' . $rows, strtoupper($ppaynm));

                                $ppayind = 'N' ;



                                $style = $sheet->getStyle('A' . $rows . ':I' . $rows);

                                $style->getFont()->setBold(true);

                                $style->getBorders()->getRight()->setBorderStyle(\PhpOffice\PhpSpreadsheet\Style\Border::BORDER_THIN); 

                                //$sheet->mergeCells('A' . $rows . ':I' . $rows);

                                $rows++;

                            }

                            $sheet->setCellValue('A' . $rows, date_conv($report_row['doc_date'],'-'));

                            $sheet->setCellValue('B' . $rows, $report_row['daybook_code']);

                            $sheet->setCellValue('C' . $rows, $report_row['doc_type']);

                            $sheet->setCellValue('D' . $rows, $report_row['doc_no']);

                            $sheet->setCellValue('E' . $rows, $report_row['instrument_no']);

                            $sheet->setCellValue('F' . $rows, ($report_row['instrument_dt'] != '' && $report_row['instrument_dt'] != '0000-00-00') ? date_conv($report_row['instrument_dt'],'-') : '' );

                            $sheet->setCellValue('G' . $rows, ($report_row['gross_amount'] > 0) ? $report_row['gross_amount'] : '');

                            $sheet->setCellValue('H' . $rows, ($report_row['tax_amount']   > 0) ? $report_row['tax_amount'] : '');

                            $sheet->setCellValue('I' . $rows, ($report_row['net_amount']   > 0) ? $report_row['net_amount'] : '');



                            $pgrsamt = $pgrsamt + $report_row['gross_amount'] ;                   

                            $ptaxamt = $ptaxamt + $report_row['tax_amount'] ;                   

                            $pnetamt = $pnetamt + $report_row['net_amount'] ;                   

                            

                            $report_row = ($rowcnt < $report_cnt) ? $trans_qry[$rowcnt] : $report_row;

                            $rowcnt = $rowcnt + 1 ;



                            $style = $sheet->getStyle('A' . $rows . ':I' . $rows);

                            $style->getBorders()->getRight()->setBorderStyle(\PhpOffice\PhpSpreadsheet\Style\Border::BORDER_THIN); 

                            $rows++;

                        }

                        $tgrsamt = $tgrsamt + $pgrsamt ;                   

                        $ttaxamt = $ttaxamt + $ptaxamt ;                   

                        $tnetamt = $tnetamt + $pnetamt ;

                        $sheet->setCellValue('A' . $rows, 'Total');

                        $sheet->setCellValue('G' . $rows, ($pgrsamt > 0) ? number_format($pgrsamt,2,'.','') : ''); 

                        $sheet->setCellValue('H' . $rows, ($ptaxamt > 0) ? number_format($ptaxamt,2,'.','') : ''); 

                        $sheet->setCellValue('I' . $rows, ($pnetamt > 0) ? number_format($pnetamt,2,'.','') : ''); 



                        $style = $sheet->getStyle('A' . $rows . ':I' . $rows);

                        $style->getFont()->setBold(true);

                        $style->getAlignment()->setHorizontal(Alignment::HORIZONTAL_RIGHT);

                        $style->getBorders()->getAllBorders()->setBorderStyle(\PhpOffice\PhpSpreadsheet\Style\Border::BORDER_THIN); 

                        $style->getBorders()->getBottom()->setBorderStyle(\PhpOffice\PhpSpreadsheet\Style\Border::BORDER_MEDIUM); 

                        $style->getBorders()->getRight()->setBorderStyle(\PhpOffice\PhpSpreadsheet\Style\Border::BORDER_MEDIUM);

                        $style->getBorders()->getTop()->setBorderStyle(\PhpOffice\PhpSpreadsheet\Style\Border::BORDER_MEDIUM);

                        $style->getFill()->setFillType(Fill::FILL_SOLID)->getStartColor()->setRGB('c8efe3');

                        $sheet->mergeCells('A' . $rows . ':F' . $rows);

                        $rows++;

                    }

                    $sheet->setCellValue('A' . $rows, 'GRAND TOTAL');

                    $sheet->setCellValue('G' . $rows, ($tgrsamt > 0) ? number_format($tgrsamt,2,'.','') : ''); 

                    $sheet->setCellValue('H' . $rows, ($ttaxamt > 0) ? number_format($ttaxamt,2,'.','') : ''); 

                    $sheet->setCellValue('I' . $rows, ($tnetamt > 0) ? number_format($tnetamt,2,'.','') : ''); 



                    $style = $sheet->getStyle('A' . $rows . ':I' . $rows);

                    $style->getFont()->setBold(true);

                    $style->getAlignment()->setHorizontal(Alignment::HORIZONTAL_RIGHT);

                    $style->getBorders()->getAllBorders()->setBorderStyle(\PhpOffice\PhpSpreadsheet\Style\Border::BORDER_THIN); 

                    $style->getBorders()->getBottom()->setBorderStyle(\PhpOffice\PhpSpreadsheet\Style\Border::BORDER_MEDIUM); 

                    $style->getBorders()->getRight()->setBorderStyle(\PhpOffice\PhpSpreadsheet\Style\Border::BORDER_MEDIUM);

                    $style->getBorders()->getTop()->setBorderStyle(\PhpOffice\PhpSpreadsheet\Style\Border::BORDER_MEDIUM);

                    $style->getFill()->setFillType(Fill::FILL_SOLID)->getStartColor()->setRGB('ffe93a');

                    $sheet->mergeCells('A' . $rows . ':F' . $rows);

                    $rows++;



                    $writer = new Xlsx($spreadsheet);

                    $writer->save($fileName);

                    header('Content-Type: application/vnd.ms-excel');

                    header('Content-Disposition: attachment; filename="'.basename($fileName).'"');

                    header('Expires: 0');

                    header('Cache-control: must-revalidate');

                    header('Pragma: public');

                    header('Content-Length:'.filesize($fileName));

                    flush();

                    readfile($fileName); 



                }else return view("pages/Finance/list_of_advances_received", compact('trans_qry', 'params'));

            }



        }else {

            $data = [];

            $data = branches(session()->userId);

    

            $curr_finyr = session()->financialYear;

            $data['curr_fyrsdt'] = '01-04-'.substr($curr_finyr,0,4);

            $data['advance_type'] = 'R';

            return view("pages/Finance/list_of_advances_received", compact("data", "displayId"));

        }

    }



    public function list_of_advances_paid() {

        $requested_url = session()->requested_end_menu_url;

        $output_type = isset($_REQUEST['output_type']) ? $_REQUEST['output_type'] : '';

        $displayId = ['payee_help_id' => '4226'];

        $showActionBtns = false;



        if($this->request->getMethod() == "post") {

            if($output_type == 'Report' || $output_type == 'Pdf' || $output_type == 'Excel') {

                $report_desc   = 'LIST OF ADVANCE PAID DURING A PERIOD' ;



                $advance_type = $_REQUEST['advance_type'] ;

                $branch_code  = $_REQUEST['branch_code'] ;

                $start_date   = $_REQUEST['start_date'] ;   $start_date_ymd = date_conv($start_date,'-');

                $end_date     = $_REQUEST['end_date'] ;     $end_date_ymd   = date_conv($end_date,'-') ;  

                $payee_type   = $_REQUEST['payee_type'] ;  

                $payee_code   = $_REQUEST['payee_code'] ;   if($payee_code == '') { $payee_code = '%' ; }

                $payee_name   = $_REQUEST['payee_name'] ;   if($payee_name == '') { $payee_name = 'ALL' ; }

                //

                $period_desc  = $start_date.' TO '.$end_date ; 

                //

                $branch_qry   = $this->db->query("select branch_name from branch_master where branch_code = '$branch_code' ")->getRowArray() ;

                $branch_name  = $branch_qry['branch_name'] ;

              

                //-------------------------------------------------------------

                $trans_sql    = "select a.*,b.doc_date,b.doc_no,b.doc_type,b.daybook_code

                                   from advance_details a, ledger_trans_hdr b

                                  where a.branch_code          like '$branch_code'

                                    and a.advance_type            = '$advance_type'

                                    and a.payee_payer_type     like '$payee_type'

                                    and a.payee_payer_code     like '$payee_code' 

                                    and a.ref_ledger_serial_no    = b.serial_no

                                    and b.doc_date          between '$start_date_ymd'  and '$end_date_ymd'  

                                  order by a.payee_payer_type,a.payee_payer_name,b.doc_date,b.doc_no " ;

                $trans_qry  = $this->db->query($trans_sql)->getResultArray() ;

                // echo '<pre>';print_r($trans_qry);die;

                $trans_cnt  = count($trans_qry);



                if(empty($trans_qry)) {

                    session()->setFlashdata('message', 'No Records Found !!');

                    return redirect()->to($this->requested_url());

                }



                $params = [

                    'trans_cnt' => $trans_cnt,

                    'report_desc' => $report_desc,

                    'branch_name' => $branch_name,

                    'period_desc' => $period_desc,

                    'payee_type' => $payee_type,

                    'payee_name' => $payee_name,

                    'requested_url' => $requested_url,

                ];



                if ($output_type == 'Pdf') {

                    $report_type = 'Pdf'; $dompdf = new \Dompdf\Dompdf(); 

                    $reportHTML = view("pages/Finance/list_of_advances_paid", compact('trans_qry', 'params', 'report_type'));

                    $dompdf->loadHtml($reportHTML);

                    $dompdf->setPaper('A4', 'landscape'); // portrait

                    $dompdf->render();

                    $dompdf->stream('abc.pdf', array('Attachment'=>0)); exit;

                } else if($output_type == 'Excel') {



                    $showActionBtns = true;

                    $spreadsheet = new Spreadsheet();

                    $sheet = $spreadsheet->getActiveSheet();

                    $rows = 1;



                    $fileName = $headings = '';

                    $fileName = 'Finance-Advances-Paid-'.date('d-m-Y').'.xlsx';  

                    $headings = ['Date', 'DB', 'Type', 'Doc#', 'Cheque No', 'Cheque Date', 'Gross', 'TDS', 'Net'];

                    $column = 'A'; $rows++;



                    foreach ($headings as $heading) {

                        $cell = $column . $rows;

                        $sheet->setCellValue($cell, $heading); // Set the cell value



                        // Apply formatting

                        $style = $sheet->getStyle($cell);

                        $style->getFont()->setBold(true);

                        $style->getAlignment()->setHorizontal(Alignment::HORIZONTAL_CENTER);

                        $style->getFill()->setFillType(Fill::FILL_SOLID)->getStartColor()->setRGB('c8d5ef');

                        $style->getBorders()->getAllBorders()->setBorderStyle(\PhpOffice\PhpSpreadsheet\Style\Border::BORDER_THIN); // Add borders

                        ++$column; // Move to the next column

                    } $rows++;



                    $tgrsamt = 0; 

                    $ttaxamt = 0; 

                    $tnetamt = 0 ;

                    $rowcnt     = 1 ;

                    $report_row = isset($trans_qry[$rowcnt-1]) ? $trans_qry[$rowcnt-1] : '' ;

                    $report_cnt = $params['trans_cnt'] ;

                    while ($rowcnt <= $report_cnt) {

                        $pgrsamt = 0; 

                        $ptaxamt = 0; 

                        $pnetamt = 0 ;

                        $ppayind = 'Y';

                        $ppaycd  = $report_row['payee_payer_code'];

                        $ppaynm  = $report_row['payee_payer_name'];

                        while ($ppaycd == $report_row['payee_payer_code'] && $rowcnt <= $report_cnt) {

                            if ($ppayind == 'Y') {

                                $sheet->setCellValue('A' . $rows, strtoupper($ppaynm));

                                $ppayind = 'N' ;



                                $style = $sheet->getStyle('A' . $rows . ':I' . $rows);

                                $style->getFont()->setBold(true);

                                $style->getBorders()->getRight()->setBorderStyle(\PhpOffice\PhpSpreadsheet\Style\Border::BORDER_THIN); 

                                //$sheet->mergeCells('A' . $rows . ':I' . $rows);

                                $rows++;

                            }

                            $sheet->setCellValue('A' . $rows, date_conv($report_row['doc_date'],'-'));

                            $sheet->setCellValue('B' . $rows, $report_row['daybook_code']);

                            $sheet->setCellValue('C' . $rows, $report_row['doc_type']);

                            $sheet->setCellValue('D' . $rows, $report_row['doc_no']);

                            $sheet->setCellValue('E' . $rows, $report_row['instrument_no']);

                            $sheet->setCellValue('F' . $rows, ($report_row['instrument_dt'] != '0000-00-00') ? date_conv($report_row['instrument_dt'],'-') : '' );

                            $sheet->setCellValue('G' . $rows, ($report_row['gross_amount'] > 0) ? $report_row['gross_amount'] : '');

                            $sheet->setCellValue('H' . $rows, ($report_row['tax_amount']   > 0) ? $report_row['tax_amount'] : '');

                            $sheet->setCellValue('I' . $rows, ($report_row['net_amount']   > 0) ? $report_row['net_amount'] : '');



                            $pgrsamt = $pgrsamt + $report_row['gross_amount'] ;                   

                            $ptaxamt = $ptaxamt + $report_row['tax_amount'] ;                   

                            $pnetamt = $pnetamt + $report_row['net_amount'] ;                   

                            

                            $report_row = ($rowcnt < $report_cnt) ? $trans_qry[$rowcnt] : $report_row;

                            $rowcnt = $rowcnt + 1 ;



                            $style = $sheet->getStyle('A' . $rows . ':I' . $rows);

                            $style->getBorders()->getRight()->setBorderStyle(\PhpOffice\PhpSpreadsheet\Style\Border::BORDER_THIN); 

                            $rows++;

                        }

                        $tgrsamt = $tgrsamt + $pgrsamt ;                   

                        $ttaxamt = $ttaxamt + $ptaxamt ;                   

                        $tnetamt = $tnetamt + $pnetamt ;

                        $sheet->setCellValue('A' . $rows, 'Total');

                        $sheet->setCellValue('G' . $rows, ($pgrsamt > 0) ? number_format($pgrsamt,2,'.','') : ''); 

                        $sheet->setCellValue('H' . $rows, ($ptaxamt > 0) ? number_format($ptaxamt,2,'.','') : ''); 

                        $sheet->setCellValue('I' . $rows, ($pnetamt > 0) ? number_format($pnetamt,2,'.','') : ''); 



                        $style = $sheet->getStyle('A' . $rows . ':I' . $rows);

                        $style->getFont()->setBold(true);

                        $style->getAlignment()->setHorizontal(Alignment::HORIZONTAL_RIGHT);

                        $style->getBorders()->getAllBorders()->setBorderStyle(\PhpOffice\PhpSpreadsheet\Style\Border::BORDER_THIN); 

                        $style->getBorders()->getBottom()->setBorderStyle(\PhpOffice\PhpSpreadsheet\Style\Border::BORDER_MEDIUM); 

                        $style->getBorders()->getRight()->setBorderStyle(\PhpOffice\PhpSpreadsheet\Style\Border::BORDER_MEDIUM);

                        $style->getBorders()->getTop()->setBorderStyle(\PhpOffice\PhpSpreadsheet\Style\Border::BORDER_MEDIUM);

                        $style->getFill()->setFillType(Fill::FILL_SOLID)->getStartColor()->setRGB('c8efe3');

                        $sheet->mergeCells('A' . $rows . ':F' . $rows);

                        $rows++;

                    }

                    $sheet->setCellValue('A' . $rows, 'GRAND TOTAL');

                    $sheet->setCellValue('G' . $rows, ($tgrsamt > 0) ? number_format($tgrsamt,2,'.','') : ''); 

                    $sheet->setCellValue('H' . $rows, ($ttaxamt > 0) ? number_format($ttaxamt,2,'.','') : ''); 

                    $sheet->setCellValue('I' . $rows, ($tnetamt > 0) ? number_format($tnetamt,2,'.','') : ''); 



                    $style = $sheet->getStyle('A' . $rows . ':I' . $rows);

                    $style->getFont()->setBold(true);

                    $style->getAlignment()->setHorizontal(Alignment::HORIZONTAL_RIGHT);

                    $style->getBorders()->getAllBorders()->setBorderStyle(\PhpOffice\PhpSpreadsheet\Style\Border::BORDER_THIN); 

                    $style->getBorders()->getBottom()->setBorderStyle(\PhpOffice\PhpSpreadsheet\Style\Border::BORDER_MEDIUM); 

                    $style->getBorders()->getRight()->setBorderStyle(\PhpOffice\PhpSpreadsheet\Style\Border::BORDER_MEDIUM);

                    $style->getBorders()->getTop()->setBorderStyle(\PhpOffice\PhpSpreadsheet\Style\Border::BORDER_MEDIUM);

                    $style->getFill()->setFillType(Fill::FILL_SOLID)->getStartColor()->setRGB('ffe93a');

                    $sheet->mergeCells('A' . $rows . ':F' . $rows);

                    $rows++;



                    $writer = new Xlsx($spreadsheet);

                    $writer->save($fileName);

                    header('Content-Type: application/vnd.ms-excel');

                    header('Content-Disposition: attachment; filename="'.basename($fileName).'"');

                    header('Expires: 0');

                    header('Cache-control: must-revalidate');

                    header('Pragma: public');

                    header('Content-Length:'.filesize($fileName));

                    flush();

                    readfile($fileName); 



                }else return view("pages/Finance/list_of_advances_paid", compact("trans_qry", "params"));

            }

        } else {

            $data = [];

            $data = branches(session()->userId);

    

            $curr_finyr = session()->financialYear;

            $data['curr_fyrsdt'] = '01-04-'.substr($curr_finyr,0,4);

            $data['advance_type'] = 'P';

            return view("pages/Finance/list_of_advances_paid", compact("data", "displayId"));

        }

    }



    public function courtwise_unbilled_expenses() {

        $requested_url = session()->requested_end_menu_url;

        $output_type = isset($_REQUEST['output_type']) ? $_REQUEST['output_type'] : '';

        $displayId = ['client_help_id' => '4072', 'matter_help_id' => '4220', 'court_help_id' => '4221', 'initial_help_id' => '4191'];

        $showActionBtns = false;



        if($this->request->getMethod() == "post") {

            if($output_type == 'Report' || $output_type == 'Pdf' || $output_type == 'Excel') {



                $report_desc      = "RECEIVER REMUNERATION : COURT/CLIENT/MATTER/INITAL-WISE (DETAILS)" ;

                //$ason_date       = $_REQUEST['ason_date'] ;

                $branch_code     = $_REQUEST['branch_code'] ;

                $start_date      = $_REQUEST['start_date'] ;      if($start_date != '')   { $start_date_ymd = date_conv($start_date); } else { $start_date_ymd = '1901-01-01'; }

                $end_date        = $_REQUEST['end_date'] ;        if($end_date   != '')   { $end_date_ymd   = date_conv($end_date);   } else { $end_date_ymd   = $global_sysdate ; }

                $court_code      = $_REQUEST['court_code'] ;      if(empty($court_code))  { $court_code   = '%' ; }

                $court_name      = $_REQUEST['court_name'] ;     

                $client_code     = $_REQUEST['client_code'] ;     if(empty($client_code)) { $client_code  = '%' ; }

                $client_name     = $_REQUEST['client_name'] ;

                $client_name     = str_replace('_|_', '&', $client_name) ;

                $client_name     = str_replace('-|-', "'", $client_name) ;

                $matter_code     = $_REQUEST['matter_code'] ;     if(empty($matter_code)) { $matter_code  = '%' ; }

                $matter_desc     = $_REQUEST['matter_desc'] ;

                $initial_code    = $_REQUEST['initial_code'] ;    if(empty($initial_code)) { $initial_code = '%' ; }

                $initial_name    = $_REQUEST['initial_name'] ;    

              

                $report_type     = $_REQUEST['report_type'] ;

                $branch_qry    = $this->db->query("select * from branch_master where branch_code = '$branch_code' ")->getRowArray() ;

                $branch_name   = $branch_qry['branch_name'] ;

              

                if($start_date == '')  {$period_desc = "UPTO ".$end_date ;} else {$period_desc = $start_date.' - '.$end_date ;}

              

                if($court_code  == '%') { $court_heading   = 'COURT : ALL'  ; } else { $court_heading   = 'COURT : SELECTIVE'  ; }

                if($client_code == '%') { $client_heading  = 'CLIENT : ALL' ; } else { $client_heading  = 'CLIENT : SELECTIVE' ; }

                if($matter_code == '%') { $matter_heading  = 'MATTER : ALL' ; } else { $matter_heading  = 'MATTER : SELECTIVE' ; }

                if($initial_code == '%') { $initial_heading  = 'INITIAL : ALL' ; } else { $initial_heading  = 'INITIAL : SELECTIVE' ; }

              

                if($client_code == '%') { $client_name     = 'ALL' ; } else { $client_name     = $client_name ; }

              

                $report_sub_desc = '[ '.$court_heading.' / '.$client_heading.' / '.$matter_heading.' / '.$initial_heading.' ]' ;

              

                $bill_sql  = "select e.doc_no, e.doc_date,e.instrument_no,e.instrument_dt,c.court_code,e.serial_no,f.main_ac_code,f.client_code,b.client_name, concat(c.matter_desc1,' ',c.matter_desc2) matter_desc, f.matter_code, c.initial_code, f.narration, f.net_amount, d.code_desc court_name

                            from ledger_trans_hdr e, ledger_trans_dtl f, client_master b, fileinfo_header c 

                            left outer join expense_detail t on t.matter_code = c.matter_code and t.expense_code in ('A11','B04') 

                            left outer join code_master d on d.code_code = c.court_code and d.type_code  = '001'   

                            where e.branch_code             like '$branch_code' 

                            and f.client_code             like '$client_code'

                            and f.matter_code             like '$matter_code' 

                            and e.serial_no               = f.ref_ledger_serial_no 

                            and e.doc_date               between '$start_date_ymd' and '$end_date_ymd'

                            and f.client_code             = b.client_code 

                            and f.matter_code             = c.matter_code 

                            and c.initial_code            like '$initial_code'

                            and f.main_ac_code            = '7021' 

                            and t.ref_billinfo_serial_no  IS NULL

                            and t.ref_ledger_serial_no    = f.ref_ledger_serial_no

                            and c.court_code               like '$court_code' 

                            and c.court_code              = d.code_code 

                                order by e.doc_date " ;  

                $bill_qry  = $this->db->query($bill_sql)->getResultArray() ;

                $bill_cnt  = count($bill_qry);



                if(empty($bill_qry)) {

                    session()->setFlashdata('message', 'No Records Found !!');

                    return redirect()->to($this->requested_url());

                }



                $params = [

                    'bill_cnt' => $bill_cnt,

                    'report_sub_desc' => $report_sub_desc,

                    'branch_name' => $branch_name,

                    'period_desc' => $period_desc,

                    'report_desc' => $report_desc,

                    'client_name' => $client_name,

                    'court_name' => $court_name,

                    'initial_name' => $initial_name,

                    'requested_url' => $requested_url,

                ];



                if ($output_type == 'Pdf') {

                    $report_type = 'Pdf'; $dompdf = new \Dompdf\Dompdf(); 

                    $reportHTML = view("pages/Finance/courtwise_unbilled_expenses", compact('bill_qry', 'params', 'report_type'));

                    $dompdf->loadHtml($reportHTML);

                    $dompdf->setPaper('A4', 'landscape'); // portrait

                    $dompdf->render();

                    $dompdf->stream('abc.pdf', array('Attachment'=>0)); exit;

                } else if($output_type == 'Excel') {



                    $showActionBtns = true;

                    $spreadsheet = new Spreadsheet();

                    $sheet = $spreadsheet->getActiveSheet();

                    $rows = 1;



                    $fileName = $headings = '';

                    $fileName = 'Finance-Courtwise-Unbillied-Expenses-'.date('d-m-Y').'.xlsx';  

                    $headings = ['Doc No', 'Doc Date', 'Cheque No', 'Cheque Date', 'Client / Matter / Narration', 'Amount (Rs.)'];

                    $column = 'A'; $rows++;



                    foreach ($headings as $heading) {

                        $cell = $column . $rows;

                        $sheet->setCellValue($cell, $heading); // Set the cell value



                        // Apply formatting

                        $style = $sheet->getStyle($cell);

                        $style->getFont()->setBold(true);

                        $style->getAlignment()->setHorizontal(Alignment::HORIZONTAL_CENTER);

                        $style->getFill()->setFillType(Fill::FILL_SOLID)->getStartColor()->setRGB('c8d5ef');

                        $style->getBorders()->getAllBorders()->setBorderStyle(\PhpOffice\PhpSpreadsheet\Style\Border::BORDER_THIN); // Add borders

                        ++$column; // Move to the next column

                    } $rows++;



                    $tbilamt = 0; 

                    $tcolamt = 0; 

                    $tdefamt = 0; 

                    $tbalamt = 0; 

                    $ltotamt = 0; 

                    $ttotamt  = 0; 

                    $rowcnt     = 1 ;

                    $report_row = isset($bill_qry[$rowcnt-1]) ? $bill_qry[$rowcnt-1] : '' ;  

                    $report_cnt = $params['bill_cnt'] ;

                    while ($rowcnt <= $report_cnt) {

                        $cbilamt   = 0; 

                        $ccolamt   = 0; 

                        $cdefamt   = 0; 

                        $cbalamt   = 0; 

                        $pcourtind = 'Y' ;

                        $pcourtcd  = $report_row['court_code'] ;

                        $pcourtnm  = $report_row['court_name'] ;

                        while ($pcourtcd == $report_row['court_code'] && $rowcnt <= $report_cnt) {

                            if ($pcourtind == 'Y') {

                                $sheet->setCellValue('A' . $rows, strtoupper($pcourtnm));

                                $pcourtind = 'N' ;



                                $style = $sheet->getStyle('A' . $rows . ':F' . $rows);

                                $style->getFont()->setBold(true);

                                $style->getBorders()->getRight()->setBorderStyle(\PhpOffice\PhpSpreadsheet\Style\Border::BORDER_THIN); 

                                $sheet->mergeCells('A' . $rows . ':F' . $rows);

                                $rows++;

                            }

                            $sheet->setCellValue('A' . $rows, $report_row['doc_no']);

                            $sheet->setCellValue('B' . $rows, date_conv($report_row['doc_date']));

                            $sheet->setCellValue('C' . $rows, strtoupper($report_row['instrument_no']));

                            $sheet->setCellValue('D' . $rows, date_conv($report_row['instrument_dt']));

                            $sheet->setCellValue('E' . $rows, strtoupper($report_row['client_name']));



                            $style = $sheet->getStyle('A' . $rows . ':F' . $rows);

                            $style->getBorders()->getAllBorders()->setBorderStyle(\PhpOffice\PhpSpreadsheet\Style\Border::BORDER_THIN); 

                            $rows++;



                            $sheet->setCellValue('E' . $rows, strtoupper($report_row['matter_desc']).'['.$report_row['matter_code'].']');

                            $style = $sheet->getStyle('A' . $rows . ':F' . $rows);

                            $style->getBorders()->getAllBorders()->setBorderStyle(\PhpOffice\PhpSpreadsheet\Style\Border::BORDER_THIN); 

                            $rows++;

                            

                            $sheet->setCellValue('E' . $rows, strtoupper($report_row['narration']));

                            $sheet->setCellValue('F' . $rows, ($report_row['net_amount'] > 0) ? number_format($report_row['net_amount'],2,'.','') : '');

                            $style = $sheet->getStyle('A' . $rows . ':F' . $rows);

                            $style->getBorders()->getAllBorders()->setBorderStyle(\PhpOffice\PhpSpreadsheet\Style\Border::BORDER_THIN); 

                            $rows++;



                            $ltotamt = $ltotamt + $report_row['net_amount'] ;

                            

                            $report_row = ($rowcnt < $report_cnt) ? $bill_qry[$rowcnt] : $report_row; 

                            $rowcnt = $rowcnt + 1 ;     



                            $style = $sheet->getStyle('A' . $rows . ':F' . $rows);

                            $style->getBorders()->getAllBorders()->setBorderStyle(\PhpOffice\PhpSpreadsheet\Style\Border::BORDER_THIN); 

                            $rows++;

                        }

                        

                        $sheet->setCellValue('A' . $rows, 'Total');

                        $sheet->setCellValue('F' . $rows, ($ltotamt > 0) ? number_format($ltotamt,2,'.','') : ''); 



                        $ttotamt = $ttotamt + $ltotamt ;



                        $style = $sheet->getStyle('A' . $rows . ':F' . $rows);

                        $style->getFont()->setBold(true);

                        $style->getAlignment()->setHorizontal(Alignment::HORIZONTAL_RIGHT);

                        $style->getBorders()->getAllBorders()->setBorderStyle(\PhpOffice\PhpSpreadsheet\Style\Border::BORDER_THIN); 

                        $style->getBorders()->getBottom()->setBorderStyle(\PhpOffice\PhpSpreadsheet\Style\Border::BORDER_MEDIUM); 

                        $style->getBorders()->getRight()->setBorderStyle(\PhpOffice\PhpSpreadsheet\Style\Border::BORDER_MEDIUM);

                        $style->getBorders()->getTop()->setBorderStyle(\PhpOffice\PhpSpreadsheet\Style\Border::BORDER_MEDIUM);

                        $style->getFill()->setFillType(Fill::FILL_SOLID)->getStartColor()->setRGB('c8efe3');

                        $sheet->mergeCells('A' . $rows . ':E' . $rows);

                        $rows++;

                    }

                    $sheet->setCellValue('A' . $rows, 'GRAND TOTAL');

                    $sheet->setCellValue('F' . $rows, ($ttotamt > 0) ? number_format($ttotamt,2,'.','') : ''); 



                    $style = $sheet->getStyle('A' . $rows . ':F' . $rows);

                    $style->getFont()->setBold(true);

                    $style->getAlignment()->setHorizontal(Alignment::HORIZONTAL_RIGHT);

                    $style->getBorders()->getAllBorders()->setBorderStyle(\PhpOffice\PhpSpreadsheet\Style\Border::BORDER_THIN); 

                    $style->getBorders()->getBottom()->setBorderStyle(\PhpOffice\PhpSpreadsheet\Style\Border::BORDER_MEDIUM); 

                    $style->getBorders()->getRight()->setBorderStyle(\PhpOffice\PhpSpreadsheet\Style\Border::BORDER_MEDIUM);

                    $style->getBorders()->getTop()->setBorderStyle(\PhpOffice\PhpSpreadsheet\Style\Border::BORDER_MEDIUM);

                    $style->getFill()->setFillType(Fill::FILL_SOLID)->getStartColor()->setRGB('ffe93a');

                    $sheet->mergeCells('A' . $rows . ':E' . $rows);

                    $rows++;



                    $writer = new Xlsx($spreadsheet);

                    $writer->save($fileName);

                    header('Content-Type: application/vnd.ms-excel');

                    header('Content-Disposition: attachment; filename="'.basename($fileName).'"');

                    header('Expires: 0');

                    header('Cache-control: must-revalidate');

                    header('Pragma: public');

                    header('Content-Length:'.filesize($fileName));

                    flush();

                    readfile($fileName); 



                } else return view("pages/Finance/courtwise_unbilled_expenses", compact("bill_qry", "params"));

            }

        } else {

            $data = [];

            $data = branches(session()->userId);

    

            $curr_finyr = session()->financialYear;

            $data['curr_fyrsdt'] = '01-04-'.substr($curr_finyr,0,4);

            $data['billfor_ind'] = 'N';

            return view("pages/Finance/courtwise_unbilled_expenses", compact("data", "displayId"));

        }

    }



    public function list_of_advance_adjusted() {

        $requested_url = session()->requested_end_menu_url;

        $output_type = isset($_REQUEST['output_type']) ? $_REQUEST['output_type'] : '';

        $displayId = ['payee_help_id' => '4224', 'advance_help_id' => '4225'];

        $showActionBtns = false;



        if($this->request->getMethod() == "post") {

            if($output_type == 'Report' || $output_type == 'Pdf' || $output_type == 'Excel') {



                $report_desc   = 'LIST OF ADVANCE ADJUSTED DURING A PERIOD' ;

                $branch_code    = $_REQUEST['branch_code'] ;

                $start_date     = $_REQUEST['start_date'] ;       $start_date_ymd = date_conv($start_date,'-');

                $end_date       = $_REQUEST['end_date'] ;         $end_date_ymd   = date_conv($end_date,'-') ;  

                $payee_type     = $_REQUEST['payee_type'] ;  

                $payee_code     = $_REQUEST['payee_code'] ;       if($payee_code == '') { $payee_code = '%' ; }

                $payee_name     = $_REQUEST['payee_name'] ;       if($payee_name == '') { $payee_name = 'ALL' ; }

                $advance_serial = $_REQUEST['advance_serial'] ;   if($advance_serial == '') { $advance_serial = '%' ; }

                $advance_type   = $_REQUEST['advance_type'] ;  

                

                $period_desc  = $start_date.' TO '.$end_date ; 

                

                $branch_qry   = $this->db->query("select branch_name from branch_master where branch_code = '$branch_code'")->getRowArray() ;

                $branch_name  = $branch_qry['branch_name'] ;

              

                $trans_sql    = "select '1' ind, a.serial_no, a.payee_payer_type, a.payee_payer_code, a.payee_payer_name, b.doc_date, b.doc_no, b.doc_date adj_docdt, b.doc_no adj_docno, '' ref_doc_year, '' ref_doc_no, '' ref_doc_date, a.net_amount opbamt, 0.00 adjamt

                            from advance_details a, ledger_trans_hdr b

                            where a.branch_code like '$branch_code'

                            and a.advance_type like '$advance_type'

                            and a.payee_payer_type like '$payee_type'

                            and a.payee_payer_code like '$payee_code' 

                            and a.serial_no like '$advance_serial'

                            and a.adjusted_amount > 0.00

                            and a.ref_ledger_serial_no = b.serial_no

                            and b.doc_date <= '$end_date_ymd'  

                            union all

                            select '2' ind, a.serial_no, a.payee_payer_type, a.payee_payer_code, a.payee_payer_name, b.doc_date, b.doc_no, e.doc_date adj_docdt, e.doc_no adj_docno, d.ref_doc_year, d.ref_doc_no, d.ref_doc_date, 0.00 opbamt, d.adjusted_amount adjamt

                            from advance_details a, ledger_trans_hdr b, advance_adjustment_header c, advance_adjustment_detail d, ledger_trans_hdr e

                            where a.branch_code like '$branch_code'

                            and a.advance_type like '$advance_type'

                            and a.payee_payer_type like '$payee_type'

                            and a.payee_payer_code like '$payee_code' 

                            and a.serial_no like '$advance_serial'

                            and a.ref_ledger_serial_no = b.serial_no

                            and b.doc_date <= '$end_date_ymd'  

                            and a.serial_no = c.ref_advance_serial_no

                            and c.ref_ledger_serial_no = e.serial_no

                            and e.doc_date between '$start_date_ymd' and '$end_date_ymd'

                            and c.serial_no = d.ref_adjustment_serial_no

                            order by 5,1,6,7,10,8,9 " ;



                $trans_qry  = $this->db->query($trans_sql)->getResultArray() ;

                $trans_cnt  = count($trans_qry);



                if(empty($trans_qry)) {

                    session()->setFlashdata('message', 'No Records Found !!');

                    return redirect()->to($this->requested_url());

                }



                $params = [

                    'trans_cnt' => $trans_cnt,

                    'report_desc' => $report_desc,

                    'branch_name' => $branch_name,

                    'period_desc' => $period_desc,

                    'payee_type' => $payee_type,

                    'requested_url' => $requested_url,

                ];

                if ($output_type == 'Pdf') {

                    $report_type = 'Pdf'; $dompdf = new \Dompdf\Dompdf(); 

                    $reportHTML = view("pages/Finance/list_of_advance_adjusted", compact('trans_qry', 'params', 'report_type'));

                    $dompdf->loadHtml($reportHTML);

                    $dompdf->setPaper('A4', 'landscape'); // portrait

                    $dompdf->render();

                    $dompdf->stream('abc.pdf', array('Attachment'=>0)); exit;

                } else if($output_type == 'Excel') {



                    $showActionBtns = true;

                    $spreadsheet = new Spreadsheet();

                    $sheet = $spreadsheet->getActiveSheet();

                    $rows = 1;



                    $fileName = $headings = '';

                    $fileName = 'Finance-Advance-Adjusted-'.date('d-m-Y').'.xlsx';  

                    $headings = ['Date', 'Doc#', 'Narration', 'Advance', 'Adjusted', 'Balance'];

                    $column = 'A'; $rows++;



                    foreach ($headings as $heading) {

                        $cell = $column . $rows;

                        $sheet->setCellValue($cell, $heading); // Set the cell value



                        // Apply formatting

                        $style = $sheet->getStyle($cell);

                        $style->getFont()->setBold(true);

                        $style->getAlignment()->setHorizontal(Alignment::HORIZONTAL_CENTER);

                        $style->getFill()->setFillType(Fill::FILL_SOLID)->getStartColor()->setRGB('c8d5ef');

                        $style->getBorders()->getAllBorders()->setBorderStyle(\PhpOffice\PhpSpreadsheet\Style\Border::BORDER_THIN); // Add borders

                        ++$column; // Move to the next column

                    } $rows++;



                    $tadvamt = 0; 

                    $tadjamt = 0; 

                    $tbalamt = 0 ;

                    $rowcnt     = 1 ;

                    $report_row = isset($trans_qry[$rowcnt-1]) ? $trans_qry[$rowcnt-1] : '' ;

                    $report_cnt = $params['trans_cnt'] ;

                    while ($rowcnt <= $report_cnt) {

                        $padvamt = 0; 

                        $padjamt = 0; 

                        $pbalamt = 0 ;

                        $psrlind = 'Y';

                        $pserial = $report_row['serial_no'];

                        $pdocno  = $report_row['doc_no'];

                        $pdocdt  = $report_row['doc_date'];

                        $ppaycd  = $report_row['payee_payer_code'];

                        $ppaynm  = $report_row['payee_payer_name'];

                        while ($pserial == $report_row['serial_no'] && $rowcnt <= $report_cnt) {

                            if ($psrlind == 'Y') {

                                $sheet->setCellValue('A' . $rows, strtoupper($ppaynm) .'[ADVANCE # : '. $pserial .']');

                                $psrlind = 'N' ;



                                $style = $sheet->getStyle('A' . $rows . ':F' . $rows);

                                $style->getFont()->setBold(true);

                                $style->getBorders()->getRight()->setBorderStyle(\PhpOffice\PhpSpreadsheet\Style\Border::BORDER_THIN); 

                                $sheet->mergeCells('A' . $rows . ':F' . $rows);

                                $rows++;

                            }

                            if ($report_row['ind'] == '1') {

                               $narration = 'Opening' ;

                            } else {

                               $narration = 'Ref Doc # : '.$report_row['ref_doc_year'].'/'.$report_row['ref_doc_no'].'  Dated '.date_conv($report_row['ref_doc_date'],'-') ;

                            }



                            $sheet->setCellValue('A' . $rows, date_conv($report_row['adj_docdt'],'-'));

                            $sheet->setCellValue('B' . $rows, $report_row['adj_docno']);

                            $sheet->setCellValue('C' . $rows, $narration);

                            $sheet->setCellValue('D' . $rows, ($report_row['opbamt'] > 0) ? $report_row['opbamt'] : '');

                            $sheet->setCellValue('E' . $rows, ($report_row['adjamt'] > 0) ? $report_row['adjamt'] : '');



                            $padvamt = $padvamt + $report_row['opbamt'] ;                   

                            $padjamt = $padjamt + $report_row['adjamt'] ;                   

                            

                            $report_row = ($rowcnt < $report_cnt) ? $trans_qry[$rowcnt] : $report_row; 

                            $rowcnt = $rowcnt + 1 ;     



                            $style = $sheet->getStyle('A' . $rows . ':F' . $rows);

                            $style->getBorders()->getAllBorders()->setBorderStyle(\PhpOffice\PhpSpreadsheet\Style\Border::BORDER_THIN); 

                            $rows++;

                        }

                        

                        $pbalamt = $padvamt - $padjamt ;

                        $tadvamt = $tadvamt + $padvamt ;                   

                        $tadjamt = $tadjamt + $padjamt ;                   

                        $tbalamt = $tbalamt + $pbalamt ;   



                        $sheet->setCellValue('A' . $rows, 'Total');

                        $sheet->setCellValue('D' . $rows, ($padvamt > 0) ? number_format($padvamt,2,'.','') : ''); 

                        $sheet->setCellValue('E' . $rows, ($padjamt > 0) ? number_format($padjamt,2,'.','') : ''); 

                        $sheet->setCellValue('F' . $rows, ($pbalamt > 0) ? number_format($pbalamt,2,'.','') : ''); 



                        $style = $sheet->getStyle('A' . $rows . ':F' . $rows);

                        $style->getFont()->setBold(true);

                        $style->getAlignment()->setHorizontal(Alignment::HORIZONTAL_RIGHT);

                        $style->getBorders()->getAllBorders()->setBorderStyle(\PhpOffice\PhpSpreadsheet\Style\Border::BORDER_THIN); 

                        $style->getBorders()->getBottom()->setBorderStyle(\PhpOffice\PhpSpreadsheet\Style\Border::BORDER_MEDIUM); 

                        $style->getBorders()->getRight()->setBorderStyle(\PhpOffice\PhpSpreadsheet\Style\Border::BORDER_MEDIUM);

                        $style->getBorders()->getTop()->setBorderStyle(\PhpOffice\PhpSpreadsheet\Style\Border::BORDER_MEDIUM);

                        $style->getFill()->setFillType(Fill::FILL_SOLID)->getStartColor()->setRGB('c8efe3');

                        $sheet->mergeCells('A' . $rows . ':C' . $rows);

                        $rows++;

                    }

                    $sheet->setCellValue('A' . $rows, 'GRAND TOTAL');

                    $sheet->setCellValue('D' . $rows, ($tadvamt > 0) ? number_format($tadvamt,2,'.','') : ''); 

                    $sheet->setCellValue('E' . $rows, ($tadjamt > 0) ? number_format($tadjamt,2,'.','') : ''); 

                    $sheet->setCellValue('F' . $rows, ($tbalamt > 0) ? number_format($tbalamt,2,'.','') : ''); 



                    $style = $sheet->getStyle('A' . $rows . ':F' . $rows);

                    $style->getFont()->setBold(true);

                    $style->getAlignment()->setHorizontal(Alignment::HORIZONTAL_RIGHT);

                    $style->getBorders()->getAllBorders()->setBorderStyle(\PhpOffice\PhpSpreadsheet\Style\Border::BORDER_THIN); 

                    $style->getBorders()->getBottom()->setBorderStyle(\PhpOffice\PhpSpreadsheet\Style\Border::BORDER_MEDIUM); 

                    $style->getBorders()->getRight()->setBorderStyle(\PhpOffice\PhpSpreadsheet\Style\Border::BORDER_MEDIUM);

                    $style->getBorders()->getTop()->setBorderStyle(\PhpOffice\PhpSpreadsheet\Style\Border::BORDER_MEDIUM);

                    $style->getFill()->setFillType(Fill::FILL_SOLID)->getStartColor()->setRGB('ffe93a');

                    $sheet->mergeCells('A' . $rows . ':C' . $rows);

                    $rows++;



                    $writer = new Xlsx($spreadsheet);

                    $writer->save($fileName);

                    header('Content-Type: application/vnd.ms-excel');

                    header('Content-Disposition: attachment; filename="'.basename($fileName).'"');

                    header('Expires: 0');

                    header('Cache-control: must-revalidate');

                    header('Pragma: public');

                    header('Content-Length:'.filesize($fileName));

                    flush();

                    readfile($fileName); 



                } else return view("pages/Finance/list_of_advance_adjusted", compact("trans_qry", "params")); 



            }

        } else {

            $data = [];

            $data = branches(session()->userId);

    

            $curr_finyr = session()->financialYear;

            $data['curr_fyrsdt'] = '01-04-'.substr($curr_finyr,0,4);

            $data['billfor_ind'] = 'N';

            return view("pages/Finance/list_of_advance_adjusted", compact("data", "displayId")); 

        }



    }



    public function list_of_advance_unadjusted() {

        $requested_url = session()->requested_end_menu_url;

        $output_type = isset($_REQUEST['output_type']) ? $_REQUEST['output_type'] : '';

        $displayId = ['payee_help_id' => '4224'];

        $showActionBtns = false;



        if($this->request->getMethod() == "post") {

            if($output_type == 'Report' || $output_type == 'Pdf' || $output_type == 'Excel') {

                $report_desc   = 'LIST OF ADVANCE UN-ADJUSTED AS ON DATE' ;



                $branch_code    = $_REQUEST['branch_code'] ;

                $end_date       = $_REQUEST['end_date'] ;         $end_date_ymd   = date_conv($end_date,'-') ;  

                $payee_type     = $_REQUEST['payee_type'] ;  

                $payee_code     = $_REQUEST['payee_code'] ;       if($payee_code == '') { $payee_code = '%' ; }

                $payee_name     = $_REQUEST['payee_name'] ;       if($payee_name == '') { $payee_name = 'ALL' ; }

                $advance_type   = $_REQUEST['advance_type'] ;  

                

                $branch_qry   = $this->db->query("select branch_name from branch_master where branch_code = '$branch_code' ")->getRowArray() ;

                $branch_name  = $branch_qry['branch_name'] ;

              

                $trans_sql    = "select a.serial_no, a.payee_payer_type, a.payee_payer_code, a.payee_payer_name, b.doc_type, b.doc_date, b.doc_no, b.daybook_code, a.instrument_no, a.instrument_dt, a.gross_amount, a.adjusted_amount, (a.gross_amount - ifnull(a.adjusted_amount,0)) balance_amount

                            from advance_details a, ledger_trans_hdr b

                            where a.branch_code like '$branch_code'

                            and a.advance_type like '$advance_type'

                            and a.payee_payer_type like '$payee_type'

                            and a.payee_payer_code like '$payee_code' 

                            and (a.gross_amount - ifnull(a.adjusted_amount,0)) > 0.00

                            and a.ref_ledger_serial_no = b.serial_no

                            and b.doc_date <= '$end_date_ymd'  

                            order by a.payee_payer_type, a.payee_payer_code, a.payee_payer_name, a.serial_no " ;

                $trans_qry  = $this->db->query($trans_sql)->getResultArray(); 

                $trans_cnt  = count($trans_qry);



                if(empty($trans_qry)) {

                    session()->setFlashdata('message', 'No Records Found !!');

                    return redirect()->to($this->requested_url());

                }



                $params = [

                    'trans_cnt' => $trans_cnt,

                    'report_desc' => $report_desc,

                    'branch_name' => $branch_name,

                    'end_date' => $end_date,

                    'payee_type' => $payee_type,

                    'requested_url' => $requested_url,

                ];

                if ($output_type == 'Pdf') {

                    $report_type = 'Pdf'; $dompdf = new \Dompdf\Dompdf(); 

                    $reportHTML = view("pages/Finance/list_of_advance_unadjusted", compact('trans_qry', 'params', 'report_type'));

                    $dompdf->loadHtml($reportHTML);

                    $dompdf->setPaper('A4', 'landscape'); // portrait

                    $dompdf->render();

                    $dompdf->stream('abc.pdf', array('Attachment'=>0)); exit;

                } else if($output_type == 'Excel') {



                    $showActionBtns = true;

                    $spreadsheet = new Spreadsheet();

                    $sheet = $spreadsheet->getActiveSheet();

                    $rows = 1;



                    $fileName = $headings = '';

                    $fileName = 'Finance-Advance-Unadjusted-'.date('d-m-Y').'.xlsx';  

                    $headings = ['Advance', 'Date', 'DB', 'Type', 'Doc#', 'Cheque', 'Cheque Date', 'Advance', 'Adjusted', 'Balance'];

                    $column = 'A'; $rows++;



                    foreach ($headings as $heading) {

                        $cell = $column . $rows;

                        $sheet->setCellValue($cell, $heading); // Set the cell value



                        // Apply formatting

                        $style = $sheet->getStyle($cell);

                        $style->getFont()->setBold(true);

                        $style->getAlignment()->setHorizontal(Alignment::HORIZONTAL_CENTER);

                        $style->getFill()->setFillType(Fill::FILL_SOLID)->getStartColor()->setRGB('c8d5ef');

                        $style->getBorders()->getAllBorders()->setBorderStyle(\PhpOffice\PhpSpreadsheet\Style\Border::BORDER_THIN); // Add borders

                        ++$column; // Move to the next column

                    } $rows++;



                    $tadvamt = 0; 

                    $tadjamt = 0; 

                    $tbalamt = 0 ;

                    $rowcnt     = 1 ;

                    $report_row = isset($trans_qry[$rowcnt-1]) ? $trans_qry[$rowcnt-1] : '' ;

                    $report_cnt = $params['trans_cnt'] ;

                    while ($rowcnt <= $report_cnt) {

                        $padvamt   = 0; 

                        $padjamt   = 0; 

                        $pbalamt   = 0 ;

                        $ppartyind = 'Y';

                        $ppartycd  = $report_row['payee_payer_code'];

                        $ppartynm  = $report_row['payee_payer_name'];

                        while ($ppartycd == $report_row['payee_payer_code'] && $rowcnt <= $report_cnt) {

                            if ($ppartyind == 'Y') {

                                $sheet->setCellValue('A' . $rows, strtoupper($ppartynm) .'['. $ppartycd .']');

                                $ppartyind = 'N' ;



                                $style = $sheet->getStyle('A' . $rows . ':J' . $rows);

                                $style->getFont()->setBold(true);

                                $style->getBorders()->getRight()->setBorderStyle(\PhpOffice\PhpSpreadsheet\Style\Border::BORDER_THIN); 

                                $sheet->mergeCells('A' . $rows . ':J' . $rows);

                                $rows++;

                            }

                            

                            $sheet->setCellValue('A' . $rows, $report_row['serial_no']);

                            $sheet->setCellValue('B' . $rows, date_conv($report_row['doc_date'],'-'));

                            $sheet->setCellValue('C' . $rows, $report_row['daybook_code']);

                            $sheet->setCellValue('D' . $rows, $report_row['doc_type']);

                            $sheet->setCellValue('E' . $rows, $report_row['doc_no']);

                            $sheet->setCellValue('F' . $rows, $report_row['instrument_no']);

                            $sheet->setCellValue('G' . $rows, ($report_row['instrument_dt'] != '' && $report_row['instrument_dt'] != '0000-00-00') ? date_conv($report_row['instrument_dt'],'-') : '');

                            $sheet->setCellValue('H' . $rows, ($report_row['gross_amount'] > 0) ? $report_row['gross_amount'] : '' );

                            $sheet->setCellValue('I' . $rows, ($report_row['adjusted_amount'] > 0) ? $report_row['adjusted_amount'] : '');

                            $sheet->setCellValue('J' . $rows, ($report_row['balance_amount']  > 0) ? $report_row['balance_amount'] : '');



                            $padvamt = $padvamt + $report_row['gross_amount'] ;                   

                            $padjamt = $padjamt + $report_row['adjusted_amount'] ;                   

                            

                            $report_row = ($rowcnt < $report_cnt) ? $trans_qry[$rowcnt] : $report_row; 

                            $rowcnt = $rowcnt + 1 ;



                            $style = $sheet->getStyle('A' . $rows . ':J' . $rows);

                            $style->getBorders()->getAllBorders()->setBorderStyle(\PhpOffice\PhpSpreadsheet\Style\Border::BORDER_THIN); 

                            $rows++;

                        }

                        

                        $pbalamt = $padvamt - $padjamt ;

                        $tadvamt = $tadvamt + $padvamt ;                   

                        $tadjamt = $tadjamt + $padjamt ;                   

                        $tbalamt = $tbalamt + $pbalamt ;   



                        $sheet->setCellValue('A' . $rows, 'Total');

                        $sheet->setCellValue('H' . $rows, ($padvamt > 0) ? number_format($padvamt,2,'.','') : ''); 

                        $sheet->setCellValue('I' . $rows, ($padjamt > 0) ? number_format($padjamt,2,'.','') : ''); 

                        $sheet->setCellValue('J' . $rows, ($pbalamt > 0) ? number_format($pbalamt,2,'.','') : ''); 



                        $style = $sheet->getStyle('A' . $rows . ':J' . $rows);

                        $style->getFont()->setBold(true);

                        $style->getAlignment()->setHorizontal(Alignment::HORIZONTAL_RIGHT);

                        $style->getBorders()->getAllBorders()->setBorderStyle(\PhpOffice\PhpSpreadsheet\Style\Border::BORDER_THIN); 

                        $style->getBorders()->getBottom()->setBorderStyle(\PhpOffice\PhpSpreadsheet\Style\Border::BORDER_MEDIUM); 

                        $style->getBorders()->getRight()->setBorderStyle(\PhpOffice\PhpSpreadsheet\Style\Border::BORDER_MEDIUM);

                        $style->getBorders()->getTop()->setBorderStyle(\PhpOffice\PhpSpreadsheet\Style\Border::BORDER_MEDIUM);

                        $style->getFill()->setFillType(Fill::FILL_SOLID)->getStartColor()->setRGB('c8efe3');

                        $sheet->mergeCells('A' . $rows . ':G' . $rows);

                        $rows++;

                    }

                    $sheet->setCellValue('A' . $rows, 'GRAND TOTAL');

                    $sheet->setCellValue('H' . $rows, ($tadvamt > 0) ? number_format($tadvamt,2,'.','') : ''); 

                    $sheet->setCellValue('I' . $rows, ($tadjamt > 0) ? number_format($tadjamt,2,'.','') : ''); 

                    $sheet->setCellValue('J' . $rows, ($tbalamt > 0) ? number_format($tbalamt,2,'.','') : ''); 



                    $style = $sheet->getStyle('A' . $rows . ':J' . $rows);

                    $style->getFont()->setBold(true);

                    $style->getAlignment()->setHorizontal(Alignment::HORIZONTAL_RIGHT);

                    $style->getBorders()->getAllBorders()->setBorderStyle(\PhpOffice\PhpSpreadsheet\Style\Border::BORDER_THIN); 

                    $style->getBorders()->getBottom()->setBorderStyle(\PhpOffice\PhpSpreadsheet\Style\Border::BORDER_MEDIUM); 

                    $style->getBorders()->getRight()->setBorderStyle(\PhpOffice\PhpSpreadsheet\Style\Border::BORDER_MEDIUM);

                    $style->getBorders()->getTop()->setBorderStyle(\PhpOffice\PhpSpreadsheet\Style\Border::BORDER_MEDIUM);

                    $style->getFill()->setFillType(Fill::FILL_SOLID)->getStartColor()->setRGB('ffe93a');

                    $sheet->mergeCells('A' . $rows . ':G' . $rows);

                    $rows++;



                    $writer = new Xlsx($spreadsheet);

                    $writer->save($fileName);

                    header('Content-Type: application/vnd.ms-excel');

                    header('Content-Disposition: attachment; filename="'.basename($fileName).'"');

                    header('Expires: 0');

                    header('Cache-control: must-revalidate');

                    header('Pragma: public');

                    header('Content-Length:'.filesize($fileName));

                    flush();

                    readfile($fileName); 



                } else return view("pages/Finance/list_of_advance_unadjusted", compact("trans_qry", "params"));

            }

        } else {

            $data = [];

            $data = branches(session()->userId);

    

            $curr_finyr = session()->financialYear;

            $data['curr_fyrsdt'] = '01-04-'.substr($curr_finyr,0,4);

            $data['billfor_ind'] = 'N';

            return view("pages/Finance/list_of_advance_unadjusted", compact("data", "displayId")); 

        }

    }  



    public function selected_ac_report_7053_7048_7068() {

        $requested_url = session()->requested_end_menu_url;

        $output_type = isset($_REQUEST['output_type']) ? $_REQUEST['output_type'] : '';



        if($this->request->getMethod() == "post") {

            if($output_type == 'Report' || $output_type == 'Pdf' || $output_type == 'Excel') {



                $lines_per_page   = isset($_REQUEST['lines_per_page'])  ?$_REQUEST['lines_per_page']  :68;

                $branch_code      = isset($_REQUEST['branch_code'])     ?$_REQUEST['branch_code']     :null;

                $main_ac_code     = isset($_REQUEST['main_ac_code'])    ?$_REQUEST['main_ac_code']    :null;

                $date_from        = isset($_REQUEST['date_from'])       ?$_REQUEST['date_from']       :null;

                $date_to          = isset($_REQUEST['date_to'])         ?$_REQUEST['date_to']         :null;

             

                $st_dt     = date_conv($date_from);

                $en_dt     = date_conv($date_to);

                $fin_month = substr($st_dt,5,2);

                $fin_year = substr($st_dt,0,4);

             

                if($fin_month <= 3) { $fin_yr = ($fin_year - 1).'-'.$fin_year ; } else { $fin_yr = $fin_year.'-'.($fin_year+1) ; } 



                // Current year-month in 'yyyymm' format

                $year_mon = substr($date_from,0,4).substr($date_from,5,2) ; 

                //The first date of the month mentioned in Start Date

                $date_start = substr($date_from,0,4).'-'.substr($date_from,5,2).'-'.'01' ;

             

                $branch_name_stmt = $this->db->query("select branch_name from branch_master where branch_code='$branch_code'")->getRowArray();

                $branch_name = $branch_name_stmt['branch_name'];

             

                $sele_ac_qry = $this->db->query("select main_ac_desc from account_master where main_ac_code = '$main_ac_code'")->getRowArray();

                $display_heading = $sele_ac_qry['main_ac_desc'];

              

                $sele_ac_stmt = '';

                switch($main_ac_code) {

                    case '7053' : 

                        $sele_ac_stmt = "select x.c_code,x.c_name,sum(x.gross_amount) gross_amount,sum(x.tds_amount) tds_amount,sum(x.gross_amount - x.tds_amount) net_amount

                                from (select a.sub_ac_code c_code,c.associate_name c_name,sum(if(a.dr_cr_ind='D',ifnull(a.net_amount,0),(0-ifnull(a.net_amount,0)))) gross_amount,0 tds_amount

                                    from ledger_trans_dtl a, ledger_trans_hdr b, associate_master c 

                                    where a.main_ac_code = '$main_ac_code' and a.narration NOT LIKE '%TRANSFER TO PROFIT AND LOSS ACCOUNT%'

                                    and a.narration NOT LIKE '%TR TO PROFIT AND LOSS ACCOUNT%' and a.narration NOT LIKE '%TRANSFER TO PL %'

                                    and a.sub_ac_code = c.associate_code and a.ref_ledger_serial_no = b.serial_no and b.doc_date between '$st_dt' and  '$en_dt' and b.status_code = 'C' and c.associate_type='001'

                                    group by a.sub_ac_code 

                                union all

                                    select a.sub_ac_code c_code,c.associate_name c_name,0 gross_amount,sum(if(a.dr_cr_ind='C',ifnull(a.net_amount,0),(0-ifnull(a.net_amount,0))))  tds_amount

                                    from ledger_trans_dtl a, ledger_trans_hdr b, associate_master c 

                                    where a.main_ac_code = '3999' and a.sub_ac_code = c.associate_code and a.ref_ledger_serial_no = b.serial_no and b.doc_date between '$st_dt' and  '$en_dt'

                                    and b.status_code = 'C' and (a.sub_ac_code is not null and a.sub_ac_code != '') and a.dr_cr_ind = 'C' and c.associate_type='001'

                                    group by a.sub_ac_code 

                                union all

                                    select b.payee_payer_code c_code,c.associate_name c_name,0 gross_amount,sum(if(a.dr_cr_ind='C',ifnull(a.net_amount,0),(0-ifnull(a.net_amount,0))))  tds_amount

                                    from ledger_trans_dtl a, ledger_trans_hdr b, associate_master c 

                                    where a.main_ac_code  in('3999','1409') and a.ref_ledger_serial_no = b.serial_no and b.doc_type='PV' and b.doc_date between '$st_dt' and  '$en_dt'

                                    and b.status_code = 'C' and (a.sub_ac_code is null or a.sub_ac_code = '') and a.dr_cr_ind = 'C' and c.associate_type='001' and b.payee_payer_code = c.associate_code 

                                    group by b.payee_payer_code 

                                    ) x

                                    group by c_code, c_name

                                    order by c_name "; 

                    break;

                    case '7048' :

                        $sele_ac_stmt = "select x.c_code,x.c_name,sum(x.gross_amount) gross_amount,sum(x.tds_amount) tds_amount,sum(x.gross_amount - x.tds_amount) net_amount

                                    from (select a.sub_ac_code c_code,c.associate_name c_name,sum(if(a.dr_cr_ind='D',ifnull(a.net_amount,0),(0-ifnull(a.net_amount,0)))) gross_amount,0 tds_amount

                                        from ledger_trans_dtl a, ledger_trans_hdr b, associate_master c 

                                        where a.main_ac_code = '$main_ac_code' and a.narration NOT LIKE '%TRANSFER TO PROFIT AND LOSS ACCOUNT%'

                                        and a.narration NOT LIKE '%TR TO PROFIT AND LOSS ACCOUNT%' and a.narration NOT LIKE '%TRANSFER TO PL %'

                                        and a.sub_ac_code = c.associate_code and a.ref_ledger_serial_no = b.serial_no and b.doc_date between '$st_dt' and '$en_dt' and b.status_code = 'C' and c.associate_type='002'

                                        group by a.sub_ac_code 

                                    union all

                                        select a.sub_ac_code c_code,c.associate_name c_name,0 gross_amount,sum(if(a.dr_cr_ind='C',ifnull(a.net_amount,0),(0-ifnull(a.net_amount,0))))  tds_amount

                                        from ledger_trans_dtl a, ledger_trans_hdr b, associate_master c 

                                        where a.main_ac_code = '4999' and a.sub_ac_code = c.associate_code and a.ref_ledger_serial_no = b.serial_no and b.doc_date between '$st_dt' and  '$en_dt'

                                        and b.status_code = 'C' and (a.sub_ac_code is not null and a.sub_ac_code != '') and a.dr_cr_ind = 'C' and c.associate_type='002'

                                        group by a.sub_ac_code 

                                    union all

                                        select b.payee_payer_code c_code,c.associate_name c_name,0 gross_amount,sum(if(a.dr_cr_ind='C',ifnull(a.net_amount,0),(0-ifnull(a.net_amount,0))))  tds_amount

                                        from ledger_trans_dtl a, ledger_trans_hdr b, associate_master c 

                                        where a.main_ac_code in('4999','1409')and a.ref_ledger_serial_no = b.serial_no and b.doc_type='PV'and b.doc_date between '$st_dt' and '$en_dt'and b.status_code          = 'C'

                                        and (a.sub_ac_code is null or a.sub_ac_code = '') and a.dr_cr_ind = 'C' and b.payee_payer_type !='E' and b.payee_payer_code     = c.associate_code and c.associate_type='002'

                                        group by b.payee_payer_code 

                                        ) x

                                    group by c_code, c_name

                                    order by c_name "; 

                    break;

                    case '7068' :

                        $sele_ac_stmt = "select x.c_code,x.c_name,sum(x.gross_amount) gross_amount,sum(x.tds_amount) tds_amount,sum(x.gross_amount - x.tds_amount) net_amount

                                    from (select a.sub_ac_code c_code,c.associate_name c_name,sum(if(a.dr_cr_ind='D',ifnull(a.net_amount,0),(0-ifnull(a.net_amount,0)))) gross_amount,0 tds_amount

                                        from ledger_trans_dtl a, ledger_trans_hdr b, associate_master c 

                                        where a.main_ac_code = '$main_ac_code' and a.narration NOT LIKE '%TRANSFER TO PROFIT AND LOSS ACCOUNT%' and a.narration NOT LIKE '%TR TO PROFIT AND LOSS ACCOUNT%'

                                        and a.narration NOT LIKE '%TRANSFER TO PL %' and a.sub_ac_code = c.associate_code and a.ref_ledger_serial_no = b.serial_no 

                                        and b.doc_date between '$st_dt' and '$en_dt'and b.status_code = 'C' and c.associate_type='005'

                                        group by a.sub_ac_code 

                                    union all

                                        select a.sub_ac_code c_code,c.associate_name c_name,0 gross_amount,sum(if(a.dr_cr_ind='C',ifnull(a.net_amount,0),(0-ifnull(a.net_amount,0)))) tds_amount

                                        from ledger_trans_dtl a, ledger_trans_hdr b, associate_master c 

                                        where a.main_ac_code = '5999' and a.sub_ac_code = c.associate_code and a.ref_ledger_serial_no = b.serial_no 

                                        and b.doc_date between '$st_dt' and '$en_dt'and b.status_code = 'C' and (a.sub_ac_code is not null and a.sub_ac_code != '')

                                        and a.dr_cr_ind = 'C' and c.associate_type='005'

                                        group by a.sub_ac_code 

                                    union all

                                        select b.payee_payer_code c_code,c.associate_name c_name,0 gross_amount,sum(if(a.dr_cr_ind='C',ifnull(a.net_amount,0),(0-ifnull(a.net_amount,0))))  tds_amount

                                        from ledger_trans_dtl a, ledger_trans_hdr b, associate_master c 

                                        where a.main_ac_code in('5999','1409') and a.ref_ledger_serial_no = b.serial_no and b.doc_type='PV' and b.doc_date between '$st_dt' and '$en_dt'

                                        and b.status_code = 'C' and (a.sub_ac_code is null or a.sub_ac_code = '') and a.dr_cr_ind = 'C' and b.payee_payer_code = c.associate_code and c.associate_type='005' 

                                        group by b.payee_payer_code 

                                        ) x

                                    group by c_code, c_name

                                    order by c_name ";

                    break;

                } 



                $sele_ac_qry  = $this->db->query($sele_ac_stmt)->getResultArray();

                $sele_ac_count = count($sele_ac_qry);

                     

                if(empty($sele_ac_qry)) {

                    session()->setFlashdata('message', 'No Records Found !!');

                    return redirect()->to($this->requested_url());

                }



                $params = [

                    "sele_ac_count" => $sele_ac_count,

                    "lines_per_page" => $lines_per_page,

                    "display_heading" => $display_heading,

                    "branch_name" => $branch_name,

                    "date_from" => $date_from,

                    "date_to" => $date_to,

                    "fin_year" => $fin_year,

                    // "main_ac_name" => $main_ac_name,

                    "requested_url" => $requested_url,

                ];



                if ($output_type == 'Pdf') {

                    $report_type = 'Pdf'; $dompdf = new \Dompdf\Dompdf(); 

                    $reportHTML = view("pages/Finance/selected_ac_report_7053_7048_7068", compact('sele_ac_qry', 'params', 'report_type'));

                    $dompdf->loadHtml($reportHTML);

                    $dompdf->setPaper('A4', 'landscape'); // portrait

                    $dompdf->render();

                    $dompdf->stream('abc.pdf', array('Attachment'=>0)); exit;

                } else if($output_type == 'Excel') {



                    $showActionBtns = true;

                    $spreadsheet = new Spreadsheet();

                    $sheet = $spreadsheet->getActiveSheet();

                    $rows = 1;



                    $fileName = $headings = '';

                    $fileName = 'Finance-Selected-AC-Report-7053-7048-7068-'.date('d-m-Y').'.xlsx';  

                    $headings = ['Code', 'Name', 'Gross Amount', 'TDS', 'Net Amount'];

                    $column = 'A'; $rows++;



                    foreach ($headings as $heading) {

                        $cell = $column . $rows;

                        $sheet->setCellValue($cell, $heading); // Set the cell value



                        // Apply formatting

                        $style = $sheet->getStyle($cell);

                        $style->getFont()->setBold(true);

                        $style->getAlignment()->setHorizontal(Alignment::HORIZONTAL_CENTER);

                        $style->getFill()->setFillType(Fill::FILL_SOLID)->getStartColor()->setRGB('c8d5ef');

                        $style->getBorders()->getAllBorders()->setBorderStyle(\PhpOffice\PhpSpreadsheet\Style\Border::BORDER_THIN); // Add borders

                        ++$column; // Move to the next column

                    } $rows++;



                    $cnt  = 1 ;

                    $tot_amt = 0.00;

                    $tot_gamt = $tot_taxamt = $tot_namt = 0 ;



                    $count = $params['sele_ac_count'] ;

                    $transrow = isset($sele_ac_qry[$cnt-1]) ? $sele_ac_qry[$cnt-1] : '' ; 

                    while($cnt <= $count) {

                        

                            $sheet->setCellValue('A' . $rows, $transrow['c_code']);

                            $sheet->setCellValue('B' . $rows, $transrow['c_name']);

                            $sheet->setCellValue('C' . $rows, number_format($transrow['gross_amount'],2,'.',''));

                            $sheet->setCellValue('D' . $rows, ($transrow['tds_amount'] > 0) ? number_format($transrow['tds_amount'],2,'.','') : '');

                            $sheet->setCellValue('E' . $rows, number_format($transrow['net_amount'],2,'.',''));



                            $tot_gamt   = $tot_gamt + $transrow['gross_amount'];

                            $tot_taxamt = $tot_taxamt + $transrow['tds_amount'];

                            $tot_namt   = $tot_namt + $transrow['net_amount'];



                            $transrow = ($cnt < $count) ? $sele_ac_qry[$cnt] : $transrow; 

                            $cnt = $cnt + 1 ;



                            $style = $sheet->getStyle('A' . $rows . ':E' . $rows);

                            $style->getBorders()->getAllBorders()->setBorderStyle(\PhpOffice\PhpSpreadsheet\Style\Border::BORDER_THIN); 

                            $rows++;

                        }

                        

                        $sheet->setCellValue('A' . $rows, 'Total');

                        $sheet->setCellValue('C' . $rows, number_format($tot_gamt,2,'.','')); 

                        $sheet->setCellValue('D' . $rows, ($tot_taxamt > 0) ? number_format($tot_taxamt,2,'.','') : ''); 

                        $sheet->setCellValue('E' . $rows, number_format($tot_namt,2,'.','')); 



                        $style = $sheet->getStyle('A' . $rows . ':E' . $rows);

                        $style->getFont()->setBold(true);

                        $style->getAlignment()->setHorizontal(Alignment::HORIZONTAL_RIGHT);

                        $style->getBorders()->getAllBorders()->setBorderStyle(\PhpOffice\PhpSpreadsheet\Style\Border::BORDER_THIN); 

                        $style->getBorders()->getBottom()->setBorderStyle(\PhpOffice\PhpSpreadsheet\Style\Border::BORDER_MEDIUM); 

                        $style->getBorders()->getRight()->setBorderStyle(\PhpOffice\PhpSpreadsheet\Style\Border::BORDER_MEDIUM);

                        $style->getBorders()->getTop()->setBorderStyle(\PhpOffice\PhpSpreadsheet\Style\Border::BORDER_MEDIUM);

                        $style->getFill()->setFillType(Fill::FILL_SOLID)->getStartColor()->setRGB('ffe93a');

                        $sheet->mergeCells('A' . $rows . ':B' . $rows);

                        $rows++;

                    

                    $writer = new Xlsx($spreadsheet);

                    $writer->save($fileName);

                    header('Content-Type: application/vnd.ms-excel');

                    header('Content-Disposition: attachment; filename="'.basename($fileName).'"');

                    header('Expires: 0');

                    header('Cache-control: must-revalidate');

                    header('Pragma: public');

                    header('Content-Length:'.filesize($fileName));

                    flush();

                    readfile($fileName); 



                } else return view("pages/Finance/selected_ac_report_7053_7048_7068", compact("sele_ac_qry", "params")); 



            }

        } else {

            $data = [];

            $data = branches(session()->userId);

            $report_id   = $_GET['display_id'];



            $curr_finyr = session()->financialYear;

            $data['curr_fyrsdt'] = '01-04-'.substr($curr_finyr,0,4);

            $data['billfor_ind'] = 'N';



            $rep_master_sql = "select * from report_master where report_id = '$report_id'";

	        $rep_master     = $this->db->query($rep_master_sql)->getRowArray();

            $data['lines_per_page'] = $rep_master['lines_per_page'];



            $rep_param_sql    = "SELECT * FROM report_param WHERE report_id='$report_id' ORDER BY param_seq";

            $rep_param_qry    = $this->db->query($rep_param_sql)->getResultArray();

            $count            = count($rep_param_qry);



            $sql = "select main_ac_code, main_ac_desc from account_master where main_ac_code in ('7053','7048','7068') order by main_ac_desc";

            $data['main_ac'] = $this->db->query($sql)->getResultArray();

            return view("pages/Finance/selected_ac_report_7053_7048_7068", compact("data")); 

            

        }

    }



    public function selected_ac_report_5110() {

        $requested_url = session()->requested_end_menu_url;

        $output_type = isset($_REQUEST['output_type']) ? $_REQUEST['output_type'] : '';



        if($this->request->getMethod() == "post") {

            if($output_type == 'Report' || $output_type == 'Pdf' || $output_type == 'Excel') {



                $branch_code      = isset($_REQUEST['branch_code'])?$_REQUEST['branch_code']:null;

                $main_ac_code     = isset($_REQUEST['main_ac_code'])?$_REQUEST['main_ac_code']:null;

                $date_from        = isset($_REQUEST['date_from'])?$_REQUEST['date_from']:null;

                $date_to          = isset($_REQUEST['date_to'])?$_REQUEST['date_to']:null;

                

                $st_dt = date_conv($date_from);

                $en_dt = date_conv($date_to); 

                

                $branch_name_stmt = $this->db->query("select branch_name from branch_master where branch_code='$branch_code'")->getRowArray();

                $branch_name = $branch_name_stmt['branch_name'];

                

                $sele_ac_qry = $this->db->query("select main_ac_desc from account_master where main_ac_code = '$main_ac_code'")->getRowArray();

                $display_heading = $sele_ac_qry['main_ac_desc'];

                

                $sele_ac_stmt = "select x.c_code,x.c_name,sum(x.dr_amount) dr_amount,sum(x.cr_amount) cr_amount

                            from(select ifnull(b.client_code,'') c_code,ifnull(c.client_name,'') c_name,sum(ifnull(b.net_amount,0)) dr_amount,'0' cr_amount

                                from ledger_trans_hdr a, ledger_trans_dtl b left join client_master c

                                on b.client_code = c.client_code

                                where a.doc_date >= '$st_dt' and a.doc_date <= '$en_dt' and a.status_code = 'C' and a.serial_no = b.ref_ledger_serial_no 

                                and b.dr_cr_ind = 'D' and b.main_ac_code = '$main_ac_code' and b.client_code <> ''

                                group by c_name ,c_code 

                            union select ifnull(b.client_code,'') c_code,ifnull(c.client_name,'') c_name,'0' dr_amount,sum(ifnull(b.net_amount,0)) cr_amount

                                from ledger_trans_hdr a, ledger_trans_dtl b left join client_master c

                                on b.client_code  = c.client_code

                                where a.doc_date >= '$st_dt' and a.doc_date <= '$en_dt' and a.status_code = 'C' and a.serial_no = b.ref_ledger_serial_no

                                and b.dr_cr_ind = 'C' and b.main_ac_code = '$main_ac_code' and b.client_code <> ''

                                group by c_name 

                                ,c_code) as x

                                group by x.c_name,x.c_code order by cr_amount desc"; 

                

                $sele_ac_qry  = $this->db->query($sele_ac_stmt)->getResultArray();

                $sele_ac_count = count($sele_ac_qry);

                     

                if(empty($sele_ac_qry)) {

                    session()->setFlashdata('message', 'No Records Found !!');

                    return redirect()->to($this->requested_url());

                }



                $params = [

                    "sele_ac_count" => $sele_ac_count,

                    "display_heading" => $display_heading,

                    "branch_name" => $branch_name,

                    "date_from" => $date_from,

                    "date_to" => $date_to,

                    "requested_url" => $requested_url,

                ];



                if ($output_type == 'Pdf') {

                    $report_type = 'Pdf'; $dompdf = new \Dompdf\Dompdf(); 

                    $reportHTML = view("pages/Finance/selected_ac_report_5110", compact('sele_ac_qry', 'params', 'report_type'));

                    $dompdf->loadHtml($reportHTML);

                    $dompdf->setPaper('A4', 'landscape'); // portrait

                    $dompdf->render();

                    $dompdf->stream('abc.pdf', array('Attachment'=>0)); exit;

                } else if($output_type == 'Excel') {



                    $showActionBtns = true;

                    $spreadsheet = new Spreadsheet();

                    $sheet = $spreadsheet->getActiveSheet();

                    $rows = 1;



                    $fileName = $headings = '';

                    $fileName = 'Finance-Selected-AC-Report-5110-'.date('d-m-Y').'.xlsx';  

                    $headings = ['Code', 'Name', 'Amount'];

                    $column = 'A'; $rows++;



                    foreach ($headings as $heading) {

                        $cell = $column . $rows;

                        $sheet->setCellValue($cell, $heading); // Set the cell value



                        // Apply formatting

                        $style = $sheet->getStyle($cell);

                        $style->getFont()->setBold(true);

                        $style->getAlignment()->setHorizontal(Alignment::HORIZONTAL_CENTER);

                        $style->getFill()->setFillType(Fill::FILL_SOLID)->getStartColor()->setRGB('c8d5ef');

                        $style->getBorders()->getAllBorders()->setBorderStyle(\PhpOffice\PhpSpreadsheet\Style\Border::BORDER_THIN); // Add borders

                        ++$column; // Move to the next column

                    } $rows++;



                    $cnt  = 1 ;

                    $tot_amt = 0.00;

                    $lines_per_page = 65;

                    $tot_dramt  = $tot_cramt = 0 ;



                    $count = $params['sele_ac_count'] ;

                    $transrow = isset($sele_ac_qry[$cnt-1]) ? $sele_ac_qry[$cnt-1] : '' ;

                    while($cnt <= $count) {



                        $net_amount = abs($transrow['cr_amount']) - abs($transrow['dr_amount']) ;

                        $net_amount = abs($net_amount);

                        $clos_amt = $transrow['cr_amount'] - $transrow['dr_amount'] ;



                        if ($net_amount >0) {

                        

                            $sheet->setCellValue('A' . $rows, $transrow['c_code']);

                            $sheet->setCellValue('B' . $rows, $transrow['c_name']);

                            $sheet->setCellValue('C' . $rows, number_format($clos_amt,2,'.','') . ' ' . (($clos_amt < 0) ? 'DR' : 'CR'));



                            $style = $sheet->getStyle('A' . $rows . ':C' . $rows);

                            $style->getBorders()->getAllBorders()->setBorderStyle(\PhpOffice\PhpSpreadsheet\Style\Border::BORDER_THIN); 

                            $rows++;

                        }

                        $tot_amt = $tot_amt + $net_amount;

                        $tot_dramt = $tot_dramt + $transrow['dr_amount'];

                        $tot_cramt = $tot_cramt + $transrow['cr_amount'];

                        $tot_netamt =  $tot_cramt - $tot_dramt;



                        $transrow = ($cnt < $count) ? $sele_ac_qry[$cnt] : $transrow; 

                        $cnt = $cnt + 1 ;

                    }

                

                    $sheet->setCellValue('A' . $rows, 'Total');

                    $sheet->setCellValue('C' . $rows, number_format($tot_netamt,2,'.','') . ' ' . (($clos_amt < 0) ? 'DR' : 'CR')); 



                    $style = $sheet->getStyle('A' . $rows . ':C' . $rows);

                    $style->getFont()->setBold(true);

                    $style->getAlignment()->setHorizontal(Alignment::HORIZONTAL_RIGHT);

                    $style->getBorders()->getAllBorders()->setBorderStyle(\PhpOffice\PhpSpreadsheet\Style\Border::BORDER_THIN); 

                    $style->getBorders()->getBottom()->setBorderStyle(\PhpOffice\PhpSpreadsheet\Style\Border::BORDER_MEDIUM); 

                    $style->getBorders()->getRight()->setBorderStyle(\PhpOffice\PhpSpreadsheet\Style\Border::BORDER_MEDIUM);

                    $style->getBorders()->getTop()->setBorderStyle(\PhpOffice\PhpSpreadsheet\Style\Border::BORDER_MEDIUM);

                    $style->getFill()->setFillType(Fill::FILL_SOLID)->getStartColor()->setRGB('ffe93a');

                    $sheet->mergeCells('A' . $rows . ':B' . $rows);

                    $rows++;

                    

                    $writer = new Xlsx($spreadsheet);

                    $writer->save($fileName);

                    header('Content-Type: application/vnd.ms-excel');

                    header('Content-Disposition: attachment; filename="'.basename($fileName).'"');

                    header('Expires: 0');

                    header('Cache-control: must-revalidate');

                    header('Pragma: public');

                    header('Content-Length:'.filesize($fileName));

                    flush();

                    readfile($fileName); 



                } else return view("pages/Finance/selected_ac_report_5110", compact("sele_ac_qry", 'params')); 

            }

        } else {

            $data = [];

            $data = branches(session()->userId);

            $report_id   = $_GET['display_id'];



            $curr_finyr = session()->financialYear;

            $data['curr_fyrsdt'] = '01-04-'.substr($curr_finyr,0,4);

            $data['billfor_ind'] = 'N';



            $rep_master_sql = "select * from report_master where report_id = '$report_id'";

	        $rep_master     = $this->db->query($rep_master_sql)->getRowArray();

            $data['lines_per_page'] = $rep_master['lines_per_page'];



            $sql = "select main_ac_code, main_ac_desc from account_master where main_ac_code = '5110' order by main_ac_desc";

            $data['main_ac'] = $this->db->query($sql)->getResultArray();

            return view("pages/Finance/selected_ac_report_5110", compact("data")); 

        }

    }



    public function selected_ac_report_7021_receiver() {    // doubt

        $requested_url = session()->requested_end_menu_url;

        $output_type = isset($_REQUEST['output_type']) ? $_REQUEST['output_type'] : '';



        if($this->request->getMethod() == "post") {

            if($output_type == 'Report' || $output_type == 'Pdf' || $output_type == 'Excel') {



                $report_desc     = "RECEIVER REMUNERATION" ;

                $branch_code     = $_REQUEST['branch_code'] ;

                $start_date      = $_REQUEST['date_from'] ; if($start_date != '')   { $start_date_ymd = date_conv($start_date); } else { $start_date_ymd = '1901-01-01'; }

                $end_date        = $_REQUEST['date_to'] ; if($end_date   != '')   { $end_date_ymd   = date_conv($end_date);   } else { $end_date_ymd   = date('d-m-Y') ; }

                $court_code      = '%' ; 

                $client_code     = '%' ; 

                $matter_code     = '%' ; 

                $initial_code    = '%' ; 



                $branch_qry    = $this->db->query("select * from branch_master where branch_code = '$branch_code' ")->getRowArray() ;

                $branch_name   = $branch_qry['branch_name'] ;



                if($start_date == '')  {$period_desc = "UPTO ".$end_date ;} else {$period_desc = $start_date.' - '.$end_date ;}

              

                if($court_code  == '%') { $court_heading   = 'COURT : ALL'  ; } else { $court_heading   = 'COURT : SELECTIVE'  ; }

                if($client_code == '%') { $client_heading  = 'CLIENT : ALL' ; } else { $client_heading  = 'CLIENT : SELECTIVE' ; }

                if($matter_code == '%') { $matter_heading  = 'MATTER : ALL' ; } else { $matter_heading  = 'MATTER : SELECTIVE' ; }

              

                if($client_code == '%') { $client_name     = 'ALL' ; } else { $client_name     = $client_name ; }

              

                $report_sub_desc = '[ '.$court_heading.' / '.$client_heading.' / '.$matter_heading.' ]' ;

                

                $bill_sql = "select e.doc_no, e.doc_date,c.court_code,e.serial_no,f.main_ac_code,f.client_code,b.client_name, concat(c.matter_desc1,' ',c.matter_desc2) matter_desc, f.matter_code, c.initial_code, f.narration, e.gross_amount, e.tax_amount, e.net_amount, d.code_desc court_name

                            from ledger_trans_hdr e, ledger_trans_dtl f, client_master b, fileinfo_header c, code_master d

                            where e.branch_code like '$branch_code' 

                            and f.client_code like '$client_code'

                            and f.matter_code like '$matter_code' 

                            and e.serial_no = f.ref_ledger_serial_no 

                            and e.doc_date between '$start_date_ymd' and '$end_date_ymd'

                            and f.client_code = b.client_code 

                            and f.matter_code = c.matter_code 

                            and f.main_ac_code = '7021' 

                            and c.court_code like '$court_code' 

                            and c.court_code = d.code_code 

                            and d.type_code = '001' 

                            order by c.court_code" ;  



                $bill_qry  = $this->db->query($bill_sql)->getResultArray() ;

                $bill_cnt  = count($bill_qry);



                if(empty($bill_qry)) {

                    session()->setFlashdata('message', 'No Records Found !!');

                    return redirect()->to($this->requested_url());

                }



                $params = [

                    "report_desc" => $report_desc,

                    "report_sub_desc" => $report_sub_desc,

                    "client_name" => $client_name,

                    "period_desc" => $period_desc,

                    "branch_name" => $branch_name,

                    "bill_cnt" => $bill_cnt,

                    "requested_url" => $requested_url,

                ];

                

                if ($output_type == 'Pdf') {

                    $report_type = 'Pdf'; $dompdf = new \Dompdf\Dompdf(); 

                    $reportHTML = view("pages/Finance/selected_ac_report_7021_receiver", compact('bill_qry', 'params', 'report_type'));

                    $dompdf->loadHtml($reportHTML);

                    $dompdf->setPaper('A4', 'landscape'); // portrait

                    $dompdf->render();

                    $dompdf->stream('abc.pdf', array('Attachment'=>0)); exit;

                } else if($output_type == 'Excel') {



                    $spreadsheet = new Spreadsheet();

                    $sheet = $spreadsheet->getActiveSheet();

                    $rows = 1;



                    $fileName = $headings = '';

                    $fileName = 'Finance-Selected-AC-Report-7021-Receiver-'.date('d-m-Y').'.xlsx';  

                    $headings = ['Court / Doc No', 'Doc Date', 'Client / Matter / Narration ', 'Gross Amount (Rs.)', 'TDS (Rs.)', 'Net Amount (Rs.)'];



                    $column = 'A'; $rows++;



                    foreach ($headings as $heading) {

                        $cell = $column . $rows;

                        $sheet->setCellValue($cell, $heading); // Set the cell value



                        // Apply formatting

                        $style = $sheet->getStyle($cell);

                        $style->getFont()->setBold(true);

                        $style->getAlignment()->setHorizontal(Alignment::HORIZONTAL_CENTER);

                        $style->getFill()->setFillType(Fill::FILL_SOLID)->getStartColor()->setRGB('c8d5ef');

                        $style->getBorders()->getAllBorders()->setBorderStyle(\PhpOffice\PhpSpreadsheet\Style\Border::BORDER_THIN); // Add borders

                        ++$column; // Move to the next column

                    } $rows++;



                    $tbilamt = 0; 

                    $tcolamt = 0; 

                    $tdefamt = 0; 

                    $tbalamt = 0; 

                    $ltotamt = 0;

                    $gttotamt = 0; 

                    $tttotamt = 0;

                    $ttotamt  = 0; 

                    $rowcnt     = 1 ;

                    $report_row = isset($bill_qry[$rowcnt-1]) ? $bill_qry[$rowcnt-1] : '' ;  

                    $report_cnt = $params['bill_cnt'] ;

                    while ($rowcnt <= $report_cnt) {

                        $cbilamt   = 0; 

                        $ccolamt   = 0; 

                        $cdefamt   = 0; 

                        $cbalamt   = 0; 

                        $pcourtind = 'Y' ;

                        $pcourtcd  = $report_row['court_code'] ;

                        $pcourtnm  = $report_row['court_name'] ;

                        while($pcourtcd == $report_row['court_code'] && $rowcnt <= $report_cnt) {

                            if ($pcourtind == 'Y') { 

                                $sheet->setCellValue('A' . $rows, $pcourtnm);



                                $pcourtind = 'N' ;



                                $style = $sheet->getStyle('A' . $rows . ':F' . $rows);

                                $style->getFont()->setBold(true);

                                $style->getAlignment()->setHorizontal(Alignment::HORIZONTAL_LEFT);

                                $style->getBorders()->getAllBorders()->setBorderStyle(\PhpOffice\PhpSpreadsheet\Style\Border::BORDER_THIN); 

                                $sheet->mergeCells('A' . $rows . ':F' . $rows);

                                $rows++;

                            }

                            $sheet->setCellValue('A' . $rows, $report_row['doc_no']);

                            $sheet->setCellValue('B' . $rows, date_conv($report_row['doc_date']));

                            $sheet->setCellValue('C' . $rows, strtoupper($report_row['client_name']));



                            $style = $sheet->getStyle('A' . $rows . ':F' . $rows);

                            $style->getBorders()->getAllBorders()->setBorderStyle(\PhpOffice\PhpSpreadsheet\Style\Border::BORDER_THIN); 

                            $rows++;



                            $sheet->setCellValue('C' . $rows, strtoupper($report_row['matter_desc']).'['.$report_row['matter_code'].']');



                            $style = $sheet->getStyle('A' . $rows . ':F' . $rows);

                            $style->getBorders()->getAllBorders()->setBorderStyle(\PhpOffice\PhpSpreadsheet\Style\Border::BORDER_THIN); 

                            $rows++;



                            $sheet->setCellValue('C' . $rows, strtoupper($report_row['narration']));

                            $sheet->setCellValue('D' . $rows, ($report_row['gross_amount'] > 0) ? number_format($report_row['gross_amount'],2,'.','') : '');

                            $sheet->setCellValue('E' . $rows, ($report_row['tax_amount'] > 0) ? number_format($report_row['tax_amount'],2,'.','') : '');

                            $sheet->setCellValue('F' . $rows, ($report_row['net_amount'] > 0) ? number_format($report_row['net_amount'],2,'.','') : '');



                            $style = $sheet->getStyle('A' . $rows . ':F' . $rows);

                            $style->getBorders()->getAllBorders()->setBorderStyle(\PhpOffice\PhpSpreadsheet\Style\Border::BORDER_THIN); 

                            $rows++;



                            $lgtotamt = $ltotamt + $report_row['gross_amount'] ;

                            $lttotamt = $ltotamt + $report_row['tax_amount'] ;

                            $ltotamt = $ltotamt + $report_row['net_amount'] ;

                            

                            $report_row = ($rowcnt < $report_cnt) ? $bill_qry[$rowcnt] : $report_row;   

                            $rowcnt = $rowcnt + 1 ;

                        }  

                        $sheet->setCellValue('A' . $rows, 'TOTAL');

                        $sheet->setCellValue('D' . $rows, ($lgtotamt > 0) ? number_format($lgtotamt,2,'.','') : '');

                        $sheet->setCellValue('E' . $rows, ($lttotamt > 0) ? number_format($lttotamt,2,'.','') : '');

                        $sheet->setCellValue('F' . $rows, ($ltotamt > 0) ? number_format($ltotamt,2,'.','') : '');



                        $style = $sheet->getStyle('A' . $rows . ':F' . $rows);

                        $style->getFont()->setBold(true);

                        $style->getAlignment()->setHorizontal(Alignment::HORIZONTAL_RIGHT);

                        $style->getBorders()->getAllBorders()->setBorderStyle(\PhpOffice\PhpSpreadsheet\Style\Border::BORDER_THIN); 

                        $style->getBorders()->getBottom()->setBorderStyle(\PhpOffice\PhpSpreadsheet\Style\Border::BORDER_MEDIUM); 

                        $style->getBorders()->getRight()->setBorderStyle(\PhpOffice\PhpSpreadsheet\Style\Border::BORDER_MEDIUM);

                        $style->getBorders()->getTop()->setBorderStyle(\PhpOffice\PhpSpreadsheet\Style\Border::BORDER_MEDIUM);

                        $style->getFill()->setFillType(Fill::FILL_SOLID)->getStartColor()->setRGB('c8efe3');

                        $sheet->mergeCells('A' . $rows . ':C' . $rows);

                        $rows++;



                        $gttotamt = $gttotamt + $lgtotamt ;

                        $tttotamt = $tttotamt + $lttotamt ;

                        $ttotamt  = $ttotamt + $ltotamt ;

                    }

                    $sheet->setCellValue('A' . $rows, 'GRAND TOTAL');

                    $sheet->setCellValue('D' . $rows, ($gttotamt > 0) ? number_format($gttotamt,2,'.','') : '');

                    $sheet->setCellValue('E' . $rows, ($tttotamt > 0) ? number_format($tttotamt,2,'.','') : '');

                    $sheet->setCellValue('F' . $rows, ($ttotamt > 0) ? number_format($ttotamt,2,'.','') : '');



                    $style = $sheet->getStyle('A' . $rows . ':F' . $rows);

                    $style->getFont()->setBold(true);

                    $style->getAlignment()->setHorizontal(Alignment::HORIZONTAL_RIGHT);

                    $style->getBorders()->getAllBorders()->setBorderStyle(\PhpOffice\PhpSpreadsheet\Style\Border::BORDER_THIN); 

                    $style->getBorders()->getBottom()->setBorderStyle(\PhpOffice\PhpSpreadsheet\Style\Border::BORDER_MEDIUM); 

                    $style->getBorders()->getRight()->setBorderStyle(\PhpOffice\PhpSpreadsheet\Style\Border::BORDER_MEDIUM);

                    $style->getBorders()->getTop()->setBorderStyle(\PhpOffice\PhpSpreadsheet\Style\Border::BORDER_MEDIUM);

                    $style->getFill()->setFillType(Fill::FILL_SOLID)->getStartColor()->setRGB('FFFF99');

                    $sheet->mergeCells('A' . $rows . ':C' . $rows);

                    $rows++;



                    $writer = new Xlsx($spreadsheet);

                    $writer->save($fileName);

                    header('Content-Type: application/vnd.ms-excel');

                    header('Content-Disposition: attachment; filename="'.basename($fileName).'"');

                    header('Expires: 0');

                    header('Cache-control: must-revalidate');

                    header('Pragma: public');

                    header('Content-Length:'.filesize($fileName));

                    flush();

                    readfile($fileName); 



                } else return view("pages/Finance/selected_ac_report_7021_receiver", compact("bill_qry", 'params')); 

            }

        } else {

            $data = [];

            $data = branches(session()->userId);

            $report_id   = $_GET['display_id'];



            $curr_finyr = session()->financialYear;

            $data['curr_fyrsdt'] = '01-04-'.substr($curr_finyr,0,4);

            $data['billfor_ind'] = 'N';



            $rep_master_sql = "select * from report_master where report_id = '$report_id'";

	        $rep_master     = $this->db->query($rep_master_sql)->getRowArray();

            $data['lines_per_page'] = $rep_master['lines_per_page'];



            $sql = "select main_ac_code, main_ac_desc from account_master where main_ac_code = '7021' order by main_ac_desc";

            $data['main_ac'] = $this->db->query($sql)->getResultArray();

            return view("pages/Finance/selected_ac_report_7021_receiver", compact("data")); 

        }

    }



    public function general_ledger() {

        $requested_url = session()->requested_end_menu_url;

        $output_type = isset($_REQUEST['output_type']) ? $_REQUEST['output_type'] : '';

        $company_code = session()->user_qry['company_code'];

        $showActionBtns = false;



        if($this->request->getMethod() == "post") {

            if($output_type == 'Report' || $output_type == 'Pdf' || $output_type == 'Excel') {

                $showActionBtns = true;

                $display_heading  = isset($_REQUEST['display_heading'])?$_REQUEST['display_heading']:'General Ledger';

                $lines_per_page   = isset($_REQUEST['lines_per_page'])?$_REQUEST['lines_per_page']:52;

                //$company_code     = isset($_REQUEST['company_code'])?$_REQUEST['company_code']:null;

                $branch_code      = isset($_REQUEST['branch_code'])?$_REQUEST['branch_code']:null;

                $main_ac_code     = isset($_REQUEST['main_ac_code'])?$_REQUEST['main_ac_code']:null;

                $date_from        = isset($_REQUEST['date_from'])?$_REQUEST['date_from']:null;

                $date_to          = isset($_REQUEST['date_to'])?$_REQUEST['date_to']:null;

                

                $branch_name_stmt = $this->db->query("select branch_name from branch_master where branch_code='$branch_code'")->getRowArray();

                $branch_name = $branch_name_stmt['branch_name'];

                

                if(empty($main_ac_code) || $main_ac_code == 'All' || $main_ac_code == '%') {

                  $grand_ind = 'Y';

                  $main_ac_code = " like '%' "; 

                } else {

                  $grand_ind     = '';

                  $main_ac_code = " in(".stripslashes($main_ac_code).")"; // add this line for multiple select option

                }



                //-----------------

                //converting of Start Date and End Date in 'yyyy-mm-dd' format

                $date_frm = date_conv($date_from) ;

                $date_upt = date_conv($date_to);



                //creating of current financial month and current financial year of the Start Date  

                $fin_month = substr($date_frm,5,2);

                $fin_year = substr($date_frm,0,4); 



                if($fin_month <= 3) {

                    $fin_yr = ($fin_year - 1).'-'.$fin_year ;

                } else {

                    $fin_yr = $fin_year.'-'.($fin_year+1) ;

                } 



                //Current year-month in 'yyyymm' format

                $year_mon = substr($date_frm,0,4).substr($date_frm,5,2) ; 

                //The first date of the month mentioned in Start Date

                $date_start = substr($date_frm,0,4).'-'.substr($date_frm,5,2).'-'.'01' ;



                $user_id        = session()->userId;

                $logdt_qry      = $this->db->query("select current_date, current_time, date_format(current_date,'%d-%m-%Y') current_dmydate ")->getRowArray();

                $curr_time      = $logdt_qry['current_time'];

                $curr_date      = $logdt_qry['current_dmydate'];

                $curr_day       = substr($curr_date,0,2) ;

                $curr_month     = substr($curr_date,3,2) ; 

                $curr_year      = substr($curr_date,6,4) ;

                $temp_id        = $user_id."_".$curr_year.$curr_month.$curr_day.str_replace(':','',$curr_time);



                $table1 = $temp_id.'_general_ledger_open_bal';

                $table2 = $temp_id.'_general_ledger_dtl_rec';

                $this->db->query("DROP TABLE IF EXISTS $table1");

                $this->db->query("DROP TABLE IF EXISTS $table2");



                // Temporary table for opening balance from account_master balance			

                $create_sql1 = "CREATE TABLE $table1(branch_code varchar(4),branch_abbr_name   varchar(3),branch_name varchar(50),

                        main_ac_code varchar(6),main_ac_desc varchar(100),amount_dr double(12,2),amount_cr double(12,2))";

                $this->db->query($create_sql1);



                // Temporary table for Detail Ledger transactions			

                $create_sql2 = "CREATE TABLE $table2(serial_no int(8),branch_code varchar(4),branch_abbr_name varchar(3),branch_name varchar(50),

                        main_ac_code varchar(6),main_ac_desc varchar(100),daybook_code char(2),doc_type varchar(4),doc_date date,

                        doc_no varchar(10),instrument_no varchar(20),instrument_dt date,narration varchar(100),amount_dr double(12,2),

                        amount_cr double(12,2),dr_cr_ind char(1),rec_code char(2),sub_ac_ind char(1))";

                $this->db->query($create_sql2);



                // Insertion of Year Opening Balance in Temporary table 

                $insert_sql1 = "INSERT INTO $table1(branch_code,branch_abbr_name,branch_name,main_ac_code,main_ac_desc,amount_dr,amount_cr)

                                select b.branch_code,c.branch_abbr_name, c.branch_name, a.main_ac_code , a.main_ac_desc , ifnull(b.amount_dr,0.00) , ifnull(b.amount_cr,0.00)

                                from branch_master c, account_master a left join account_balance b

                                on a.main_ac_code = b.main_ac_code

                                and b.fin_year = '$fin_yr'

                                and b.record_code = '01'

                                where b.branch_code = c.branch_code

                                and c.company_code like '$company_code'

                                and c.branch_code  like '$branch_code'

                            order by a.main_ac_code" ;

                            // echo '<pre>';print_r($insert_sql1);die;

                $this->db->query($insert_sql1);



                // Insertion of Balance of previous months in Temporary table 

                $insert_sql2 = "INSERT INTO $table1(branch_code,branch_abbr_name,branch_name,main_ac_code,main_ac_desc,amount_dr,amount_cr)

                                select a.branch_code,c.branch_abbr_name, c.branch_name, a.main_ac_code , b.main_ac_desc , a.amount_dr , a.amount_cr 

                                from account_balance a , account_master b, branch_master c

                                where a.fin_year = '$fin_yr'

                                and a.main_ac_code = b.main_ac_code

                                and yyyy_mm < '$year_mon'

                                and a.record_code = '02'

                                and a.branch_code = c.branch_code

                                and c.company_code like '$company_code'

                                and c.branch_code  like '$branch_code'

                                and b.main_ac_code ".$main_ac_code."

                                order by a.main_ac_code" ;

                $this->db->query($insert_sql2);



                // Insertion of Balance for old days of month prior to start date - for broken start date 

                $insert_sql3 = "INSERT INTO $table1(branch_code,branch_abbr_name,branch_name,main_ac_code,main_ac_desc,amount_dr,amount_cr)

                                select b.branch_code,d.branch_abbr_name, d.branch_name,a.main_ac_code , c.main_ac_desc , sum(if(dr_cr_ind = 'D',ifnull(a.net_amount,0.00),0)) amount_dr , sum(if(dr_cr_ind = 'C',ifnull(a.net_amount,0.00),0)) amount_cr 

                                from ledger_trans_dtl a , ledger_trans_hdr b , account_master c, branch_master d

                                where a.ref_ledger_serial_no = b.serial_no

                                and a.main_ac_code = c.main_ac_code

                                and b.status_code = 'C'			

                                and b.doc_date between '$date_start' and date_sub('$date_frm' , INTERVAL 1 DAY)

                                and b.branch_code = d.branch_code

                                and d.company_code like '$company_code'

                                and d.branch_code like '$branch_code'

                                and a.main_ac_code ".$main_ac_code."

                                group by a.main_ac_code ";

                $this->db->query($insert_sql3);



                // Insertion of Opening Balance in main temparary table - it will be printed in ledger  

                $insert_sql5 = "INSERT INTO $table2(branch_code,branch_abbr_name,branch_name,main_ac_code,main_ac_desc,amount_dr,rec_code,narration,dr_cr_ind)

                                select a.branch_code, a.branch_abbr_name, a.branch_name, a.main_ac_code, a.main_ac_desc , sum(a.amount_dr - a.amount_cr) , '01' , 'Opening Balance' , 'S'

                                from $table1 a group by main_ac_code";

                $this->db->query($insert_sql5);



                // Insertion of Summary transaction for accounts with S/L ind = 'Y' : Dr_cr_ind = 'D'  

                $insert_sql6 = "INSERT INTO $table2(branch_code,branch_abbr_name,branch_name,main_ac_code,main_ac_desc,instrument_no,instrument_dt,amount_dr,rec_code,sub_ac_ind,narration,dr_cr_ind)

                                select b.branch_code, d.branch_abbr_name, d.branch_name, a.main_ac_code, c.main_ac_desc, b.instrument_no, b.instrument_dt , sum(ifnull(a.net_amount,0.00)) , '03' , c.sub_ac_ind , 'Total Transaction : $date_from to $date_to' , a.dr_cr_ind

                                from ledger_trans_dtl a , ledger_trans_hdr b , account_master c, branch_master d

                                where a.ref_ledger_serial_no = b.serial_no

                                and a.main_ac_code = c.main_ac_code

                                and a.dr_cr_ind = 'D'

                                and c.sub_ac_ind = 'Y'

                                and b.status_code = 'C'			

                                and b.doc_date between '$date_frm' and '$date_upt'

                                and b.branch_code = d.branch_code

                                and d.company_code like '$company_code'

                                and d.branch_code like '$branch_code'

                                and a.main_ac_code ".$main_ac_code."

                                group by    a.main_ac_code";

                $this->db->query($insert_sql6);



                // Insertion of Summary transaction for accounts with S/L ind = 'Y' : Dr_cr_ind = 'C'  

                $insert_sql7 = "INSERT INTO $table2(branch_code,branch_abbr_name,branch_name,main_ac_code,main_ac_desc,instrument_no,instrument_dt,amount_cr,rec_code,sub_ac_ind,narration,dr_cr_ind)

                                select b.branch_code, d.branch_abbr_name, d.branch_name,a.main_ac_code , c.main_ac_desc, b.instrument_no, b.instrument_dt , sum(ifnull(a.net_amount,0.00)) , '03' , 'Y' , 'Total Transaction : $date_from to $date_to' , a.dr_cr_ind

                                from ledger_trans_dtl a , ledger_trans_hdr b , account_master c, branch_master d

                                where a.ref_ledger_serial_no = b.serial_no

                                and a.main_ac_code = c.main_ac_code

                                and a.dr_cr_ind = 'C'

                                and c.sub_ac_ind = 'Y'

                                and b.status_code = 'C'			

                                and b.doc_date between '$date_frm' and '$date_upt'

                                and b.branch_code = d.branch_code

                                and d.company_code like '$company_code'

                                and d.branch_code like '$branch_code'

                                and a.main_ac_code ".$main_ac_code."

                                group by a.main_ac_code";

                $this->db->query($insert_sql7);



                // Insertion of Detail transaction for accounts with S/L ind = 'N'    

                $insert_sql10 = "INSERT INTO $table2(serial_no,branch_code,branch_abbr_name,branch_name,main_ac_code,main_ac_desc,instrument_no,instrument_dt,

                                daybook_code,doc_type,doc_date,doc_no,narration,amount_dr,amount_cr,dr_cr_ind,rec_code,sub_ac_ind)

                                select b.serial_no, b.branch_code, d.branch_abbr_name, d.branch_name, a.main_ac_code , c.main_ac_desc, b.instrument_no, b.instrument_dt , b.daybook_code , b.doc_type , b.doc_date , b.doc_no , a.narration , if(a.dr_cr_ind ='D' ,a.net_amount,0) , if(a.dr_cr_ind = 'C' , a.net_amount , 0) , a.dr_cr_ind , '02' , 'N'

                                from ledger_trans_dtl a , ledger_trans_hdr b , account_master c, branch_master d

                                where a.ref_ledger_serial_no = b.serial_no

                                and b.status_code = 'C' 

                                and a.main_ac_code = c.main_ac_code

                                and c.sub_ac_ind = 'N'

                                and b.doc_date between '$date_frm' and '$date_upt'

                                and b.branch_code = d.branch_code

                                and d.company_code like '$company_code'

                                and d.branch_code like '$branch_code'

                                and a.main_ac_code ".$main_ac_code."

                                order by a.main_ac_code,b.doc_type,b.doc_date,b.doc_no";

                $this->db->query($insert_sql10);

                

                $sele_sql = "select a.* from $table2 a, branch_master b where a.main_ac_code ". $main_ac_code ." and a.branch_code  like '$branch_code' and a.branch_code  = b.branch_code 

                            order by a.main_ac_code, a.rec_code, a.doc_date, a.daybook_code, a.doc_type, a.doc_no";

                $sele_qry = $this->db->query($sele_sql)->getResultArray();

                // echo '<pre>';print_r($sele_qry);die;

                $count = count($sele_qry) ;



                if(empty($sele_qry)) {

                    session()->setFlashdata('message', 'No Records Found !!');

                    return redirect()->to($this->requested_url());

                }



                $params = [

                    'count' => $count,

                    'display_heading' => $display_heading,

                    'branch_name' => $branch_name,

                    'date_from' => $date_from,

                    'fin_year' => $fin_year,

                    'date_to' => $date_to,

                    'count' => $count,

                    'requested_url' => $requested_url,

                    'lines_per_page' => $lines_per_page,



                ];

                if ($output_type == 'Pdf') {

                    $report_type = 'Pdf'; $dompdf = new \Dompdf\Dompdf(); 

                    $reportHTML = view("pages/Finance/general_ledger", compact("sele_qry", "params", 'showActionBtns', 'report_type'));

                    $dompdf->loadHtml($reportHTML);

                    $dompdf->setPaper('A4', 'landscape'); // portrait

                    $dompdf->render();

                    $dompdf->stream('abc.pdf', array('Attachment'=>0)); exit;

                } else if($output_type == 'Excel'){

                    $spreadsheet = new Spreadsheet();

                    $sheet = $spreadsheet->getActiveSheet();

                    $rows = 1;



                    $fileName = $headings = '';

                    $fileName = 'Finance-General-Ledger-'.date('d-m-Y').'.xlsx';  

                    $headings = ['A/c', 'DB', 'Type', 'Doc Date', 'Doc No', 'Instrument No.', 'Date', 'Narration', 'Debit', 'Credit', 'Balance'];

                    $column = 'A'; $rows++;



                    foreach ($headings as $heading) {

                        $cell = $column . $rows;

                        $sheet->setCellValue($cell, $heading); // Set the cell value



                        // Apply formatting

                        $style = $sheet->getStyle($cell);

                        $style->getFont()->setBold(true);

                        $style->getAlignment()->setHorizontal(Alignment::HORIZONTAL_CENTER);

                        $style->getFill()->setFillType(Fill::FILL_SOLID)->getStartColor()->setRGB('c8d5ef');

                        $style->getBorders()->getAllBorders()->setBorderStyle(\PhpOffice\PhpSpreadsheet\Style\Border::BORDER_THIN); // Add borders

                        ++$column; // Move to the next column

                    } $rows++;



                    $lno = 0 ;

                    $page = 0 ;

                    $cnt = 1 ;

                    $balance_print = 'Yes';

                    $transrow = isset($sele_qry[$cnt-1]) ? $sele_qry[$cnt-1] : '' ; 

                    $count = $params['count'] ;

                    $grand_trans_dr = 0;

                    $grand_trans_cr = 0;

                    $grand_clo_balance = 0;

                    $grand_op_balance = 0;

                    while($cnt <= $count) {

                        $m_ac_code   = $transrow['main_ac_code'] ;

                        $ac_ind      = $transrow['sub_ac_ind'] ;

                        $t_dr_amt    = 0 ;

                        $t_cr_amt    = 0 ;

                        $t_clo_amt   = 0 ;

                        $balance_amt = 0.00 ;

                        $pmccind = 'Y';

                        while($m_ac_code == $transrow['main_ac_code'] && $cnt <= $count) {

                            $p_rec = $transrow['rec_code'] ;

                            while($m_ac_code == $transrow['main_ac_code'] && $cnt <= $count &&  $p_rec == $transrow['rec_code'])

                            {

                                $ac_ind = $transrow['sub_ac_ind'];	

                                if($pmccind == 'Y') {

                                    $pmccind      = 'N' ;

                                    $main_ac_code = $transrow['main_ac_code'] ;

                                    $main_ac_desc = $transrow['main_ac_desc'] ;



                                    $sheet->setCellValue('A' . $rows, $main_ac_code);

                                    $sheet->setCellValue('B' . $rows, $main_ac_desc);



                                    $style = $sheet->getStyle('A' . $rows . ':K' . $rows);

                                    $style->getFont()->setBold(true);

                                    $style->getAlignment()->setHorizontal(Alignment::HORIZONTAL_LEFT);

                                    $style->getBorders()->getAllBorders()->setBorderStyle(\PhpOffice\PhpSpreadsheet\Style\Border::BORDER_THIN); 

                                    $sheet->mergeCells('B' . $rows . ':K' . $rows);

                                    $rows++;

                                } else {

                                    $main_ac_code = '' ;

                                    $main_ac_desc = '' ;

                                }

                                $sheet->setCellValue('A' . $rows, $transrow['branch_abbr_name']);

                                $sheet->setCellValue('B' . $rows, $transrow['daybook_code']);

                                $sheet->setCellValue('C' . $rows, $transrow['doc_type']);

                                $sheet->setCellValue('D' . $rows, date_conv($transrow['doc_date']));

                                $sheet->setCellValue('E' . $rows, $transrow['doc_no']);

                                $sheet->setCellValue('F' . $rows, $transrow['instrument_no']);

                                $sheet->setCellValue('G' . $rows, date_conv($transrow['instrument_dt']));



                                if($transrow['rec_code'] == '03') {

                                    $sheet->setCellValue('H' . $rows, substr($transrow['narration'],0,50));

                                } else if($transrow['rec_code'] == '04') {

                                    $sheet->setCellValue('H' . $rows, substr($transrow['narration'],0,50));

                                } else {

                                    $sheet->setCellValue('H' . $rows, substr($transrow['narration'],0,50));

                                }

                                if($transrow['dr_cr_ind'] == 'D') {

                                $t_dr_amt       = $t_dr_amt + $transrow['amount_dr'] ;

                                $grand_trans_dr = $grand_trans_dr + $transrow['amount_dr'] ;		   

                                $balance_amt    = $balance_amt + $transrow['amount_dr'] ;



                                $sheet->setCellValue('I' . $rows, number_format($transrow['amount_dr'],2,'.',''));

                                $sheet->setCellValue('J' . $rows, '');

                                $sheet->setCellValue('K' . $rows, ($balance_print=='Yes') ? number_format($balance_amt,2,'.','') : '');



                                } if($transrow['dr_cr_ind'] == 'C') {

                                $t_cr_amt       = $t_cr_amt + $transrow['amount_cr'] ;

                                $grand_trans_cr = $grand_trans_cr + $transrow['amount_cr'];		  

                                $balance_amt    = $balance_amt - $transrow['amount_cr'] ;



                                $sheet->setCellValue('I' . $rows, '');

                                $sheet->setCellValue('J' . $rows, number_format($transrow['amount_cr'],2,'.',''));

                                $sheet->setCellValue('K' . $rows, ($balance_print=='Yes') ? number_format($balance_amt,2,'.','') : '');



                                }if($transrow['dr_cr_ind'] == 'S') {

                                    $balance_amt = $transrow['amount_dr'] ; 

                                    if($transrow['amount_dr'] > 0 )

                                    {

                                        $t_dr_amt = $t_dr_amt + $transrow['amount_dr'] ; 

                                        $grand_op_balance = $grand_op_balance + $transrow['amount_dr'];		



                                        $sheet->setCellValue('I' . $rows, number_format($transrow['amount_dr'],2,'.',''));

                                        $sheet->setCellValue('J' . $rows, '');

                                        $sheet->setCellValue('K' . $rows, ($balance_print=='Yes') ? number_format($balance_amt,2,'.','') : '');

                                   

                                    } if($transrow['amount_dr'] < 0 ) {



                                        $t_cr_amt = $t_cr_amt + abs($transrow['amount_dr']) ;

                                        $grand_op_balance = $grand_op_balance + $transrow['amount_dr'];	



                                        $sheet->setCellValue('I' . $rows, '');

                                        $sheet->setCellValue('J' . $rows, number_format(abs($transrow['amount_dr']),2,'.',''));

                                        $sheet->setCellValue('K' . $rows, ($balance_print=='Yes') ? number_format($balance_amt,2,'.','') : '');

                                    } if($transrow['amount_dr'] == 0.00 ) {



                                        $sheet->setCellValue('I' . $rows, '');

                                        $sheet->setCellValue('J' . $rows, '');

                                        $sheet->setCellValue('K' . $rows, ($balance_print=='Yes') ? number_format($balance_amt,2,'.','') : '');

	 

                                    }	



                                }



                                $style = $sheet->getStyle('A' . $rows . ':K' . $rows);

                                $style->getBorders()->getAllBorders()->setBorderStyle(\PhpOffice\PhpSpreadsheet\Style\Border::BORDER_THIN); 

                                $rows++;



                                $transrow = ($cnt < $count) ? $sele_qry[$cnt] : $transrow;  

                                $cnt = $cnt + 1 ; 

                            }

                            $t_clo_amt = $t_dr_amt - $t_cr_amt ;

                        }

                        if($t_dr_amt != 0.00 || $t_cr_amt != 0.00) {

                            $sheet->setCellValue('A' . $rows, 'TOTAL');

                            if($t_dr_amt > 0 ) {

                                $sheet->setCellValue('I' . $rows, number_format($t_dr_amt,2,'.',''));

                            } if($t_dr_amt == 0.00) {

                                $sheet->setCellValue('I' . $rows, '');

                            } if($t_cr_amt > 0 ) {

                                $sheet->setCellValue('J' . $rows, number_format($t_cr_amt,2,'.',''));

                            } if($t_cr_amt = 0.00) {

                                $sheet->setCellValue('J' . $rows, '');

                            }

                            $style = $sheet->getStyle('A' . $rows . ':K' . $rows);

                            $style->getFont()->setBold(true);

                            $style->getAlignment()->setHorizontal(Alignment::HORIZONTAL_RIGHT);

                            $style->getBorders()->getAllBorders()->setBorderStyle(\PhpOffice\PhpSpreadsheet\Style\Border::BORDER_THIN); 

                            $style->getBorders()->getBottom()->setBorderStyle(\PhpOffice\PhpSpreadsheet\Style\Border::BORDER_MEDIUM); 

                            $style->getBorders()->getRight()->setBorderStyle(\PhpOffice\PhpSpreadsheet\Style\Border::BORDER_MEDIUM);

                            $style->getBorders()->getTop()->setBorderStyle(\PhpOffice\PhpSpreadsheet\Style\Border::BORDER_MEDIUM);

                            $style->getFill()->setFillType(Fill::FILL_SOLID)->getStartColor()->setRGB('c8efe3');

                            $sheet->mergeCells('A' . $rows . ':H' . $rows);

                            $rows++;

                        }

                        $sheet->setCellValue('A' . $rows, 'Closing Balance');

                        if($t_clo_amt > 0) {

                            $sheet->setCellValue('I' . $rows, number_format($t_clo_amt,2,'.',''));

                            $sheet->setCellValue('J' . $rows, '');

                        } if($t_clo_amt < 0) {

                            $sheet->setCellValue('I' . $rows, '');

                            $sheet->setCellValue('J' . $rows, number_format(abs($t_clo_amt),2,'.',''));

                        } if($t_clo_amt == 0.00) {

                            $sheet->setCellValue('I' . $rows, '');

                            $sheet->setCellValue('J' . $rows, '');

                        }

                        $style = $sheet->getStyle('A' . $rows . ':K' . $rows);

                        $style->getFont()->setBold(true);

                        $style->getAlignment()->setHorizontal(Alignment::HORIZONTAL_RIGHT);

                        $style->getBorders()->getAllBorders()->setBorderStyle(\PhpOffice\PhpSpreadsheet\Style\Border::BORDER_THIN); 

                        $style->getBorders()->getBottom()->setBorderStyle(\PhpOffice\PhpSpreadsheet\Style\Border::BORDER_MEDIUM); 

                        $style->getBorders()->getRight()->setBorderStyle(\PhpOffice\PhpSpreadsheet\Style\Border::BORDER_MEDIUM);

                        $style->getBorders()->getTop()->setBorderStyle(\PhpOffice\PhpSpreadsheet\Style\Border::BORDER_MEDIUM);

                        $style->getFill()->setFillType(Fill::FILL_SOLID)->getStartColor()->setRGB('c8efe3');

                        $sheet->mergeCells('A' . $rows . ':H' . $rows);

                        $rows++;

                    }

                    $sheet->setCellValue('A' . $rows, 'Grand Total');

                    $sheet->setCellValue('H' . $rows, 'Opening');

                    $sheet->setCellValue('I' . $rows, ($grand_op_balance >= 0) ? number_format($grand_op_balance,2,'.','') : '');

                    $sheet->setCellValue('J' . $rows, ($grand_op_balance <= 0) ? number_format(abs($grand_op_balance),2,'.','') : '');



                    $style = $sheet->getStyle('A' . $rows . ':K' . $rows);

                    $style->getFont()->setBold(true);

                    $style->getAlignment()->setHorizontal(Alignment::HORIZONTAL_RIGHT);

                    $style->getBorders()->getAllBorders()->setBorderStyle(\PhpOffice\PhpSpreadsheet\Style\Border::BORDER_THIN); 

                    $style->getBorders()->getBottom()->setBorderStyle(\PhpOffice\PhpSpreadsheet\Style\Border::BORDER_MEDIUM); 

                    $style->getBorders()->getRight()->setBorderStyle(\PhpOffice\PhpSpreadsheet\Style\Border::BORDER_MEDIUM);

                    $style->getBorders()->getTop()->setBorderStyle(\PhpOffice\PhpSpreadsheet\Style\Border::BORDER_MEDIUM);

                    $style->getFill()->setFillType(Fill::FILL_SOLID)->getStartColor()->setRGB('ffe93a');

                    $sheet->mergeCells('A' . $rows . ':G' . $rows);

                    $rows++;



                    $sheet->setCellValue('H' . $rows, 'Transaction');

                    $sheet->setCellValue('I' . $rows, ($grand_trans_dr != 0.00) ? number_format($grand_trans_dr,2,'.','') : '');

                    $sheet->setCellValue('J' . $rows, ($grand_trans_cr != 0.00) ? number_format($grand_trans_cr,2,'.','') : '');



                    $style = $sheet->getStyle('A' . $rows . ':K' . $rows);

                    $style->getFont()->setBold(true);

                    $style->getAlignment()->setHorizontal(Alignment::HORIZONTAL_RIGHT);

                    $style->getBorders()->getAllBorders()->setBorderStyle(\PhpOffice\PhpSpreadsheet\Style\Border::BORDER_THIN); 

                    $style->getBorders()->getBottom()->setBorderStyle(\PhpOffice\PhpSpreadsheet\Style\Border::BORDER_MEDIUM); 

                    $style->getBorders()->getRight()->setBorderStyle(\PhpOffice\PhpSpreadsheet\Style\Border::BORDER_MEDIUM);

                    $style->getBorders()->getTop()->setBorderStyle(\PhpOffice\PhpSpreadsheet\Style\Border::BORDER_MEDIUM);

                    $style->getFill()->setFillType(Fill::FILL_SOLID)->getStartColor()->setRGB('ffe93a');

                    $sheet->mergeCells('A' . $rows . ':G' . $rows);

                    $rows++;



                    $grand_clo_balance = $grand_op_balance + $grand_trans_dr - $grand_trans_cr;



                    $sheet->setCellValue('H' . $rows, 'Closing');

                    $sheet->setCellValue('I' . $rows, ($grand_clo_balance >= 0) ? number_format($grand_clo_balance,2,'.','') : '');

                    $sheet->setCellValue('J' . $rows, ($grand_clo_balance <= 0) ? number_format(abs($grand_clo_balance),2,'.','') : '');



                    $style = $sheet->getStyle('A' . $rows . ':K' . $rows);

                    $style->getFont()->setBold(true);

                    $style->getAlignment()->setHorizontal(Alignment::HORIZONTAL_RIGHT);

                    $style->getBorders()->getAllBorders()->setBorderStyle(\PhpOffice\PhpSpreadsheet\Style\Border::BORDER_THIN); 

                    $style->getBorders()->getBottom()->setBorderStyle(\PhpOffice\PhpSpreadsheet\Style\Border::BORDER_MEDIUM); 

                    $style->getBorders()->getRight()->setBorderStyle(\PhpOffice\PhpSpreadsheet\Style\Border::BORDER_MEDIUM);

                    $style->getBorders()->getTop()->setBorderStyle(\PhpOffice\PhpSpreadsheet\Style\Border::BORDER_MEDIUM);

                    $style->getFill()->setFillType(Fill::FILL_SOLID)->getStartColor()->setRGB('ffe93a');

                    $sheet->mergeCells('A' . $rows . ':G' . $rows);

                    $rows++;



                    $writer = new Xlsx($spreadsheet);

                    $writer->save($fileName);

                    header('Content-Type: application/vnd.ms-excel');

                    header('Content-Disposition: attachment; filename="'.basename($fileName).'"');

                    header('Expires: 0');

                    header('Cache-control: must-revalidate');

                    header('Pragma: public');

                    header('Content-Length:'.filesize($fileName));

                    flush();

                    readfile($fileName); 



                }else return view("pages/Finance/general_ledger", compact("sele_qry", "params", 'showActionBtns')); 



            } else if($output_type == 'innerReport' || $output_type == 'innerPdf' || $output_type == 'innerExcel'){

                $serial_no = isset($_REQUEST['serial_no'])?$_REQUEST['serial_no']:null;



                $tranhdr_row = $this->db->query("select a.*, b.branch_name from ledger_trans_hdr a, branch_master b where a.serial_no = '$serial_no' and a.branch_code = b.branch_code  ")->getRowArray();

                // echo '<pre>';print_r($tranhdr_row);die;

                $trandtl_qry = $this->db->query("select a.*, b.branch_name from ledger_trans_dtl a, branch_master b where a.ref_ledger_serial_no = '$serial_no' and a.branch_code = b.branch_code  ")->getResultArray();

                $trandtl_cnt = count($trandtl_qry) ;

                

                $vchrhdr_row = $this->db->query("select a.prepared_by, a.prepared_on, b.serial_no from voucher_header a, ledger_trans_hdr b where a.ref_ledger_serial_no = '$serial_no' and a.ref_ledger_serial_no = b.serial_no  ")->getResultArray() ;

                

                if(empty($trandtl_qry)) {

                    session()->setFlashdata('message', 'No Records Found !!');

                    return redirect()->to($this->requested_url());

                }



                if ($output_type == 'innerPdf') {

                    $report_type = 'Pdf'; $dompdf = new \Dompdf\Dompdf(); 

                    $reportHTML = view("pages/Finance/general_ledger", compact("trandtl_qry", "vchrhdr_row", "tranhdr_row", 'showActionBtns', 'requested_url', 'report_type'));

                    $dompdf->loadHtml($reportHTML);

                    $dompdf->setPaper('A4', 'landscape'); // portrait

                    $dompdf->render();

                    $dompdf->stream('abc.pdf', array('Attachment'=>0)); exit;

                } else if ($output_type == 'innerExcel') {

                    $fileName = 'General-Ledger-'.date('d-m-Y').'.xlsx';  

                    $spreadsheet = new Spreadsheet();

                    $sheet = $spreadsheet->getActiveSheet();



                    // Define the headings

                    $headings = ['Main', 'Sub', 'Matter', 'Client', 'Bill Number', 'Purpose', 'Debit', 'Credit'];

                    // Loop through the headings and set the formatting

                    $column = 'A';

                    foreach ($headings as $heading) {

                        $cell = $column . '1';



                        // Set the cell value

                        $sheet->setCellValue($cell, $heading);



                        // Apply formatting

                        $style = $sheet->getStyle($cell);

                        $style->getFont()->setBold(true);

                        $style->getAlignment()->setHorizontal(Alignment::HORIZONTAL_CENTER);

                        $style->getFill()->setFillType(Fill::FILL_SOLID)->getStartColor()->setRGB('c8d5ef');

                        // Add borders

                        $style->getBorders()->getTop()->setBorderStyle(\PhpOffice\PhpSpreadsheet\Style\Border::BORDER_THIN);

                        $style->getBorders()->getBottom()->setBorderStyle(\PhpOffice\PhpSpreadsheet\Style\Border::BORDER_THIN);

                        $style->getBorders()->getLeft()->setBorderStyle(\PhpOffice\PhpSpreadsheet\Style\Border::BORDER_THIN);

                        $style->getBorders()->getRight()->setBorderStyle(\PhpOffice\PhpSpreadsheet\Style\Border::BORDER_THIN);



                        // Move to the next column

                        ++$column;

                    }

                    $rows = 2;

                    $tdtotal  = 0; 

                    $tctotal  = 0; 

                    $rowcnt     = 1 ;

                    // $report_row = isset($ldg_qry[$rowcnt-1]) ? $ldg_qry[$rowcnt-1] : '' ;  

                    // $report_cnt = $ldg_cnt ;

                    foreach($trandtl_qry as $trandtl_row) {

                        $sheet->setCellValue('A' . $rows, $trandtl_row['main_ac_code']);

                        $sheet->setCellValue('B' . $rows, $trandtl_row['sub_ac_code']);

                        $sheet->setCellValue('C' . $rows, $trandtl_row['matter_code']);

                        $sheet->setCellValue('D' . $rows, $trandtl_row['client_code']);

                        $sheet->setCellValue('E' . $rows, $trandtl_row['bill_no']);

                        $sheet->setCellValue('F' . $rows, $trandtl_row['narration']);

                        $sheet->setCellValue('G' . $rows, ($trandtl_row['dr_cr_ind'] == 'D') ? $trandtl_row['gross_amount'] : '');

                        $sheet->setCellValue('H' . $rows, ($trandtl_row['dr_cr_ind'] == 'C') ? $trandtl_row['gross_amount'] : '');



                        // Apply border to the current row

                        $style = $sheet->getStyle('A' . $rows . ':H' . $rows);

                        $style->getBorders()->getAllBorders()->setBorderStyle(\PhpOffice\PhpSpreadsheet\Style\Border::BORDER_THIN);



                        if($trandtl_row['dr_cr_ind'] == 'D') { $tdtotal = $tdtotal + $trandtl_row['gross_amount'] ; } else { $tctotal = $tctotal + $trandtl_row['gross_amount'] ; }  

                        $rows++;

                    }

                    $sheet->setCellValue('F' . $rows, 'TOTAL');

                    $sheet->setCellValue('G' . $rows, ($tdtotal != 0) ? number_format(abs($tdtotal),2,'.','') : '');

                    $sheet->setCellValue('H' . $rows, ($tctotal != 0) ? number_format(abs($tctotal),2,'.','') : '');



                    // Apply Background Color to the current row

                    $style = $sheet->getStyle('A' . $rows . ':H' . $rows);

                    $style->getFont()->setBold(true);

                    $style->getAlignment()->setHorizontal(Alignment::HORIZONTAL_CENTER);

                    $style->getBorders()->getAllBorders()->setBorderStyle(\PhpOffice\PhpSpreadsheet\Style\Border::BORDER_THIN);

                    $style->getFill()->setFillType(Fill::FILL_SOLID)->getStartColor()->setRGB('ffe93a');



                    $writer = new Xlsx($spreadsheet);

                    $writer->save($fileName);

                    header('Content-Type: application/vnd.ms-excel');

                    header('Content-Disposition: attachment; filename="'.basename($fileName).'"');

                    header('Expires: 0');

                    header('Cache-control: must-revalidate');

                    header('Pragma: public');

                    header('Content-Length:'.filesize($fileName));

                    flush();

                    readfile($fileName); 

                } else return view("pages/Finance/general_ledger", compact("trandtl_qry", "vchrhdr_row", "tranhdr_row", 'showActionBtns', 'requested_url'));

            }

        } else {

            $data = [];

            $data = branches(session()->userId);

            $report_id   = $_GET['display_id'];



            $curr_finyr = session()->financialYear;

            $data['curr_fyrsdt'] = '01-04-'.substr($curr_finyr,0,4);

            $data['billfor_ind'] = 'N';



            $rep_master_sql = "select * from report_master where report_id = '$report_id'";

	        $rep_master     = $this->db->query($rep_master_sql)->getRowArray();

            $data['lines_per_page'] = $rep_master['lines_per_page'];



            $sql = "select main_ac_code, main_ac_desc from account_master order by main_ac_desc";

            $data['main_ac'] = $this->db->query($sql)->getResultArray();

            return view("pages/Finance/general_ledger", compact("data")); 

        }

    }



    public function sub_ledger() {

        $requested_url = session()->requested_end_menu_url;

        $output_type = isset($_REQUEST['output_type']) ? $_REQUEST['output_type'] : '';

        $showActionBtns = false;

        $company_code = session()->user_qry['company_code'];

        $display_heading = "Sub Ledger" ;



        if($this->request->getMethod() == "post") {

            if($output_type == 'Report' || $output_type == 'Pdf' || $output_type == 'Excel') {



                $showActionBtns = true;

                $lines_per_page   = 43;

                //$company_code     = isset($_REQUEST['company_code'])?$_REQUEST['company_code']:$global_company_code;

                $branch_code      = isset($_REQUEST['branch_code'])?$_REQUEST['branch_code']:null;

                $main_ac          = isset($_REQUEST['main_ac'])?$_REQUEST['main_ac']:null;

                $main_ac_sub_ac   = isset($_REQUEST['main_ac_sub_ac'])?$_REQUEST['main_ac_sub_ac']:'All';

                $date_from        = isset($_REQUEST['date_from'])?$_REQUEST['date_from']:null;

                $date_to          = isset($_REQUEST['date_to'])?$_REQUEST['date_to']:null;



                $period_desc  = $date_from.' TO '.$date_to ;



                $branch_name_stmt = $this->db->query("select branch_name from branch_master where branch_code='$branch_code'")->getRowArray();

                $branch_name      = $branch_name_stmt['branch_name'];



                $date_frm = date_conv($date_from) ; 

                $date_upt = date_conv($date_to);



                $fin_month = substr($date_frm,5,2);

                $fin_year = substr($date_frm,0,4);

                if($fin_month <= 3)

                {

                $fin_yr = ($fin_year - 1).'-'.$fin_year ;

                }  

                else

                {

                $fin_yr = $fin_year.'-'.($fin_year+1) ;

                } 



                $year_mon = substr($date_frm,0,4).substr($date_frm,5,2) ; 

                $date_start = substr($date_frm,0,4).'-'.substr($date_frm,5,2).'-'.'01' ;



                $user_id        = session()->userId;

                $logdt_qry      = $this->db->query("select date_format(now(),'%Y%m%d%h%i%s') timestamp ")->getRowArray();

                $timestamp      = $logdt_qry['timestamp'];

                $temp_id        = "zz_".$user_id."_".$timestamp;

                

                $table1 = $temp_id.'_sub_ledger_open_bal'.'_'.$main_ac;

                $table2 = $temp_id.'_sub_ledger_dtl_rec'.'_'.$main_ac;

                $this->db->query("DROP TABLE IF EXISTS $table1");

                $this->db->query("DROP TABLE IF EXISTS $table2");



                // Temporary table for opening balance from account_master balance			

                $create_sql1 = "CREATE TABLE $table1(branch_code varchar(4),branch_abbr_name varchar(3),main_ac_code varchar(6),main_ac_desc varchar(40),sub_ac_code varchar(6),sub_ac_desc varchar(40),amount_dr double(14,2),amount_cr double(14,2))";

                $this->temp_db->query($create_sql1);



                // Temporary table for Detail Ledger transactions			

                $create_sql2 = "CREATE TABLE $table2(serial_no int(8),branch_code varchar(4),branch_abbr_name varchar(3),main_ac_code varchar(6),main_ac_desc varchar(40)

                            ,sub_ac_code varchar(6),sub_ac_desc varchar(40),daybook_code char(2),doc_type varchar(4),doc_date date,doc_no varchar(10)

                            ,instrument_no varchar(20),instrument_dt date,narration varchar(100),amount_dr double(14,2),amount_cr double(14,2),dr_cr_ind char(1),rec_code char(2),sub_ac_ind char(1))";

                $this->temp_db->query($create_sql2);



                // Insertion of Year Opening Balance in Temporary table 

                $insert_sql1 = "INSERT INTO $table1(branch_code,branch_abbr_name,main_ac_code,sub_ac_code,sub_ac_desc,amount_dr,amount_cr)

                                select b.branch_code, c.branch_abbr_name, a.main_ac_code, a.sub_ac_code, a.sub_ac_desc ,ifnull(b.amount_dr,0.00), ifnull(b.amount_cr,0.00)

                                from sinhaco.branch_master c, sinhaco.sub_account_master a 

                                left join sinhaco.sub_account_balance b

                                on a.main_ac_code = b.main_ac_code and a.sub_ac_code = b.sub_ac_code

                                and   b.fin_year = '$fin_yr'

                                and   b.record_code = '01'

                                where b.branch_code = c.branch_code

                                and   c.company_code like '$company_code'

                                and   c.branch_code  like '$branch_code'

                                order by a.main_ac_code" ;

                $this->temp_db->query($insert_sql1);



                // Insertion of Balance of previous months in Temporary table 



                $insert_sql2 = "INSERT INTO $table1(branch_code,branch_abbr_name,main_ac_code,sub_ac_code ,sub_ac_desc ,amount_dr,amount_cr)

                                select a.branch_code, c.branch_abbr_name, a.main_ac_code, a.sub_ac_code, b.sub_ac_desc, a.amount_dr, a.amount_cr 

                                from sinhaco.sub_account_balance a, sinhaco.sub_account_master b, sinhaco.branch_master c

                                where a.fin_year = '$fin_yr'

                                and a.main_ac_code = b.main_ac_code

                                and a.sub_ac_code  = b.sub_ac_code

                                and a.yyyy_mm < '$year_mon'

                                and a.record_code = '02'

                                and a.branch_code = c.branch_code

                                and c.company_code like '$company_code'

                                and c.branch_code  like '$branch_code'

                                order by a.main_ac_code" ;

                $this->temp_db->query($insert_sql2);



                // Insertion of Balance for old days of month prior to start date - for broken start date 



                $insert_sql3 = "INSERT INTO $table1(branch_code,branch_abbr_name,main_ac_code,sub_ac_code ,sub_ac_desc ,amount_dr,amount_cr)

                                select b.branch_code, d.branch_abbr_name, a.main_ac_code, a.sub_ac_code, c.sub_ac_desc, sum(if(dr_cr_ind = 'D',ifnull(a.net_amount,0.00),0)) amount_dr, sum(if(dr_cr_ind = 'C',ifnull(a.net_amount,0.00),0)) amount_cr 

                                from sinhaco.ledger_trans_dtl a, sinhaco.ledger_trans_hdr b, sinhaco.sub_account_master c, sinhaco.branch_master d

                                where a.ref_ledger_serial_no = b.serial_no

                                and a.main_ac_code = c.main_ac_code

                                and a.sub_ac_code  = c.sub_ac_code

                                and b.status_code  = 'C'			

                                and b.doc_date >= '$date_start' 

                                and b.doc_date < '$date_frm'

                                and b.branch_code = d.branch_code

                                and d.company_code like '$company_code'

                                and d.branch_code like '$branch_code'

                                group by b.branch_code, d.branch_abbr_name, a.main_ac_code, a.sub_ac_code, c.sub_ac_desc ";

                $this->temp_db->query($insert_sql3);



                // Insertion of Opening Balance in main temparary table - it will be printed in ledger  

                $insert_sql5 = "INSERT INTO $table2(branch_code,branch_abbr_name,main_ac_code,main_ac_desc,sub_ac_code ,sub_ac_desc ,amount_dr,rec_code,narration,dr_cr_ind)

                                select a.branch_code, a.branch_abbr_name, a.main_ac_code, b.main_ac_desc ,a.sub_ac_code,a.sub_ac_desc, sum(a.amount_dr) - sum(a.amount_cr), '01', 'Opening Balance', 'S'

                                from   sinhaco.account_master b, ".'_temp.'.$table1." a 

                                where  a.main_ac_code = b.main_ac_code

                                group by a.branch_code, a.branch_abbr_name, a.main_ac_code, b.main_ac_desc ,a.sub_ac_code,a.sub_ac_desc";

                $this->temp_db->query($insert_sql5); 



                $insert_sql10 = "INSERT INTO $table2(branch_code,branch_abbr_name,serial_no,main_ac_code,main_ac_desc,sub_ac_code ,sub_ac_desc ,daybook_code

                                ,doc_type,doc_date,doc_no,instrument_no,instrument_dt,narration,amount_dr,amount_cr,dr_cr_ind,rec_code,sub_ac_ind)

                                select b.branch_code, e.branch_abbr_name, b.serial_no, a.main_ac_code, c.main_ac_desc ,a.sub_ac_code ,d.sub_ac_desc,  b.daybook_code, b.doc_type, b.doc_date, b.doc_no, b.instrument_no, b.instrument_dt, a.narration, if(a.dr_cr_ind ='D' ,a.net_amount,0), if(a.dr_cr_ind = 'C', a.net_amount, 0), a.dr_cr_ind, '02', 'N'

                                from   sinhaco.ledger_trans_dtl a, sinhaco.ledger_trans_hdr b, sinhaco.account_master c, sinhaco.sub_account_master d, sinhaco.branch_master e

                                where  a.ref_ledger_serial_no = b.serial_no

                                and a.main_ac_code = c.main_ac_code

                                and a.main_ac_code = d.main_ac_code

                                and a.sub_ac_code  = d.sub_ac_code								

                                and b.status_code  = 'C' 

                                and b.doc_date >= '$date_frm' 

                                and b.doc_date <=  '$date_upt'

                                and b.branch_code = e.branch_code

                                and c.sub_ac_ind = 'Y'

                                and e.company_code like '$company_code'

                                and e.branch_code  like '$branch_code'

                                order by a.main_ac_code,b.doc_type,b.doc_date,b.doc_no";



                $this->temp_db->query($insert_sql10);			



                $sele_sql ='';

                if ($main_ac_sub_ac == 'All') {  

                    $main_ac_code  = $main_ac;

                    $sub_ac_code   = '%';



                    $sele_sql = "select a.* from $table2 a  

                            where a.main_ac_code like '$main_ac_code' 

                            and a.sub_ac_code  like '$sub_ac_code'

                            and a.branch_code like '$branch_code'

                            order by a.main_ac_code , a.sub_ac_desc, a.sub_ac_code , a.rec_code ,  a.doc_date , a.daybook_code , a.doc_type , a.doc_no";

                } else if($main_ac_sub_ac == "") {

                    if($main_ac == "")

                        $main_ac_code = '%' ;

                    else

                        $main_ac_code  = $main_ac;



                    $sub_ac_code   = '%';

                    $sele_sql = "select a.* from $table2 a  

                            where a.main_ac_code like '$main_ac_code' 

                            and a.sub_ac_code  like '$sub_ac_code'

                            and a.branch_code like '$branch_code'

                            order by a.main_ac_code, a.sub_ac_desc ,a.sub_ac_code , a.rec_code ,  a.doc_date , a.daybook_code , a.doc_type , a.doc_no";

                }

                else if($main_ac_sub_ac != "" && $main_ac_sub_ac != 'All') {

                    $main_ac_sub_ac   = stripslashes($main_ac_sub_ac); 

                    $main_array       = explode(",",$main_ac_sub_ac) ;

                    $m_ac             = "";

                    $s_ac             = "";

                    for($i=0;$i<count($main_array);$i++)

                    {

                        $m_array = $main_array[$i] ;

                        if(substr($m_array,strlen($m_array)-1,1) == "'")

                        $m_array = substr($m_array,0,strlen($m_array)-1);

                        if(substr($m_array,0,1) == "'")

                        $m_array = substr($m_array,1);



                        $sub_array=explode("|",$m_array);

                        $m_ac .= "'".$sub_array[0]."',";

                        $s_ac .= "'".$sub_array[1]."',";

                    }

                    $main_ac_code = "(".substr($m_ac,0,strlen($m_ac)-1).")";

                    $sub_ac_code = "(".substr($s_ac,0,strlen($s_ac)-1).")";



                    $sele_sql = "select a.* from $table2 a  

                                where a.main_ac_code in $main_ac_code 

                                and a.sub_ac_code  in $sub_ac_code

                                and a.branch_code like '$branch_code'

                                order by a.main_ac_code, a.sub_ac_desc ,a.sub_ac_code , a.rec_code ,  a.doc_date , a.daybook_code , a.doc_type , a.doc_no";

                }





                $sele_qry = $this->temp_db->query($sele_sql)->getResultArray();

                // echo '<pre>';print_r($sele_qry);die;

                $count = count($sele_qry) ;



                if(empty($sele_qry)) {

                    session()->setFlashdata('message', 'No Records Found !!');

                    return redirect()->to($this->requested_url());

                }

                $params = [

                    "count" => $count,

                    "display_heading" => $display_heading,

                    "branch_name" => $branch_name,

                    "date_from" => $date_from,

                    "date_to" => $date_to,

                    "period_desc" => $period_desc,

                    "lines_per_page" => $lines_per_page,

                    "requested_url" => $requested_url,

                ];



                if ($output_type == 'Pdf') {

                    $report_type = 'Pdf'; $dompdf = new \Dompdf\Dompdf(); 

                    $reportHTML = view("pages/Finance/sub_ledger", compact('sele_qry', 'params', 'report_type', 'showActionBtns'));

                    $dompdf->loadHtml($reportHTML);

                    $dompdf->setPaper('A4', 'landscape'); // portrait

                    $dompdf->render();

                    $dompdf->stream('abc.pdf', array('Attachment'=>0)); exit;

                } else if($output_type == 'Excel') {

                    $showActionBtns = true;

                    $spreadsheet = new Spreadsheet();

                    $sheet = $spreadsheet->getActiveSheet();

                    $rows = 1;



                    $fileName = $headings = '';

                    $fileName = 'Finance-Sub-Ledger-'.date('d-m-Y').'.xlsx';  

                    $headings = ['A/c', 'DB', '', 'Doc Date', 'Doc No', 'Instrument No.', 'Date', 'Brn', 'Narration', 'Debit', 'Credit', 'Balance'];

                    $column = 'A'; $rows++;



                    foreach ($headings as $heading) {

                        $cell = $column . $rows;

                        $sheet->setCellValue($cell, $heading); // Set the cell value



                        // Apply formatting

                        $style = $sheet->getStyle($cell);

                        $style->getFont()->setBold(true);

                        $style->getAlignment()->setHorizontal(Alignment::HORIZONTAL_CENTER);

                        $style->getFill()->setFillType(Fill::FILL_SOLID)->getStartColor()->setRGB('c8d5ef');

                        $style->getBorders()->getAllBorders()->setBorderStyle(\PhpOffice\PhpSpreadsheet\Style\Border::BORDER_THIN); // Add borders

                        ++$column; // Move to the next column

                    } $rows++;



                    $cnt = 1 ;

                    $balance_print = 'Yes';

                    $transrow = isset($sele_qry[$cnt-1]) ? $sele_qry[$cnt-1] : '' ;

                    $count = $params['count'] ;

                    while($cnt <= $count) {



                        $dr_clo_bal = 0;

                        $cr_clo_bal = 0;

                        $gt_dr_amt = 0;

                        $gt_cr_amt = 0;

                        $dr_open_bal = 0;

                        $cr_open_bal = 0;

                        $t_open_bal = 0;

                        $t_clo_bal = 0;

                        $t_amt = 0;

                        $opening_balance = 0 ;

                        $t_dr_amt = 0;

                        $t_cr_amt = 0;

                        $pmaccode = $transrow['main_ac_code'] ;

                        $psaccode = $transrow['sub_ac_code'] ;

                        $pmacind = 'Y' ;

                        $psacind = 'Y' ;



                        while($pmaccode == $transrow['main_ac_code'] && $cnt <= $count)

                        {

                            $balance_amt = 0.00 ;

                            $psaccode = $transrow['sub_ac_code'] ;

                            $psubind = 'Y' ;

                            while($psaccode == $transrow['sub_ac_code'] && $cnt <= $count) {

                                $p_rec = $transrow['rec_code'] ;

                                

                                if($pmacind == 'Y')				  

                                {

                                    $pmacind = 'N' ;

                                    $sheet->setCellValue('A' . $rows, $transrow['main_ac_code'] .'   '. $transrow['main_ac_desc']);



                                    $style = $sheet->getStyle('A' . $rows . ':L' . $rows);

                                    $style->getFont()->setBold(true);

                                    $style->getBorders()->getAllBorders()->setBorderStyle(\PhpOffice\PhpSpreadsheet\Style\Border::BORDER_THIN); 

                                    $sheet->mergeCells('A' . $rows . ':L' . $rows);

                                    $rows++;

                                }

                                

                                if($psubind == 'Y') {

                                    $psubind = 'N';

                                    $sub_ac_code = $transrow['sub_ac_code'] ;

                                    $sub_ac_desc = $transrow['sub_ac_desc'] ;



                                    $sheet->setCellValue('A' . $rows, $sub_ac_code);

                                    $sheet->setCellValue('C' . $rows, $sub_ac_desc);



                                    $style = $sheet->getStyle('A' . $rows . ':L' . $rows);

                                    $style->getFont()->setBold(true);

                                    $style->getBorders()->getAllBorders()->setBorderStyle(\PhpOffice\PhpSpreadsheet\Style\Border::BORDER_THIN); 

                                    $sheet->mergeCells('A' . $rows . ':B' . $rows);

                                    $sheet->mergeCells('C' . $rows . ':L' . $rows);

                                    $rows++;

                                } else { 

                                    $sub_ac_code = '' ;

                                    $sub_ac_desc = '' ;

                                }

                                $sheet->setCellValue('A' . $rows, '');

                                $sheet->setCellValue('B' . $rows, $transrow['daybook_code']);

                                $sheet->setCellValue('C' . $rows, $transrow['doc_type']);

                                $sheet->setCellValue('D' . $rows, date_conv($transrow['doc_date']));

                                $sheet->setCellValue('E' . $rows, $transrow['doc_no']);

                                $sheet->setCellValue('F' . $rows, $transrow['instrument_no']);

                                $sheet->setCellValue('G' . $rows, ($transrow['instrument_dt']!='0000-00-00') ? date_conv($transrow['instrument_dt']) : '');

                                $sheet->setCellValue('H' . $rows, $transrow['branch_abbr_name']);

                                $sheet->setCellValue('I' . $rows, $transrow['narration']);



                                if($transrow['dr_cr_ind'] == 'D') {



                                    $t_dr_amt    = $t_dr_amt + $transrow['amount_dr'] ;

                                    $gt_dr_amt   = $gt_dr_amt + $transrow['amount_dr'] ;		   

                                    $balance_amt = $balance_amt + $transrow['amount_dr'] ;



                                    $sheet->setCellValue('J' . $rows, number_format($transrow['amount_dr'],2,'.',''));

                                    $sheet->setCellValue('K' . $rows, '');

                                    $sheet->setCellValue('L' . $rows, ($balance_print=='Yes') ? number_format($balance_amt,2,'.','') : '');



                                }

                                if($transrow['dr_cr_ind'] == 'C')

                                {

                                    $t_cr_amt    = $t_cr_amt + $transrow['amount_cr'] ;

                                    $gt_cr_amt   = $gt_cr_amt + $transrow['amount_cr'];		  

                                    $balance_amt = $balance_amt - $transrow['amount_cr'] ;



                                    $sheet->setCellValue('J' . $rows, '');

                                    $sheet->setCellValue('K' . $rows, number_format($transrow['amount_cr'],2,'.',''));

                                    $sheet->setCellValue('L' . $rows, ($balance_print=='Yes') ? number_format($balance_amt,2,'.','') : '');

                                }

                                if($transrow['dr_cr_ind'] == 'S') {

                                    $balance_amt = $transrow['amount_dr'] ; 

                                    if($transrow['amount_dr'] > 0 ) {

                                        $t_dr_amt = $t_dr_amt + $transrow['amount_dr'] ; 

                                        $dr_open_bal = $dr_open_bal + $transrow['amount_dr'];		  



                                        $sheet->setCellValue('J' . $rows, number_format($transrow['amount_dr'],2,'.',''));

                                        $sheet->setCellValue('K' . $rows, '');

                                        $sheet->setCellValue('L' . $rows, ($balance_print=='Yes') ? number_format($balance_amt,2,'.','') : '');

                                    }

                                    if($transrow['amount_dr'] < 0 ) {

                                        $t_cr_amt = $t_cr_amt + abs($transrow['amount_dr']) ;

                                        $cr_open_bal = $cr_open_bal + $transrow['amount_dr'];	



                                        $sheet->setCellValue('J' . $rows, '');

                                        $sheet->setCellValue('K' . $rows, number_format(abs($transrow['amount_dr']),2,'.',''));

                                        $sheet->setCellValue('L' . $rows, ($balance_print=='Yes') ? number_format($balance_amt,2,'.','') : '');

                                    }

                                    if($transrow['amount_dr'] == 0.00 )

                                    {

                                        $sheet->setCellValue('J' . $rows, '');

                                        $sheet->setCellValue('K' . $rows, '');

                                        $sheet->setCellValue('L' . $rows, ($balance_print=='Yes') ? number_format($balance_amt,2,'.','') : '');

                                    }

                                }



                                $style = $sheet->getStyle('A' . $rows . ':L' . $rows);

                                $style->getAlignment()->setHorizontal(Alignment::HORIZONTAL_CENTER);

                                $style->getBorders()->getAllBorders()->setBorderStyle(\PhpOffice\PhpSpreadsheet\Style\Border::BORDER_THIN); 

                                $rows++;



                                $transrow = ($cnt < $count) ? $sele_qry[$cnt] : $transrow;  

                                $cnt = $cnt + 1 ;

                                $t_amt = $t_dr_amt - $t_cr_amt ;

                            }			   		   

                            $psaccode = $transrow['sub_ac_code'] ;

                            $psacind = 'Y' ;

                            $opening_balance = 0 ;



                            if($t_dr_amt != 0 || $t_cr_amt != 0) {



                                $sheet->setCellValue('A' . $rows, 'Total');

                                if($t_dr_amt != 0) {

                                    $sheet->setCellValue('J' . $rows, number_format($t_dr_amt,2,'.',''));

                                    $t_dr_amt = 0 ;

                                } else {

                                    $sheet->setCellValue('J' . $rows, '');

                                } if($t_cr_amt != 0) {

                                    $sheet->setCellValue('K' . $rows, number_format($t_cr_amt,2,'.',''));

                                } else {

                                    $sheet->setCellValue('K' . $rows, '');

                                }



                                $style = $sheet->getStyle('A' . $rows . ':L' . $rows);

                                $style->getFont()->setBold(true);

                                $style->getAlignment()->setHorizontal(Alignment::HORIZONTAL_RIGHT);

                                $style->getBorders()->getAllBorders()->setBorderStyle(\PhpOffice\PhpSpreadsheet\Style\Border::BORDER_THIN); 

                                $style->getBorders()->getBottom()->setBorderStyle(\PhpOffice\PhpSpreadsheet\Style\Border::BORDER_MEDIUM); 

                                $style->getBorders()->getRight()->setBorderStyle(\PhpOffice\PhpSpreadsheet\Style\Border::BORDER_MEDIUM);

                                $style->getBorders()->getTop()->setBorderStyle(\PhpOffice\PhpSpreadsheet\Style\Border::BORDER_MEDIUM);

                                $style->getFill()->setFillType(Fill::FILL_SOLID)->getStartColor()->setRGB('c8efe3');

                                $sheet->mergeCells('A' . $rows . ':I' . $rows);

                                $rows++;

                            }

                            $sheet->setCellValue('A' . $rows, 'Closing Balance');

                            if($t_amt > 0) {

                                $dr_clo_bal = $dr_clo_bal + $t_amt ;



                                $sheet->setCellValue('J' . $rows, number_format($t_amt,2,'.','')); 

                                $sheet->setCellValue('K' . $rows, ''); 

                            }

                            if($t_amt < 0)

                            {

                            $cr_clo_bal = $cr_clo_bal + $t_amt ;

                            $sheet->setCellValue('J' . $rows, ''); 

                            $sheet->setCellValue('K' . $rows, number_format(abs($t_amt),2,'.','')); 

                            }

                            if($t_amt == 0)

                            {

                                $sheet->setCellValue('J' . $rows, ''); 

                                $sheet->setCellValue('K' . $rows, ''); 

                            }

                            $t_dr_amt = 0;

                            $t_cr_amt = 0;

                            $t_amt = 0 ;



                            $style = $sheet->getStyle('A' . $rows . ':L' . $rows);

                            $style->getFont()->setBold(true);

                            $style->getAlignment()->setHorizontal(Alignment::HORIZONTAL_RIGHT);

                            $style->getBorders()->getAllBorders()->setBorderStyle(\PhpOffice\PhpSpreadsheet\Style\Border::BORDER_THIN); 

                            $style->getBorders()->getBottom()->setBorderStyle(\PhpOffice\PhpSpreadsheet\Style\Border::BORDER_MEDIUM); 

                            $style->getBorders()->getRight()->setBorderStyle(\PhpOffice\PhpSpreadsheet\Style\Border::BORDER_MEDIUM);

                            $style->getBorders()->getTop()->setBorderStyle(\PhpOffice\PhpSpreadsheet\Style\Border::BORDER_MEDIUM);

                            $style->getFill()->setFillType(Fill::FILL_SOLID)->getStartColor()->setRGB('c8efe3');

                            $sheet->mergeCells('A' . $rows . ':I' . $rows);

                            $rows++;

                        }

                        $pmaccode = $transrow['main_ac_code'] ;

                        $pmacind = 'Y' ;

                        $sheet->setCellValue('A' . $rows, 'Grand Total'); 

                        $sheet->setCellValue('I' . $rows, 'Opening Balance'); 

                        if($dr_open_bal != 0) {

                            $sheet->setCellValue('J' . $rows, number_format($dr_open_bal,2,'.',''));

                        }

                        else

                        { 

                            $sheet->setCellValue('J' . $rows, '');

                        }

                        if($cr_open_bal != 0)

                        {

                            $sheet->setCellValue('K' . $rows, number_format(abs($cr_open_bal),2,'.',''));

                        }

                        else

                        {

                            $sheet->setCellValue('K' . $rows, '');

                        }



                        $style = $sheet->getStyle('A' . $rows . ':L' . $rows);

                        $style->getFont()->setBold(true);

                        $style->getAlignment()->setHorizontal(Alignment::HORIZONTAL_RIGHT);

                        $style->getBorders()->getAllBorders()->setBorderStyle(\PhpOffice\PhpSpreadsheet\Style\Border::BORDER_THIN); 

                        $style->getBorders()->getBottom()->setBorderStyle(\PhpOffice\PhpSpreadsheet\Style\Border::BORDER_MEDIUM); 

                        $style->getBorders()->getRight()->setBorderStyle(\PhpOffice\PhpSpreadsheet\Style\Border::BORDER_MEDIUM);

                        $style->getBorders()->getTop()->setBorderStyle(\PhpOffice\PhpSpreadsheet\Style\Border::BORDER_MEDIUM);

                        $style->getFill()->setFillType(Fill::FILL_SOLID)->getStartColor()->setRGB('ffe93a');

                        $sheet->mergeCells('A' . $rows . ':H' . $rows);

                        $rows++;



                        $sheet->setCellValue('A' . $rows, 'Transaction'); 

                        if($gt_dr_amt != 0) {

                            $sheet->setCellValue('J' . $rows, number_format($gt_dr_amt,2,'.',''));

                        }

                        else

                        { 

                            $sheet->setCellValue('J' . $rows, '');

                        }

                        if($gt_cr_amt != 0)

                        {

                            $sheet->setCellValue('K' . $rows, number_format($gt_cr_amt,2,'.',''));

                        }

                        else

                        {

                            $sheet->setCellValue('K' . $rows, '');

                        }



                        $style = $sheet->getStyle('A' . $rows . ':L' . $rows);

                        $style->getFont()->setBold(true);

                        $style->getAlignment()->setHorizontal(Alignment::HORIZONTAL_RIGHT);

                        $style->getBorders()->getAllBorders()->setBorderStyle(\PhpOffice\PhpSpreadsheet\Style\Border::BORDER_THIN); 

                        $style->getBorders()->getBottom()->setBorderStyle(\PhpOffice\PhpSpreadsheet\Style\Border::BORDER_MEDIUM); 

                        $style->getBorders()->getRight()->setBorderStyle(\PhpOffice\PhpSpreadsheet\Style\Border::BORDER_MEDIUM);

                        $style->getBorders()->getTop()->setBorderStyle(\PhpOffice\PhpSpreadsheet\Style\Border::BORDER_MEDIUM);

                        $style->getFill()->setFillType(Fill::FILL_SOLID)->getStartColor()->setRGB('ffe93a');

                        $sheet->mergeCells('A' . $rows . ':I' . $rows);

                        $rows++;



                        $closing_balance = $dr_clo_bal - abs($cr_clo_bal) ;



                        $sheet->setCellValue('A' . $rows, 'Closing Balance'); 

                        if($closing_balance > 0) {

                            $sheet->setCellValue('J' . $rows, number_format($closing_balance,2,'.',''));

                        }

                        else

                        { 

                            $sheet->setCellValue('J' . $rows, '');

                        }

                        if($closing_balance <= 0)

                        {

                            $sheet->setCellValue('K' . $rows, number_format(abs($closing_balance),2,'.',''));

                        }

                        else

                        {

                            $sheet->setCellValue('K' . $rows, '');

                        }

                        $style = $sheet->getStyle('A' . $rows . ':L' . $rows);

                        $style->getFont()->setBold(true);

                        $style->getAlignment()->setHorizontal(Alignment::HORIZONTAL_RIGHT);

                        $style->getBorders()->getAllBorders()->setBorderStyle(\PhpOffice\PhpSpreadsheet\Style\Border::BORDER_THIN); 

                        $style->getBorders()->getBottom()->setBorderStyle(\PhpOffice\PhpSpreadsheet\Style\Border::BORDER_MEDIUM); 

                        $style->getBorders()->getRight()->setBorderStyle(\PhpOffice\PhpSpreadsheet\Style\Border::BORDER_MEDIUM);

                        $style->getBorders()->getTop()->setBorderStyle(\PhpOffice\PhpSpreadsheet\Style\Border::BORDER_MEDIUM);

                        $style->getFill()->setFillType(Fill::FILL_SOLID)->getStartColor()->setRGB('ffe93a');

                        $sheet->mergeCells('A' . $rows . ':I' . $rows);

                        $rows++;

                    }



                    $writer = new Xlsx($spreadsheet);

                    $writer->save($fileName);

                    header('Content-Type: application/vnd.ms-excel');

                    header('Content-Disposition: attachment; filename="'.basename($fileName).'"');

                    header('Expires: 0');

                    header('Cache-control: must-revalidate');

                    header('Pragma: public');

                    header('Content-Length:'.filesize($fileName));

                    flush();

                    readfile($fileName); 





                } return view("pages/Finance/sub_ledger", compact("sele_qry", "params", 'showActionBtns')); 



            } else if($output_type == 'innerReport' || $output_type == 'innerPdf' || $output_type == 'innerExcel'){

                $serial_no = isset($_REQUEST['serial_no'])?$_REQUEST['serial_no']:null;



                $tranhdr_row = $this->db->query("select a.*, b.branch_name from ledger_trans_hdr a, branch_master b where a.serial_no = '$serial_no' and a.branch_code = b.branch_code  ")->getRowArray();

                // echo '<pre>';print_r($tranhdr_row);die;

                $trandtl_qry = $this->db->query("select a.*, b.branch_name from ledger_trans_dtl a, branch_master b where a.ref_ledger_serial_no = '$serial_no' and a.branch_code = b.branch_code  ")->getResultArray();

                $trandtl_cnt = count($trandtl_qry) ;

                

                $vchrhdr_row = $this->db->query("select a.prepared_by, a.prepared_on, b.serial_no from voucher_header a, ledger_trans_hdr b where a.ref_ledger_serial_no = '$serial_no' and a.ref_ledger_serial_no = b.serial_no  ")->getResultArray() ;

                

                if(empty($trandtl_qry)) {

                    session()->setFlashdata('message', 'No Records Found !!');

                    return redirect()->to($this->requested_url());

                }



                if ($output_type == 'innerPdf') {

                    $report_type = 'Pdf'; $dompdf = new \Dompdf\Dompdf(); 

                    $reportHTML = view("pages/Finance/general_ledger", compact("trandtl_qry", "vchrhdr_row", "tranhdr_row", 'showActionBtns', 'requested_url', 'report_type'));

                    $dompdf->loadHtml($reportHTML);

                    $dompdf->setPaper('A4', 'landscape'); // portrait

                    $dompdf->render();

                    $dompdf->stream('abc.pdf', array('Attachment'=>0)); exit;

                } else if ($output_type == 'innerExcel') {

                    $fileName = 'General-Ledger-'.date('d-m-Y').'.xlsx';  

                    $spreadsheet = new Spreadsheet();

                    $sheet = $spreadsheet->getActiveSheet();



                    // Define the headings

                    $headings = ['Main', 'Sub', 'Matter', 'Client', 'Bill Number', 'Purpose', 'Debit', 'Credit'];

                    // Loop through the headings and set the formatting

                    $column = 'A';

                    foreach ($headings as $heading) {

                        $cell = $column . '1';



                        // Set the cell value

                        $sheet->setCellValue($cell, $heading);



                        // Apply formatting

                        $style = $sheet->getStyle($cell);

                        $style->getFont()->setBold(true);

                        $style->getAlignment()->setHorizontal(Alignment::HORIZONTAL_CENTER);

                        $style->getFill()->setFillType(Fill::FILL_SOLID)->getStartColor()->setRGB('c8d5ef');

                        // Add borders

                        $style->getBorders()->getTop()->setBorderStyle(\PhpOffice\PhpSpreadsheet\Style\Border::BORDER_THIN);

                        $style->getBorders()->getBottom()->setBorderStyle(\PhpOffice\PhpSpreadsheet\Style\Border::BORDER_THIN);

                        $style->getBorders()->getLeft()->setBorderStyle(\PhpOffice\PhpSpreadsheet\Style\Border::BORDER_THIN);

                        $style->getBorders()->getRight()->setBorderStyle(\PhpOffice\PhpSpreadsheet\Style\Border::BORDER_THIN);



                        // Move to the next column

                        ++$column;

                    }

                    $rows = 2;

                    $tdtotal  = 0; 

                    $tctotal  = 0; 

                    $rowcnt     = 1 ;

                    // $report_row = isset($ldg_qry[$rowcnt-1]) ? $ldg_qry[$rowcnt-1] : '' ;  

                    // $report_cnt = $ldg_cnt ;

                    foreach($trandtl_qry as $trandtl_row) {

                        $sheet->setCellValue('A' . $rows, $trandtl_row['main_ac_code']);

                        $sheet->setCellValue('B' . $rows, $trandtl_row['sub_ac_code']);

                        $sheet->setCellValue('C' . $rows, $trandtl_row['matter_code']);

                        $sheet->setCellValue('D' . $rows, $trandtl_row['client_code']);

                        $sheet->setCellValue('E' . $rows, $trandtl_row['bill_no']);

                        $sheet->setCellValue('F' . $rows, $trandtl_row['narration']);

                        $sheet->setCellValue('G' . $rows, ($trandtl_row['dr_cr_ind'] == 'D') ? $trandtl_row['gross_amount'] : '');

                        $sheet->setCellValue('H' . $rows, ($trandtl_row['dr_cr_ind'] == 'C') ? $trandtl_row['gross_amount'] : '');



                        // Apply border to the current row

                        $style = $sheet->getStyle('A' . $rows . ':H' . $rows);

                        $style->getBorders()->getAllBorders()->setBorderStyle(\PhpOffice\PhpSpreadsheet\Style\Border::BORDER_THIN);



                        if($trandtl_row['dr_cr_ind'] == 'D') { $tdtotal = $tdtotal + $trandtl_row['gross_amount'] ; } else { $tctotal = $tctotal + $trandtl_row['gross_amount'] ; }  

                        $rows++;

                    }

                    $sheet->setCellValue('F' . $rows, 'TOTAL');

                    $sheet->setCellValue('G' . $rows, ($tdtotal != 0) ? number_format(abs($tdtotal),2,'.','') : '');

                    $sheet->setCellValue('H' . $rows, ($tctotal != 0) ? number_format(abs($tctotal),2,'.','') : '');



                    // Apply Background Color to the current row

                    $style = $sheet->getStyle('A' . $rows . ':H' . $rows);

                    $style->getFont()->setBold(true);

                    $style->getAlignment()->setHorizontal(Alignment::HORIZONTAL_CENTER);

                    $style->getBorders()->getAllBorders()->setBorderStyle(\PhpOffice\PhpSpreadsheet\Style\Border::BORDER_THIN);

                    $style->getFill()->setFillType(Fill::FILL_SOLID)->getStartColor()->setRGB('ffe93a');



                    $writer = new Xlsx($spreadsheet);

                    $writer->save($fileName);

                    header('Content-Type: application/vnd.ms-excel');

                    header('Content-Disposition: attachment; filename="'.basename($fileName).'"');

                    header('Expires: 0');

                    header('Cache-control: must-revalidate');

                    header('Pragma: public');

                    header('Content-Length:'.filesize($fileName));

                    flush();

                    readfile($fileName); 

                } else return view("pages/Finance/general_ledger", compact("trandtl_qry", "vchrhdr_row", "tranhdr_row", 'showActionBtns', 'requested_url'));

            }



        } else {

            $date_from       = isset($_REQUEST['date_from'])?$_REQUEST['date_from']:null;

            $date_to         = isset($_REQUEST['date_to'])?$_REQUEST['date_to']:null;

            $display_heading = isset($_REQUEST['display_heading'])?$_REQUEST['display_heading']:null;

            $main_ac         = isset($_REQUEST['main_ac'])?$_REQUEST['main_ac']:null;

            $main_ac_sub_ac  = isset($_REQUEST['main_ac_sub_ac'])?$_REQUEST['main_ac_sub_ac']:null;

            $branch_code     = isset($_REQUEST['branch_code'])?$_REQUEST['branch_code']:null;

            $mode            = isset($_REQUEST['mode'])?$_REQUEST['mode']:'Gen';

            $display_heading = "Sub Ledger" ;

            $data = [];

            $sele_sub_sql = '';

            $data = branches(session()->userId);



            $curr_finyr = session()->financialYear;

            $data['curr_fyrsdt'] = '01-04-'.substr($curr_finyr,0,4);

            $data['billfor_ind'] = 'N';



            $sele_main_sql = "select main_ac_code , main_ac_desc from account_master where sub_ac_ind = 'Y' order by main_ac_desc";

            $sele_main_qry = $this->db->query($sele_main_sql)->getResultArray();	



            $sele_sub_sql = "select main_ac_code , sub_ac_code , sub_ac_desc from sub_account_master order by sub_ac_desc";

            $sele_sub_qry = $this->db->query($sele_sub_sql)->getResultArray();	



            if($mode == 'Main') {

                if($main_ac == 'All') {

                    $sele_sub_sql = "select main_ac_code , sub_ac_code , sub_ac_desc

                                from sub_account_master

                                order by sub_ac_desc";

                    $sele_sub_qry = $this->db->query($sele_sub_sql)->getResultArray();				 			  

                } else {

                    $sele_sub_sql = "select main_ac_code , sub_ac_code , sub_ac_desc

                                from sub_account_master

                                where main_ac_code = '$main_ac'

                                order by sub_ac_desc";

                    $sele_sub_qry = $this->db->query($sele_sub_sql)->getResultArray();				 			  

                }

            }

            // echo '<pre>';print_r($sele_sub_qry);die;



            return view("pages/Finance/sub_ledger", compact("data", "sele_main_qry", "sele_sub_qry", 'main_ac')); 

        }

    }



    public function client_ledger() {

        $requested_url = session()->requested_end_menu_url;

        $output_type = isset($_REQUEST['output_type']) ? $_REQUEST['output_type'] : '';

        $displayId = ['client_help_id' => '4072'];



        if($this->request->getMethod() == "post") {

            if($output_type == 'Report' || $output_type == 'Pdf' || $output_type == 'Excel') {



                $lines_per_page  = isset($_REQUEST['lines_per_page'])?$_REQUEST['lines_per_page']:52;

                $company_code    = isset($_REQUEST['company_code'])?$_REQUEST['company_code']:null;

                $branch_code     = isset($_REQUEST['branch_code'])?$_REQUEST['branch_code']:null;

                $client_code     = isset($_REQUEST['client_code'])?$_REQUEST['client_code']:null;

                $date_from       = isset($_REQUEST['date_from'])?$_REQUEST['date_from']:null;

                $date_to         = isset($_REQUEST['date_to'])?$_REQUEST['date_to']:null;

                $display_heading = 'Client Ledger';

                

                $branch_name_stmt = $this->db->query("select branch_name from branch_master where branch_code='$branch_code'")->getRowArray();

                $branch_name = $branch_name_stmt['branch_name'];

                

                $client_name_stmt = $this->db->query("select client_name from client_master where client_code='$client_code'")->getRowArray();

                $client_name = $client_name_stmt['client_name'];



                //converting of Start Date and End Date in 'yyyy-mm-dd' format

                $date_frm = date_conv($date_from) ;

                $date_upt = date_conv($date_to);



                //creating of current financial month and current financial year of the Start Date  

                $fin_month = substr($date_frm,5,2);

                $fin_year = substr($date_frm,0,4);

                if($fin_month <= 3)

                {

                $fin_yr = ($fin_year - 1).'-'.$fin_year ;

                }  

                else

                {

                $fin_yr = $fin_year.'-'.($fin_year+1) ;

                } 



                //Current year-month in 'yyyymm' format

                $year_mon = substr($date_frm,0,4).substr($date_frm,5,2) ; 

                //The first date of the month mentioned in Start Date

                $date_start = substr($date_frm,0,4).'-'.substr($date_frm,5,2).'-'.'01' ;



                $user_id        = session()->userId;

                $logdt_qry      = $this->db->query("select date_format(now(),'%Y%m%d%h%i%s') timestamp ")->getRowArray();

                $timestamp      = $logdt_qry['timestamp'];

                $temp_id        = "zz_".$user_id."_".$timestamp;



                // $global_temp_id = getTempId($first_login_id,$link);



                // $global_temp_id = 'zz_'.$first_login_id;



                $table1 = $temp_id.'_client_ledger_open_bal';

                $table2 = $temp_id.'_client_ledger_dtl_rec';

                $this->db->query("DROP TABLE IF EXISTS $table1");

                $this->db->query("DROP TABLE IF EXISTS $table2");



                $create_sql1 = "CREATE TABLE $table1(client_code varchar(6),amount_dr double(12,2),amount_cr double(12,2))";

                $this->db->query($create_sql1);



                $create_sql2 = "CREATE TABLE $table2(serial_no int(8),client_code varchar(6),matter_code varchar(6),daybook_code char(2),doc_type varchar(4)

                            ,doc_date date,doc_no varchar(10),instrument_no varchar(20),instrument_dt date,narration varchar(100),amount_dr double(12,2)

                            ,amount_cr double(12,2),dr_cr_ind char(1),rec_code char(2),rec_ind char(1))";

                $this->db->query($create_sql2);



                $insert_sql_1 = "INSERT INTO $table1(client_code,amount_dr,amount_cr)

                                select '$client_code', 0 , 0

                                union all

                                select '$client_code', sum(ifnull(a.amount_dr,0.00)) amount_dr , sum(ifnull(a.amount_cr,0.00)) amount_cr

                                from matter_balance a, fileinfo_header b

                                where a.branch_code  like '$branch_code' and a.fin_year = '$fin_yr' and a.record_code = '01' and a.matter_code = b.matter_code and b.client_code like '$client_code'" ;

                $this->db->query($insert_sql_1);



                $insert_sql_2 = "INSERT INTO $table1(client_code,amount_dr,amount_cr)

                                select b.client_code, sum(ifnull(a.amount_dr,0.00)) amount_dr , sum(ifnull(a.amount_cr,0.00)) amount_cr

                                from matter_balance a , fileinfo_header b

                                where a.branch_code  like '$branch_code' and a.fin_year = '$fin_yr' and a.yyyy_mm < '$year_mon' and a.record_code = '02'

                                and b.client_code like '$client_code' and a.matter_code = b.matter_code

                                group by b.client_code" ;

                $this->db->query($insert_sql_2);



                $insert_sql_3 = "INSERT INTO $table1(client_code,amount_dr,amount_cr)

                                select a.client_code, sum(if(dr_cr_ind = 'D',ifnull(a.net_amount,0.00),0)) amount_dr , sum(if(dr_cr_ind = 'C',ifnull(a.net_amount,0.00),0)) amount_cr 

                                from ledger_trans_dtl a , ledger_trans_hdr b

                                where a.client_code like '$client_code' and a.branch_code like '$branch_code' and a.ref_ledger_serial_no = b.serial_no

                                and b.status_code = 'C' and b.doc_date between '$date_start' and date_sub('$date_frm' , INTERVAL 1 DAY)

                                group by a.client_code ";

                $this->db->query($insert_sql_3);



                $insert_sql_5 = "INSERT INTO $table2(client_code,amount_dr,rec_code,narration,dr_cr_ind,rec_ind)

                                select a.client_code, sum(a.amount_dr - a.amount_cr) , '01' , 'Opening Balance' , 'S', '0'

                                from $table1 a

                                group by a.client_code";

                $this->db->query($insert_sql_5);



                $insert_sql_6 = "insert into $table2 (serial_no,client_code,matter_code,daybook_code,doc_type,doc_date,doc_no,instrument_no,instrument_dt

                                ,narration,amount_dr,amount_cr,dr_cr_ind,rec_code,rec_ind)

                                select a.serial_no,a.client_code,a.matter_code,'','SB',a.bill_date,'' bill_no,'','',concat('Bill No - ',a.fin_year,'/',a.bill_no,', Matter : ',a.matter_code) narration

                                ,ifnull(a.bill_amount_inpocket,0.00)+ifnull(a.bill_amount_outpocket,0.00)+ifnull(a.bill_amount_counsel,0.00) bill_amt

                                ,'0','D','02','1'

                                from bill_detail a, client_master b 

                                where a.branch_code = '$branch_code' and a.bill_date between '$date_frm' and '$date_upt' and a.client_code    like '$client_code'

                                and a.client_code = b.client_code and (a.cancel_ind = '' or a.cancel_ind is null or a.cancel_ind = 'N')

                                order by a.client_code,a.matter_code";

                $this->db->query($insert_sql_6);



                $insert_sql_7 = "insert into $table2 (serial_no,client_code,matter_code,daybook_code,doc_type,doc_date,doc_no,instrument_no,instrument_dt,narration

                                ,amount_dr,amount_cr,dr_cr_ind,rec_code,rec_ind)

                                select b.serial_no,a.payee_payer_code,a.matter_code,b.daybook_code,b.doc_type,b.doc_date,b.doc_no,b.instrument_no,b.instrument_dt

                                ,concat('Advance Rceived against Matter - ',a.matter_code) narration,'0',ifnull(a.net_amount,0),'C','02','2'

                                from advance_details a, ledger_trans_hdr b

                                where a.advance_type = 'R' and a.payee_payer_type = 'C' and a.branch_code like '$branch_code'

                                and a.payee_payer_code like '$client_code' and a.ref_ledger_serial_no = b.serial_no and b.doc_date between '$date_frm' and '$date_upt' 

                                order by a.payee_payer_code " ;

                $this->db->query($insert_sql_7);



                $insert_sql_8 = "insert into $table2 (serial_no,client_code,matter_code,daybook_code,doc_type,doc_date,doc_no,instrument_no,instrument_dt,narration

                                ,amount_dr,amount_cr,dr_cr_ind,rec_code,rec_ind)

                                select c.serial_no,b.client_code,b.matter_code,c.daybook_code,c.doc_type,c.doc_date,c.doc_no,c.instrument_no,c.instrument_dt

                                ,concat('Realisation against Matter - ',b.matter_code) narration,'0' amount_dr

                                ,ifnull(b.realise_amount_inpocket,0) + ifnull(b.realise_amount_outpocket,0) + ifnull(b.realise_amount_counsel,0) amount_cr

                                ,'C' dr_cr_ind,'02' rec_code,'3' rec_ind

                                from bill_realisation_header a, bill_realisation_detail b, ledger_trans_hdr c

                                where a.branch_code like '$branch_code'

                                and b.client_code like '$client_code' and b.ref_bill_year != 'ON AC' and b.ref_bill_year != 'ADVEXP' and a.serial_no = b.ref_realisation_serial_no

                                and a.ref_ledger_serial_no = c.serial_no and c.doc_date between '$date_frm' and '$date_upt'

                                order by a.client_code"  ;

                $this->db->query($insert_sql_8) ;



                $sele_sql = "select a.client_code,a.matter_code,a.daybook_code,a.doc_type,date_format(a.doc_date,'%d-%m-%Y') doc_date,a.doc_no,a.instrument_no

                    ,date_format(a.instrument_dt,'%d-%m-%Y') instrument_dt,a.narration,a.amount_dr,a.amount_cr,a.dr_cr_ind,a.rec_ind,b.client_name

                    from $table2 a, client_master b

                    where a.client_code = b.client_code 

                    order by a.client_code, a.rec_ind, a.doc_date, a.doc_no";



                $sele_qry = $this->db->query($sele_sql)->getResultArray();

                // echo '<pre>';print_r($sele_qry);die;

                $count = count($sele_qry) ;



                if(empty($sele_qry)) {

                    session()->setFlashdata('message', 'No Records Found !!');

                    return redirect()->to($this->requested_url());

                }



                $params = [

                    "count" => $count,

                    "display_heading" => $display_heading,

                    "branch_name" => $branch_name,

                    "date_from" => $date_from,

                    "date_to" => $date_to,

                    "fin_yr" => $fin_yr,

                    "client_name" => $client_name,

                    "lines_per_page" => $lines_per_page,

                    "requested_url" => $requested_url,

                ];



                if ($output_type == 'Pdf') {

                    $report_type = 'Pdf'; $dompdf = new \Dompdf\Dompdf(); 

                    $reportHTML = view("pages/Finance/client_ledger", compact('sele_qry', 'params', 'report_type'));

                    $dompdf->loadHtml($reportHTML);

                    $dompdf->setPaper('A4', 'landscape'); // portrait

                    $dompdf->render();

                    $dompdf->stream('abc.pdf', array('Attachment'=>0)); exit;

                } else if($output_type == 'Excel') {

                    $showActionBtns = true;

                    $spreadsheet = new Spreadsheet();

                    $sheet = $spreadsheet->getActiveSheet();

                    $rows = 1;



                    $fileName = $headings = '';

                    $fileName = 'Finance-Client-Ledger-'.date('d-m-Y').'.xlsx';  

                    $headings = ['Doc Date', 'Doc No', 'Instrument No.', 'Date', 'Narration', 'Debit', 'Credit'];

                    $column = 'A'; $rows++;



                    foreach ($headings as $heading) {

                        $cell = $column . $rows;

                        $sheet->setCellValue($cell, $heading); // Set the cell value



                        // Apply formatting

                        $style = $sheet->getStyle($cell);

                        $style->getFont()->setBold(true);

                        $style->getAlignment()->setHorizontal(Alignment::HORIZONTAL_CENTER);

                        $style->getFill()->setFillType(Fill::FILL_SOLID)->getStartColor()->setRGB('c8d5ef');

                        $style->getBorders()->getAllBorders()->setBorderStyle(\PhpOffice\PhpSpreadsheet\Style\Border::BORDER_THIN); // Add borders

                        ++$column; // Move to the next column

                    } $rows++;



                    $cnt = 1 ;

                    $transrow = isset($sele_qry[$cnt-1]) ? $sele_qry[$cnt-1] : '' ;

                    $count = $params['count'];

                    $prev_rec_ind = '';

                    $lno = 0 ;

                    $prev_dr_amt  = 0.00;

                    $prev_cr_amt  = 0.00;

                    $close_blnc   = 0.00;

                    $sheet->setCellValue('A' . $rows, $params['client_name']);



                    $style = $sheet->getStyle('A' . $rows . ':G' . $rows);

                    $style->getFont()->setBold(true);

                    $style->getBorders()->getAllBorders()->setBorderStyle(\PhpOffice\PhpSpreadsheet\Style\Border::BORDER_THIN); 

                    $sheet->mergeCells('A' . $rows . ':G' . $rows);

                    $rows++;

                    while($cnt <= $count) {



                        if($transrow['rec_ind'] != $prev_rec_ind) {

                            if($prev_rec_ind > 0) {

                                $sheet->setCellValue('A' . $rows, 'Total');

                                $sheet->setCellValue('F' . $rows, number_format($prev_dr_amt,2,'.',''));

                                $sheet->setCellValue('G' . $rows, number_format($prev_cr_amt,2,'.',''));



                                $style = $sheet->getStyle('A' . $rows . ':G' . $rows);

                                $style->getFont()->setBold(true);

                                $style->getAlignment()->setHorizontal(Alignment::HORIZONTAL_RIGHT);

                                $style->getBorders()->getAllBorders()->setBorderStyle(\PhpOffice\PhpSpreadsheet\Style\Border::BORDER_THIN); 

                                $style->getBorders()->getBottom()->setBorderStyle(\PhpOffice\PhpSpreadsheet\Style\Border::BORDER_MEDIUM); 

                                $style->getBorders()->getRight()->setBorderStyle(\PhpOffice\PhpSpreadsheet\Style\Border::BORDER_MEDIUM);

                                $style->getBorders()->getTop()->setBorderStyle(\PhpOffice\PhpSpreadsheet\Style\Border::BORDER_MEDIUM);

                                $style->getFill()->setFillType(Fill::FILL_SOLID)->getStartColor()->setRGB('c8efe3');

                                $sheet->mergeCells('A' . $rows . ':E' . $rows);

                                $rows++;

                            }

                            $prev_rec_ind = $transrow['rec_ind'] ;

                            $prev_dr_amt  = $transrow['amount_dr'];

                            $prev_cr_amt  = $transrow['amount_cr'];

                        } else {

                            $prev_dr_amt  = $prev_dr_amt + $transrow['amount_dr'];

                            $prev_cr_amt  = $prev_cr_amt + $transrow['amount_cr'];

                        }

                        $sheet->setCellValue('A' . $rows, ($transrow['doc_date']!='00-00-0000') ? $transrow['doc_date'] : '');

                        $sheet->setCellValue('B' . $rows, $transrow['doc_no']);

                        $sheet->setCellValue('C' . $rows, $transrow['instrument_no']);

                        $sheet->setCellValue('D' . $rows, ($transrow['instrument_dt'] != '00-00-0000') ?  $transrow['instrument_dt'] : '');

                        $sheet->setCellValue('E' . $rows, $transrow['narration']);

                        if($transrow['rec_ind'] == '0') {

                            $sheet->setCellValue('F' . $rows, ($transrow['amount_dr'] > 0) ? number_format($transrow['amount_dr'],2,'.','') : '');

                            $sheet->setCellValue('G' . $rows, ($transrow['amount_dr'] < 0) ? number_format(abs($transrow['amount_dr']),2,'.','') : '');

                        } else {

                            $sheet->setCellValue('F' . $rows, number_format($transrow['amount_dr'],2,'.',''));

                            $sheet->setCellValue('G' . $rows, number_format($transrow['amount_cr'],2,'.',''));

                        }

                        $close_blnc = $close_blnc + $transrow['amount_dr'] - $transrow['amount_cr'] ;

                        $transrow = ($cnt < $count) ? $sele_qry[$cnt] : $transrow;  

                        $cnt = $cnt + 1;



                        $style = $sheet->getStyle('A' . $rows . ':G' . $rows);

                        $style->getBorders()->getAllBorders()->setBorderStyle(\PhpOffice\PhpSpreadsheet\Style\Border::BORDER_THIN); 

                        $rows++;

                    }

                    $sheet->setCellValue('A' . $rows, 'Total');

                    $sheet->setCellValue('F' . $rows, number_format($prev_dr_amt,2,'.','')); 

                    $sheet->setCellValue('G' . $rows, number_format($prev_cr_amt,2,'.','')); 



                    $style = $sheet->getStyle('A' . $rows . ':G' . $rows);

                    $style->getFont()->setBold(true);

                    $style->getAlignment()->setHorizontal(Alignment::HORIZONTAL_RIGHT);

                    $style->getBorders()->getAllBorders()->setBorderStyle(\PhpOffice\PhpSpreadsheet\Style\Border::BORDER_THIN); 

                    $style->getBorders()->getBottom()->setBorderStyle(\PhpOffice\PhpSpreadsheet\Style\Border::BORDER_MEDIUM); 

                    $style->getBorders()->getRight()->setBorderStyle(\PhpOffice\PhpSpreadsheet\Style\Border::BORDER_MEDIUM);

                    $style->getBorders()->getTop()->setBorderStyle(\PhpOffice\PhpSpreadsheet\Style\Border::BORDER_MEDIUM);

                    $style->getFill()->setFillType(Fill::FILL_SOLID)->getStartColor()->setRGB('c8efe3');

                    $sheet->mergeCells('A' . $rows . ':E' . $rows);

                    $rows++;



                    $sheet->setCellValue('A' . $rows, 'Closing');

                    $sheet->setCellValue('F' . $rows, ($close_blnc > 0) ? number_format($close_blnc,2,'.','') : ''); 

                    $sheet->setCellValue('G' . $rows, ($close_blnc < 0) ? number_format(abs($close_blnc),2,'.','') : ''); 



                    $style = $sheet->getStyle('A' . $rows . ':G' . $rows);

                    $style->getFont()->setBold(true);

                    $style->getAlignment()->setHorizontal(Alignment::HORIZONTAL_RIGHT);

                    $style->getBorders()->getAllBorders()->setBorderStyle(\PhpOffice\PhpSpreadsheet\Style\Border::BORDER_THIN); 

                    $style->getBorders()->getBottom()->setBorderStyle(\PhpOffice\PhpSpreadsheet\Style\Border::BORDER_MEDIUM); 

                    $style->getBorders()->getRight()->setBorderStyle(\PhpOffice\PhpSpreadsheet\Style\Border::BORDER_MEDIUM);

                    $style->getBorders()->getTop()->setBorderStyle(\PhpOffice\PhpSpreadsheet\Style\Border::BORDER_MEDIUM);

                    $style->getFill()->setFillType(Fill::FILL_SOLID)->getStartColor()->setRGB('ffe93a');

                    $sheet->mergeCells('A' . $rows . ':E' . $rows);

                    $rows++;



                    $writer = new Xlsx($spreadsheet);

                    $writer->save($fileName);

                    header('Content-Type: application/vnd.ms-excel');

                    header('Content-Disposition: attachment; filename="'.basename($fileName).'"');

                    header('Expires: 0');

                    header('Cache-control: must-revalidate');

                    header('Pragma: public');

                    header('Content-Length:'.filesize($fileName));

                    flush();

                    readfile($fileName); 



                } else return view("pages/Finance/client_ledger", compact("sele_qry", "params")); 



            }

        } else {

            $data = [];

            $data = branches(session()->userId);

            $curr_finyr = session()->financialYear;

            $data['curr_fyrsdt'] = '01-04-'.substr($curr_finyr,0,4);

            $data['billfor_ind'] = 'N';



            return view("pages/Finance/client_ledger", compact("data", "displayId")); 

        }

    }



    public function matter_ledger() {

        $requested_url = session()->requested_end_menu_url;

        $output_type = isset($_REQUEST['output_type']) ? $_REQUEST['output_type'] : '';

        $company_code = session()->user_qry['company_code'];

        $displayId = ['matter_help_id' => '4212'];



        if($this->request->getMethod() == "post") {

            if($output_type == 'Report' || $output_type == 'Pdf' || $output_type == 'Excel') {



                $lines_per_page  = isset($_REQUEST['lines_per_page'])?$_REQUEST['lines_per_page']:52;

                //$company_code    = isset($_REQUEST['company_code'])?$_REQUEST['company_code']:null;

                $branch_code     = isset($_REQUEST['branch_code'])?$_REQUEST['branch_code']:null;

                $matter_code     = isset($_REQUEST['matter_code'])?$_REQUEST['matter_code']:null;

                $date_from       = isset($_REQUEST['date_from'])?$_REQUEST['date_from']:null;

                $date_to         = isset($_REQUEST['date_to'])?$_REQUEST['date_to']:null;

                $display_heading = 'Matter Ledger';

                

                $branch_name_stmt = $this->db->query("select branch_name from branch_master where branch_code='$branch_code'")->getRowArray();

                $branch_name = $branch_name_stmt['branch_name'];

                

                if ($matter_code == '') {$grand_ind = 'Y'; $matter_code = '%'; } else { $grand_ind = ''; }  



                //converting of Start Date and End Date in 'yyyy-mm-dd' format

                $date_frm = date_conv($date_from) ;

                $date_upt = date_conv($date_to);



                //creating of current financial month and current financial year of the Start Date  

                $fin_month = substr($date_frm,5,2);

                $fin_year = substr($date_frm,0,4);

                if($fin_month <= 3) {

                    $fin_yr = ($fin_year - 1).'-'.$fin_year ;

                } else {

                    $fin_yr = $fin_year.'-'.($fin_year+1) ;

                } 



                $year_mon = substr($date_frm,0,4).substr($date_frm,5,2) ; 

                $date_start = substr($date_frm,0,4).'-'.substr($date_frm,5,2).'-'.'01' ;



                $user_id        = session()->userId;

                $logdt_qry      = $this->db->query("select date_format(now(),'%Y%m%d%h%i%s') timestamp ")->getRowArray();

                $timestamp      = $logdt_qry['timestamp'];

                $temp_id        = "zz_".$user_id."_".$timestamp;



                $table1 = $temp_id.'_matter_ledger_open_bal';

                $table2 = $temp_id.'_matter_ledger_dtl_rec';

                $this->db->query("DROP TABLE IF EXISTS $table1");

                $this->db->query("DROP TABLE IF EXISTS $table2");



                // Temporary table for opening balance from fileinfo_header balance			

                $create_sql1 = "CREATE TABLE $table1(branch_code varchar(4),branch_abbr_name varchar(3),branch_name varchar(50),matter_code varchar(6),matter_desc varchar(250),amount_dr double(12,2),amount_cr double(12,2))";

                $this->db->query($create_sql1);



                // Temporary table for Detail Ledger transactions			

                $create_sql2 = "CREATE TABLE $table2(serial_no int(8),branch_code varchar(4),branch_abbr_name varchar(3),branch_name varchar(50),matter_code varchar(6)

                            ,matter_desc varchar(250),daybook_code char(2),doc_type varchar(4),doc_date date,doc_no varchar(10),instrument_no varchar(20)

                            ,instrument_dt date,narration varchar(100),amount_dr double(12,2),amount_cr double(12,2),dr_cr_ind char(1),rec_code char(2),sub_ac_ind char(1))";

                $this->db->query($create_sql2);



                // Insertion of Year Opening Balance in Temporary table 



                $insert_sql1 = "INSERT INTO $table1(branch_code,branch_abbr_name,branch_name,matter_code,matter_desc,amount_dr,amount_cr)

                                select b.branch_code,c.branch_abbr_name, c.branch_name, a.matter_code , concat(a.matter_desc1,'-',a.matter_desc2) matter_desc , ifnull(b.amount_dr,0.00) , ifnull(b.amount_cr,0.00)

                                from branch_master c, fileinfo_header a left join matter_balance b

                                on a.matter_code = b.matter_code

                                and b.fin_year = '$fin_yr' and b.record_code = '01'

                                where b.branch_code = c.branch_code

                                and a.matter_code  like '$matter_code' and c.company_code like '$company_code' and c.branch_code  like '$branch_code'

                            order by a.matter_code" ;

                            // echo '<pre>';print_r($insert_sql1);die;

                $this->db->query($insert_sql1);



                // Insertion of Balance of previous months in Temporary table 

                $insert_sql2 = "INSERT INTO $table1(branch_code,branch_abbr_name,branch_name,matter_code,matter_desc,amount_dr,amount_cr)

                                select a.branch_code,c.branch_abbr_name, c.branch_name, a.matter_code , concat(b.matter_desc1,'-',b.matter_desc2) matter_desc , a.amount_dr , a.amount_cr 

                                from matter_balance a , fileinfo_header b, branch_master c

                                where a.fin_year = '$fin_yr' and a.matter_code = b.matter_code and a.yyyy_mm < '$year_mon' and a.record_code = '02' and a.branch_code = c.branch_code

                                and b.matter_code  like '$matter_code' and c.company_code like '$company_code' and c.branch_code  like '$branch_code'

                                order by a.matter_code" ;

                $this->db->query($insert_sql2);



                // Insertion of Balance for old days of month prior to start date - for broken start date 

                $insert_sql3 = "INSERT INTO $table1(branch_code,branch_abbr_name,branch_name,matter_code,matter_desc,amount_dr,amount_cr)

                                select b.branch_code,d.branch_abbr_name, d.branch_name,a.matter_code , concat(c.matter_desc1,'-',c.matter_desc2) matter_desc , sum(if(dr_cr_ind = 'D',ifnull(a.net_amount,0.00),0)) amount_dr , sum(if(dr_cr_ind = 'C',ifnull(a.net_amount,0.00),0)) amount_cr 

                                from ledger_trans_dtl a , ledger_trans_hdr b , fileinfo_header c, branch_master d

                                where a.ref_ledger_serial_no = b.serial_no and a.matter_code = c.matter_code and b.status_code = 'C'			

                                and b.doc_date between '$date_start' and date_sub('$date_frm' , INTERVAL 1 DAY) and b.branch_code = d.branch_code

                                and c.matter_code like '$matter_code' and d.company_code like '$company_code' and d.branch_code like '$branch_code'

                                group by a.matter_code ";

                $this->db->query($insert_sql3);



                // Insertion of Opening Balance in main temparary table - it will be printed in ledger  

                $insert_sql5 = "INSERT INTO $table2(branch_code,branch_abbr_name,branch_name,matter_code,matter_desc,amount_dr,rec_code,narration,dr_cr_ind)

                                select a.branch_code, a.branch_abbr_name, a.branch_name, a.matter_code, a.matter_desc , sum(a.amount_dr - a.amount_cr) , '01' , 'Opening Balance' , 'S'

                                from $table1 a

                                group by matter_code";

                $this->db->query($insert_sql5);



                $insert_sql_6 = "insert into $table2 (serial_no,branch_code,branch_abbr_name,branch_name,matter_code,matter_desc,daybook_code,doc_type,doc_date,doc_no,instrument_no,instrument_dt,narration,amount_dr,amount_cr,dr_cr_ind,rec_code,sub_ac_ind)

                                select a.serial_no,b.branch_code,d.branch_abbr_name,d.branch_name,b.matter_code,concat(e.matter_desc1,':',e.matter_desc2),a.daybook_code,doc_type,a.doc_date,a.doc_no,a.instrument_no,a.instrument_dt,b.narration,if(b.dr_cr_ind='D',b.gross_amount,0),if(b.dr_cr_ind='C',b.gross_amount,0),b.dr_cr_ind,'02','N'

                                from ledger_trans_hdr a, ledger_trans_dtl b, branch_master d, fileinfo_header e

                                where a.doc_date  between '$date_frm' and '$date_upt' 

                                and a.branch_code like '$branch_code'

                                and a.status_code = 'C' 

                                and a.serial_no = b.ref_ledger_serial_no

                                and b.matter_code like '$matter_code'

                                and a.branch_code = d.branch_code

                                and b.matter_code = e.matter_code

                                order by b.matter_code,a.doc_date,a.doc_type,a.doc_no " ;

                $this->db->query($insert_sql_6) ;  



                $sele_sql = "select a.* from $table2 a, branch_master b

                            where a.matter_code like '$matter_code' 

                            and a.branch_code like '$branch_code' 

                            and a.branch_code = b.branch_code 

                            order by a.matter_code , a.rec_code ,  a.doc_date , a.daybook_code , a.doc_type , a.doc_no";

                $sele_qry = $this->db->query($sele_sql)->getResultArray();

                

                $count = count($sele_qry) ;



                if(empty($sele_qry)) {

                    session()->setFlashdata('message', 'No Records Found !!');

                    return redirect()->to($this->requested_url());

                }



                $params = [

                    "count" => $count,

                    "display_heading" => $display_heading,

                    "branch_name" => $branch_name,

                    "date_from" => $date_from,

                    "date_to" => $date_to,

                    "fin_yr" => $fin_yr,

                    "lines_per_page" => $lines_per_page,

                    "requested_url" => $requested_url,

                ];



                if ($output_type == 'Pdf') {

                    $report_type = 'Pdf'; $dompdf = new \Dompdf\Dompdf(); 

                    $reportHTML = view("pages/Finance/matter_ledger", compact('sele_qry', 'params', 'report_type'));

                    $dompdf->loadHtml($reportHTML);

                    $dompdf->setPaper('A4', 'landscape'); // portrait

                    $dompdf->render();

                    $dompdf->stream('abc.pdf', array('Attachment'=>0)); exit;

                } else if($output_type == 'Excel') {

                    $showActionBtns = true;

                    $spreadsheet = new Spreadsheet();

                    $sheet = $spreadsheet->getActiveSheet();

                    $rows = 1;



                    $fileName = $headings = '';

                    $fileName = 'Finance-Matter-Ledger-'.date('d-m-Y').'.xlsx';  

                    $headings = ['Branch', 'DB', 'Type', 'Doc Date', 'Doc No', 'Instrument No.', 'Date', 'Narration', 'Debit', 'Credit', 'Balance'];

                    $column = 'A'; $rows++;



                    foreach ($headings as $heading) {

                        $cell = $column . $rows;

                        $sheet->setCellValue($cell, $heading); // Set the cell value



                        // Apply formatting

                        $style = $sheet->getStyle($cell);

                        $style->getFont()->setBold(true);

                        $style->getAlignment()->setHorizontal(Alignment::HORIZONTAL_CENTER);

                        $style->getFill()->setFillType(Fill::FILL_SOLID)->getStartColor()->setRGB('c8d5ef');

                        $style->getBorders()->getAllBorders()->setBorderStyle(\PhpOffice\PhpSpreadsheet\Style\Border::BORDER_THIN); // Add borders

                        $style->getBorders()->getBottom()->setBorderStyle(\PhpOffice\PhpSpreadsheet\Style\Border::BORDER_MEDIUM);

                        $style->getBorders()->getTop()->setBorderStyle(\PhpOffice\PhpSpreadsheet\Style\Border::BORDER_MEDIUM);

                        $style->getBorders()->getRight()->setBorderStyle(\PhpOffice\PhpSpreadsheet\Style\Border::BORDER_MEDIUM);

                        ++$column; // Move to the next column

                    } $rows++;



                    $cnt = 1 ;

                    $balance_print = 'Yes';

                    $transrow = isset($sele_qry[$cnt-1]) ? $sele_qry[$cnt-1] : '' ; 

                    $count = $params['count'];

                    $grand_trans_dr = 0;

                    $grand_trans_cr = 0;

                    $grand_clo_balance = 0;

                    $grand_op_balance = 0;

                    while($cnt <= $count) {

                        $m_ac_code   = $transrow['matter_code'] ;

                        $ac_ind      = $transrow['sub_ac_ind'] ;

                        $t_dr_amt    = 0 ;

                        $t_cr_amt    = 0 ;

                        $t_clo_amt   = 0 ;

                        $balance_amt = 0.00 ;

                        $pmccind = 'Y';

                        while($m_ac_code == $transrow['matter_code'] && $cnt <= $count) {

                            $p_rec = $transrow['rec_code'] ;

                            while($m_ac_code == $transrow['matter_code'] && $cnt <= $count &&  $p_rec == $transrow['rec_code']) {

                                $ac_ind = $transrow['sub_ac_ind'];	

                                if($pmccind == 'Y') {

                                    $pmccind      = 'N' ;

                                    $matter_code = $transrow['matter_code'] ;

                                    $matter_desc = $transrow['matter_desc'] ;



                                    $sheet->setCellValue('A' . $rows, $matter_code);

                                    $sheet->setCellValue('B' . $rows, $matter_desc); 



                                    $style = $sheet->getStyle('A' . $rows . ':K' . $rows);

                                    $style->getFont()->setBold(true);

                                    $style->getBorders()->getAllBorders()->setBorderStyle(\PhpOffice\PhpSpreadsheet\Style\Border::BORDER_THIN);

                                    $style->getBorders()->getRight()->setBorderStyle(\PhpOffice\PhpSpreadsheet\Style\Border::BORDER_MEDIUM);

                                    $style->getFill()->setFillType(Fill::FILL_SOLID)->getStartColor()->setRGB('c8efe3');

                                    $sheet->mergeCells('B' . $rows . ':K' . $rows);

                                    $style->getAlignment()->setWrapText(true);

                                    $rows++;

                                } else {

                                    $matter_code = '' ;

                                    $matter_desc = '' ;



                                    $style = $sheet->getStyle('A' . $rows . ':K' . $rows);

                                    $style->getFont()->setBold(true);

                                    $style->getBorders()->getAllBorders()->setBorderStyle(\PhpOffice\PhpSpreadsheet\Style\Border::BORDER_THIN);

                                    $style->getBorders()->getRight()->setBorderStyle(\PhpOffice\PhpSpreadsheet\Style\Border::BORDER_MEDIUM);

                                    $style->getFill()->setFillType(Fill::FILL_SOLID)->getStartColor()->setRGB('c8efe3');

                                    $sheet->mergeCells('A' . $rows . ':C' . $rows);

                                    $sheet->mergeCells('D' . $rows . ':K' . $rows);

                                    $rows++;

                                }

                                $sheet->setCellValue('A' . $rows, $transrow['branch_abbr_name']);

                                $sheet->setCellValue('B' . $rows, $transrow['daybook_code']);

                                $sheet->setCellValue('C' . $rows, $transrow['doc_type']);

                                $sheet->setCellValue('D' . $rows, date_conv($transrow['doc_date']));

                                $sheet->setCellValue('E' . $rows, $transrow['doc_no']);

                                $sheet->setCellValue('F' . $rows, $transrow['instrument_no']);

                                $sheet->setCellValue('G' . $rows, date_conv($transrow['instrument_dt']));



                                if($transrow['rec_code'] == '03') {

                                    $sheet->setCellValue('H' . $rows, substr($transrow['narration'],0,50));

                                } else if($transrow['rec_code'] == '04') {

                                    $sheet->setCellValue('H' . $rows, substr($transrow['narration'],0,50));

                                } else {

                                    $sheet->setCellValue('H' . $rows, substr($transrow['narration'],0,50));

                                }

                                if($transrow['dr_cr_ind'] == 'D') {

                                    $t_dr_amt       = $t_dr_amt + $transrow['amount_dr'] ;

                                    $grand_trans_dr = $grand_trans_dr + $transrow['amount_dr'] ;		   

                                    $balance_amt    = $balance_amt + $transrow['amount_dr'] ;

                                    

                                    $sheet->setCellValue('I' . $rows, number_format($transrow['amount_dr'],2,'.',''));

                                    $sheet->setCellValue('J' . $rows, '');

                                    $sheet->setCellValue('K' . $rows, ($balance_print=='Yes') ? number_format($balance_amt,2,'.','') : '');

                                }

                                if($transrow['dr_cr_ind'] == 'C')

                                {

                                $t_cr_amt       = $t_cr_amt + $transrow['amount_cr'] ;

                                $grand_trans_cr = $grand_trans_cr + $transrow['amount_cr'];		  

                                $balance_amt    = $balance_amt - $transrow['amount_cr'] ;



                                $sheet->setCellValue('I' . $rows, '');

                                $sheet->setCellValue('J' . $rows, number_format($transrow['amount_cr'],2,'.',''));

                                $sheet->setCellValue('K' . $rows, ($balance_print=='Yes') ? number_format($balance_amt,2,'.','') : '');

                                }

                                if($transrow['dr_cr_ind'] == 'S')

                                {

                                    $balance_amt = $transrow['amount_dr'] ; 

                                    if($transrow['amount_dr'] > 0 ) {

                                        $t_dr_amt = $t_dr_amt + $transrow['amount_dr'] ; 

                                        $grand_op_balance = $grand_op_balance + $transrow['amount_dr'];		



                                        $sheet->setCellValue('I' . $rows, number_format($transrow['amount_dr'],2,'.',''));

                                        $sheet->setCellValue('J' . $rows, '');

                                        $sheet->setCellValue('K' . $rows, ($balance_print=='Yes') ? number_format($balance_amt,2,'.','') : '');



                                    }

                                    if($transrow['amount_dr'] < 0 ) {

                                        $t_cr_amt = $t_cr_amt + abs($transrow['amount_dr']) ;

                                        $grand_op_balance = $grand_op_balance + $transrow['amount_dr'];		



                                        $sheet->setCellValue('I' . $rows, '');

                                        $sheet->setCellValue('J' . $rows, number_format(abs($transrow['amount_dr']),2,'.',''));

                                        $sheet->setCellValue('K' . $rows, ($balance_print=='Yes') ? number_format($balance_amt,2,'.','') : '');	

                                    }

                                    if($transrow['amount_dr'] == 0.00 )

                                    {	 

                                        $sheet->setCellValue('I' . $rows, '');

                                        $sheet->setCellValue('J' . $rows, '');

                                        $sheet->setCellValue('K' . $rows, ($balance_print=='Yes') ? number_format($balance_amt,2,'.','') : '');	 

                                    }	

                                }

                                $transrow = ($cnt < $count) ? $sele_qry[$cnt] : $transrow; 

                                $cnt = $cnt + 1 ;



                                $style = $sheet->getStyle('A' . $rows . ':K' . $rows);

                                $style->getBorders()->getAllBorders()->setBorderStyle(\PhpOffice\PhpSpreadsheet\Style\Border::BORDER_THIN); 

                                $style->getBorders()->getRight()->setBorderStyle(\PhpOffice\PhpSpreadsheet\Style\Border::BORDER_MEDIUM);

                                $rows++;

                            }

                            $t_clo_amt = $t_dr_amt - $t_cr_amt ;

                        } 

                        if($t_dr_amt != 0.00 || $t_cr_amt != 0.00)

                        {

                            $sheet->setCellValue('A' . $rows, '');

                            $sheet->setCellValue('H' . $rows, 'Total');

                            if($t_dr_amt > 0 ) {

                                $sheet->setCellValue('I' . $rows, number_format($t_dr_amt,2,'.','')); 

                            }

                            if($t_dr_amt == 0.00)

                            {

                                $sheet->setCellValue('I' . $rows, ''); 

                            }

                            if($t_cr_amt > 0 )

                            {

                                $sheet->setCellValue('J' . $rows, number_format($t_cr_amt,2,'.',''));

                            }

                            if($t_cr_amt = 0.00)

                            { 

                                $sheet->setCellValue('J' . $rows, ''); 

                            }



                            $style = $sheet->getStyle('A' . $rows . ':K' . $rows);

                            $style->getFont()->setBold(true);

                            $style->getAlignment()->setHorizontal(Alignment::HORIZONTAL_RIGHT);

                            $style->getBorders()->getAllBorders()->setBorderStyle(\PhpOffice\PhpSpreadsheet\Style\Border::BORDER_THIN); 

                            $style->getBorders()->getRight()->setBorderStyle(\PhpOffice\PhpSpreadsheet\Style\Border::BORDER_MEDIUM);

                            $style->getBorders()->getTop()->setBorderStyle(\PhpOffice\PhpSpreadsheet\Style\Border::BORDER_MEDIUM);

                            $sheet->mergeCells('A' . $rows . ':G' . $rows);

                            $rows++;

                        }

                        $sheet->setCellValue('A' . $rows, '');

                        $sheet->setCellValue('H' . $rows, 'Closing');

                        if($t_clo_amt > 0) {

                            $sheet->setCellValue('I' . $rows, number_format($t_clo_amt,2,'.','')); 

                        }

                        if($t_clo_amt < 0) {

                            $sheet->setCellValue('J' . $rows, number_format(abs($t_clo_amt),2,'.','')); 

                        }

                        if($t_clo_amt == 0.00) {

                            $sheet->setCellValue('I' . $rows, ''); 

                            $sheet->setCellValue('J' . $rows, ''); 

                        }

                        $style = $sheet->getStyle('A' . $rows . ':K' . $rows);

                        $style->getFont()->setBold(true);

                        $style->getAlignment()->setHorizontal(Alignment::HORIZONTAL_RIGHT);

                        $style->getBorders()->getAllBorders()->setBorderStyle(\PhpOffice\PhpSpreadsheet\Style\Border::BORDER_THIN); 

                        $style->getBorders()->getBottom()->setBorderStyle(\PhpOffice\PhpSpreadsheet\Style\Border::BORDER_MEDIUM); 

                        $style->getBorders()->getRight()->setBorderStyle(\PhpOffice\PhpSpreadsheet\Style\Border::BORDER_MEDIUM);

                        $sheet->mergeCells('A' . $rows . ':G' . $rows);

                        $rows++;

                    }   

                    $sheet->setCellValue('A' . $rows, 'Grand Total');

                    $sheet->setCellValue('H' . $rows, 'Opening'); 

                    $sheet->setCellValue('I' . $rows, ($grand_op_balance >= 0) ? number_format($grand_op_balance,2,'.','') : ''); 

                    $sheet->setCellValue('J' . $rows, ($grand_op_balance <= 0) ? number_format(abs($grand_op_balance),2,'.','') : ''); 



                    $style = $sheet->getStyle('A' . $rows . ':K' . $rows);

                    $style->getFont()->setBold(true);

                    $style->getAlignment()->setHorizontal(Alignment::HORIZONTAL_RIGHT);

                    $style->getBorders()->getAllBorders()->setBorderStyle(\PhpOffice\PhpSpreadsheet\Style\Border::BORDER_THIN); 

                    $style->getBorders()->getBottom()->setBorderStyle(\PhpOffice\PhpSpreadsheet\Style\Border::BORDER_MEDIUM); 

                    $style->getBorders()->getRight()->setBorderStyle(\PhpOffice\PhpSpreadsheet\Style\Border::BORDER_MEDIUM);

                    $style->getBorders()->getTop()->setBorderStyle(\PhpOffice\PhpSpreadsheet\Style\Border::BORDER_MEDIUM);

                    $style->getFill()->setFillType(Fill::FILL_SOLID)->getStartColor()->setRGB('FFFF99');

                    $sheet->mergeCells('A' . $rows . ':G' . $rows);

                    $rows++;



                    $sheet->setCellValue('A' . $rows, 'Transaction'); 

                    $sheet->setCellValue('I' . $rows, ($grand_trans_dr != 0.00) ? number_format($grand_trans_dr,2,'.','') : ''); 

                    $sheet->setCellValue('J' . $rows, ($grand_trans_cr != 0.00) ? number_format($grand_trans_cr,2,'.','') : ''); 



                    $style = $sheet->getStyle('A' . $rows . ':K' . $rows);

                    $style->getFont()->setBold(true);

                    $style->getAlignment()->setHorizontal(Alignment::HORIZONTAL_RIGHT);

                    $style->getBorders()->getAllBorders()->setBorderStyle(\PhpOffice\PhpSpreadsheet\Style\Border::BORDER_THIN); 

                    $style->getBorders()->getBottom()->setBorderStyle(\PhpOffice\PhpSpreadsheet\Style\Border::BORDER_MEDIUM); 

                    $style->getBorders()->getRight()->setBorderStyle(\PhpOffice\PhpSpreadsheet\Style\Border::BORDER_MEDIUM);

                    $style->getBorders()->getTop()->setBorderStyle(\PhpOffice\PhpSpreadsheet\Style\Border::BORDER_MEDIUM);

                    $style->getFill()->setFillType(Fill::FILL_SOLID)->getStartColor()->setRGB('FFFF99');

                    $sheet->mergeCells('A' . $rows . ':H' . $rows);

                    $rows++;



                    $grand_clo_balance = $grand_op_balance + $grand_trans_dr - $grand_trans_cr;



                    $sheet->setCellValue('A' . $rows, 'Closing'); 

                    $sheet->setCellValue('I' . $rows, ($grand_clo_balance >= 0) ? number_format($grand_clo_balance,2,'.','') : ''); 

                    $sheet->setCellValue('J' . $rows, ($grand_clo_balance <= 0) ? number_format(abs($grand_clo_balance),2,'.','') : ''); 



                    $style = $sheet->getStyle('A' . $rows . ':K' . $rows);

                    $style->getFont()->setBold(true);

                    $style->getAlignment()->setHorizontal(Alignment::HORIZONTAL_RIGHT);

                    $style->getBorders()->getAllBorders()->setBorderStyle(\PhpOffice\PhpSpreadsheet\Style\Border::BORDER_THIN); 

                    $style->getBorders()->getBottom()->setBorderStyle(\PhpOffice\PhpSpreadsheet\Style\Border::BORDER_MEDIUM); 

                    $style->getBorders()->getRight()->setBorderStyle(\PhpOffice\PhpSpreadsheet\Style\Border::BORDER_MEDIUM);

                    $style->getBorders()->getTop()->setBorderStyle(\PhpOffice\PhpSpreadsheet\Style\Border::BORDER_MEDIUM);

                    $style->getFill()->setFillType(Fill::FILL_SOLID)->getStartColor()->setRGB('FFFF99');

                    $sheet->mergeCells('A' . $rows . ':H' . $rows);

                    $rows++;



                    $writer = new Xlsx($spreadsheet);

                    $writer->save($fileName);

                    header('Content-Type: application/vnd.ms-excel');

                    header('Content-Disposition: attachment; filename="'.basename($fileName).'"');

                    header('Expires: 0');

                    header('Cache-control: must-revalidate');

                    header('Pragma: public');

                    header('Content-Length:'.filesize($fileName));

                    flush();

                    readfile($fileName); 



                } else return view("pages/Finance/matter_ledger", compact("sele_qry", "params")); 

            }

        } else {

            $data = [];

            $data = branches(session()->userId);

            $curr_finyr = session()->financialYear;

            $data['curr_fyrsdt'] = '01-04-'.substr($curr_finyr,0,4);

            $data['billfor_ind'] = 'N';



            return view("pages/Finance/matter_ledger", compact("data", "displayId")); 

        }

    }



    public function trial_balance() {

        $requested_url = session()->requested_end_menu_url;

        $output_type = isset($_REQUEST['output_type']) ? $_REQUEST['output_type'] : '';

        $company_code = session()->user_qry['company_code'];

        $displayId = ['matter_help_id' => '4212'];

        $showActionBtns = false;



        if($this->request->getMethod() == "post") {

            if($output_type == 'Report' || $output_type == 'Pdf' || $output_type == 'Excel') {



                $showActionBtns = true;

                $branch_code    = $_REQUEST['branch_code'] ;

                $start_date     = $_REQUEST['start_date'] ;      $start_date_ymd = date_conv($start_date); 

                $end_date       = $_REQUEST['end_date'] ;        $end_date_ymd   = date_conv($end_date); 

                $form_report_type    = $_REQUEST['report_type'] ;  

                $report_option  = $_REQUEST['report_option'] ;  

                $report_otp   = $_REQUEST['report_otp'] ;   

                $comparative_ind   = $_REQUEST['comparative_ind'] ;

                $period_desc    = $start_date.' TO '.$end_date ;

              

                $branch_qry   =$this->db->query("select branch_name,company_code from branch_master where branch_code = '$branch_code' ")->getRowArray() ;

                $branch_name  = $branch_qry['branch_name'] ;

                $company_code = $branch_qry['company_code'] ;



                $finyr        = get_fin_year($start_date) ;

                $opsyymm      = substr($finyr,0,4).'04' ;

                $opsdate      = substr($finyr,0,4).'-04-01' ;

                //

                $opedt_qry    =$this->db->query("select date_sub('$start_date_ymd', interval 1 day) edate ")->getRowArray() ;

                $opedate      = $opedt_qry['edate'] ;

                $opeyymm      = substr($opedate,6,4).substr($opedate,3,2) ;

              

                //------

                $user_id        = session()->userId;

                $logdt_qry      = $this->db->query("select current_date, current_time, date_format(current_date,'%d-%m-%Y') current_dmydate ")->getRowArray();

                $curr_time      = $logdt_qry['current_time'];

                $curr_date      = $logdt_qry['current_dmydate'];

                $curr_day       = substr($curr_date,0,2) ;

                $curr_month     = substr($curr_date,3,2) ; 

                $curr_year      = substr($curr_date,6,4) ;

                $temp_id        = $user_id."_".$curr_year.$curr_month.$curr_day.str_replace(':','',$curr_time);



                $order_by_clause = $where_clause = $report_desc = $lend_date_ymd = $mytable = '';

                switch($comparative_ind) {

                    case 'N' :



                        $mycalctbl = $temp_id.'_trial_balance_calculation_table';

                        $mytable   = $temp_id.'_trial_balance_table';

                        $this->db->query("drop table IF EXISTS $mycalctbl");

                        $this->db->query("drop table IF EXISTS $mytable");

                        $this->db->query("create table $mycalctbl(branch_code varchar(4), level_code varchar(3), level_name varchar(50), variable_code varchar(1), main_ac_code varchar(6), main_ac_name varchar(50), level_ind varchar(1), opbal double(15,2), dramt double(15,2), cramt double(15,2), clbal double(15,2))") ;

                        $this->db->query("create table $mytable(branch_code varchar(4), level_code varchar(3), level_name varchar(50), variable_code varchar(1), main_ac_code varchar(6), main_ac_name varchar(50), opbal double(15,2), dramt double(15,2), cramt double(15,2), clbal double(15,2))") ;

                        

                        //------ Account Group-wise 

                        if ($form_report_type == 'G')

                        {

                        

                            $my_sql1 = "insert into $mycalctbl(branch_code,level_code,level_name,variable_code,main_ac_code,main_ac_name,level_ind,opbal,dramt,cramt,clbal)

                                        select '$branch_code',a.account_group_code,c.code_desc,a.segregated_ind,a.main_ac_code,a.main_ac_desc,'1',sum(ifnull(b.amount_dr,0.00)-ifnull(b.amount_cr,0.00)), 0, 0, 0 

                                        from code_master c, account_master a 

                                        left join account_balance b on b.branch_code = '$branch_code' and b.fin_year = '$finyr' and b.main_ac_code = a.main_ac_code and b.record_code = '01'

                                        where a.account_group_code = c.code_code and c.type_code = '023' 						 

                                        group by '$branch_code',a.account_group_code,c.code_desc,a.segregated_ind,a.main_ac_code,a.main_ac_desc 

                                        union all 

                                        select '$branch_code',c.account_group_code,d.code_desc,c.segregated_ind,a.main_ac_code,c.main_ac_desc,'2',sum(if(a.dr_cr_ind ='D',a.net_amount,(0-a.net_amount))), 0, 0, 0

                                        from ledger_trans_dtl a, ledger_trans_hdr b, account_master c, code_master d 

                                        where a.main_ac_code = c.main_ac_code

                                        and c.account_group_code = d.code_code and d.type_code = '023' 						 

                                        and a.ref_ledger_serial_no = b.serial_no

                                        and b.branch_code like '$branch_code'

                                        and b.doc_date between '$opsdate' and '$opedate' 

                                        and b.status_code = 'C' 

                                        group by '$branch_code',c.account_group_code,c.segregated_ind,a.main_ac_code,c.main_ac_desc

                                        union all 

                                        select '$branch_code',c.account_group_code,d.code_desc,c.segregated_ind,a.main_ac_code,c.main_ac_desc,'3',0,sum(if(a.dr_cr_ind ='D',a.net_amount,0)), sum(if(a.dr_cr_ind = 'C',a.net_amount,0)), 0

                                        from ledger_trans_dtl a, ledger_trans_hdr b, account_master c, code_master d 

                                        where a.main_ac_code = c.main_ac_code

                                        and c.account_group_code = d.code_code and d.type_code = '023' 						 

                                        and a.ref_ledger_serial_no = b.serial_no

                                        and b.branch_code like '$branch_code'

                                        and b.doc_date between '$start_date_ymd' and '$end_date_ymd' 

                                        and b.status_code = 'C' 

                                        group by '$branch_code',c.account_group_code,c.segregated_ind,a.main_ac_code,c.main_ac_desc "; 

                            $this->db->query($my_sql1) ;

                        

                            $my_sql2 = "insert into $mytable(branch_code,level_code,level_name,variable_code,main_ac_code,main_ac_name,opbal,dramt,cramt,clbal)

                                        select branch_code,level_code,level_name,variable_code,main_ac_code,main_ac_name,sum(opbal), sum(dramt), sum(cramt), sum(opbal+dramt-cramt)

                                        from $mycalctbl

                                        group by branch_code,level_code,level_name,variable_code,main_ac_code,main_ac_name " ;

                            $this->db->query($my_sql2) ;

                        }

                        //------ Account Type-wise 

                        else if ($form_report_type == 'T')

                        {

                        

                            $my_sql1 = "insert into $mycalctbl(branch_code,level_code,level_name,variable_code,main_ac_code,main_ac_name,level_ind,opbal,dramt,cramt,clbal)

                                    select '$branch_code',a.account_type_code,c.code_desc,'',a.main_ac_code,a.main_ac_desc,'1',sum(ifnull(b.amount_dr,0.00)-ifnull(b.amount_cr,0.00)), 0, 0, 0 

                                    from code_master c, account_master a 

                                    left join account_balance b on b.branch_code = '$branch_code' and b.fin_year = '$finyr' and b.main_ac_code = a.main_ac_code and b.record_code = '01'

                                    where a.account_type_code = c.code_code and c.type_code = '011' 						 

                                    group by '$branch_code',a.account_type_code,c.code_desc,a.main_ac_code,a.main_ac_desc 

                                    union all 

                                    select '$branch_code',c.account_type_code,d.code_desc,'',a.main_ac_code,c.main_ac_desc,'2',sum(if(a.dr_cr_ind ='D',a.net_amount,(0-a.net_amount))), 0, 0, 0

                                    from ledger_trans_dtl a, ledger_trans_hdr b, account_master c, code_master d 

                                    where a.main_ac_code = c.main_ac_code

                                    and c.account_type_code = d.code_code and d.type_code = '011' 						 

                                    and a.ref_ledger_serial_no = b.serial_no

                                    and b.branch_code like '$branch_code'

                                    and b.doc_date between '$opsdate' and '$opedate' 

                                    and b.status_code          = 'C' 

                                    group by '$branch_code',c.account_type_code,a.main_ac_code,c.main_ac_desc

                                    union all 

                                    select '$branch_code',c.account_type_code,d.code_desc,'',a.main_ac_code,c.main_ac_desc,'3',0,sum(if(a.dr_cr_ind ='D',a.net_amount,0)), sum(if(a.dr_cr_ind = 'C',a.net_amount,0)), 0

                                    from ledger_trans_dtl a, ledger_trans_hdr b, account_master c, code_master d 

                                    where a.main_ac_code = c.main_ac_code

                                    and c.account_type_code = d.code_code and d.type_code = '011'

                                    and a.ref_ledger_serial_no = b.serial_no

                                    and b.branch_code like '$branch_code'

                                    and b.doc_date between '$start_date_ymd' and '$end_date_ymd' 

                                    and b.status_code = 'C' 

                                    group by '$branch_code',c.account_type_code,a.main_ac_code,c.main_ac_desc ";

                            $this->db->query($my_sql1) ;

                            

                            $my_sql2 = "insert into $mytable(branch_code,level_code,level_name,variable_code,main_ac_code,main_ac_name,opbal,dramt,cramt,clbal)

                                        select branch_code,level_code,level_name,variable_code,main_ac_code,main_ac_name,sum(opbal), sum(dramt), sum(cramt), sum(opbal+dramt-cramt)

                                            from $mycalctbl

                                            group by branch_code,level_code,level_name,variable_code,main_ac_code,main_ac_name " ;

                            $this->db->query($my_sql2) ;

                        }

                        //------ Account Code-wise 

                        else if ($form_report_type == 'C')

                        {

                        

                            $my_sql1 = "insert into $mycalctbl(branch_code,level_code,level_name,variable_code,main_ac_code,main_ac_name,level_ind,opbal,dramt,cramt,clbal)

                                    select '$branch_code','','','',a.main_ac_code,a.main_ac_desc,'1',sum(ifnull(b.amount_dr,0.00)-ifnull(b.amount_cr,0.00)), 0, 0, 0 

                                    from account_master a 

                                    left join account_balance b on b.branch_code = '$branch_code' and b.fin_year = '$finyr' and b.main_ac_code = a.main_ac_code and b.record_code = '01'

                                    group by '$branch_code',a.main_ac_code,a.main_ac_desc 

                                    union all 

                                    select '$branch_code','','','',a.main_ac_code,c.main_ac_desc,'2',sum(if(a.dr_cr_ind ='D',a.net_amount,(0-a.net_amount))), 0, 0, 0

                                    from ledger_trans_dtl a, ledger_trans_hdr b, account_master c

                                    where a.main_ac_code = c.main_ac_code

                                    and a.ref_ledger_serial_no = b.serial_no

                                    and b.branch_code like '$branch_code'

                                    and b.doc_date between '$opsdate' and '$opedate' 

                                    and b.status_code = 'C' 

                                    group by '$branch_code',a.main_ac_code,c.main_ac_desc

                                    union all 

                                    select '$branch_code','','','',a.main_ac_code,c.main_ac_desc,'3',0,sum(if(a.dr_cr_ind ='D',a.net_amount,0)), sum(if(a.dr_cr_ind = 'C',a.net_amount,0)), 0

                                    from ledger_trans_dtl a, ledger_trans_hdr b, account_master c

                                    where a.main_ac_code = c.main_ac_code

                                    and a.ref_ledger_serial_no = b.serial_no

                                    and b.branch_code like '$branch_code'

                                    and b.doc_date between '$start_date_ymd' and '$end_date_ymd' 

                                    and b.status_code = 'C' 

                                    group by '$branch_code',a.main_ac_code,c.main_ac_desc ";

                            $this->db->query($my_sql1) ;

                            

                            $my_sql2 = "insert into $mytable(branch_code,level_code,level_name,variable_code,main_ac_code,main_ac_name,opbal,dramt,cramt,clbal)

                                        select branch_code,level_code,level_name,variable_code,main_ac_code,main_ac_name,sum(opbal), sum(dramt), sum(cramt), sum(opbal+dramt-cramt)

                                        from $mycalctbl

                                        group by branch_code,level_code,level_name,variable_code,main_ac_code,main_ac_name " ;

                            $this->db->query($my_sql2) ;

                        }

        

                        if($report_otp == 'D') {

        

                            $report_desc    = "TRIAL BALANCE" ;

                            if ($form_report_type   == 'G') { $order_by_clause = 'order by level_code, main_ac_code' ; } else if ($form_report_type == 'T') { $order_by_clause = 'order by level_code, main_ac_code' ; } else { $order_by_clause = 'order by main_ac_code' ; }

                            if ($report_option == 'M') { $where_clause    = 'where opbal != 0 or dramt != 0 or cramt != 0 or clbal != 0' ; } else { $where_clause = '' ; }

                        

                        } else if($report_otp == 'G' && $form_report_type == 'G') {

                            $report_desc    = "TRIAL BALANCE (Segregated)" ;

                            if ($form_report_type   == 'G') { $order_by_clause = 'order by level_code, variable_code, main_ac_code' ; } else if ($form_report_type == 'T') { $order_by_clause = 'order by level_code, variable_code, main_ac_code' ; } else { $order_by_clause = 'order by main_ac_code' ; }

                            if ($report_option == 'M') { $where_clause    = 'where opbal != 0 or dramt != 0 or cramt != 0 or clbal != 0' ; } else { $where_clause = '' ; }

                        }

                        if($report_otp == 'S') {

                            session()->setFlashdata('message', 'No Records Found !!');

                            return redirect()->to($this->requested_url());

                        }



                    break;



                    case 'Y' : 



                        $lstartdt_qry     = $this->db->query("select date_sub('$start_date_ymd', interval 1 year) lsdate ")->getRowarray() ;

                        $lenddt_qry       = $this->db->query("select date_sub('$end_date_ymd',   interval 1 year) ledate ")->getRowarray() ;

                        $lstart_date_ymd  = $lstartdt_qry['lsdate'] ;

                        $lend_date_ymd    = $lenddt_qry['ledate'] ;

                        

                        $lastfinyr        = get_fin_year(date_conv($lstart_date_ymd)) ;

                        $lopsyymm         = substr($lastfinyr,0,4).'04' ;

                        $lopsdate         = substr($lastfinyr,0,4).'-04-01' ;

                        $lopedt_qry       = $this->db->query("select date_sub('$lstart_date_ymd', interval 1 day) edate ")->getRowarray() ;

                        $lopedate         = $lopedt_qry['edate'] ;

                        $lopeyymm         = substr($lopedate,6,4).substr($lopedate,3,2) ;



                        //------

                        $mycalctbl = $temp_id.'_trial_balance_comp_calc_table';

                        $mytable   = $temp_id.'_trial_balance_comp_table';

                        $this->db->query("drop table IF EXISTS $mycalctbl");

                        $this->db->query("drop table IF EXISTS $mytable");

                        $this->db->query("create table $mycalctbl(branch_code varchar(4), level_code varchar(3), level_name varchar(50), main_ac_code varchar(6), main_ac_name varchar(50), level_ind varchar(1), opbal double(15,2), dramt double(15,2), cramt double(15,2), clbal double(15,2), lastclbal double(15,2))") ;

                        $this->db->query("create table $mytable  (branch_code varchar(4), level_code varchar(3), level_name varchar(50), main_ac_code varchar(6), main_ac_name varchar(50), opbal double(15,2), dramt double(15,2), cramt double(15,2), clbal double(15,2), lastclbal double(15,2))") ;

                        

                        //------ Account Group-wise 

                        if ($form_report_type == 'G')

                        {

                            $my_sql1 = "insert into $mycalctbl(branch_code,level_code,level_name,main_ac_code,main_ac_name,level_ind,opbal,dramt,cramt,clbal,lastclbal)

                                    select '$branch_code',a.account_group_code,c.code_desc,a.main_ac_code,a.main_ac_desc,'1',sum(ifnull(b.amount_dr,0.00)-ifnull(b.amount_cr,0.00)), 0, 0, 0, 0 

                                    from code_master c, account_master a 

                                    left join account_balance b on b.branch_code = '$branch_code' and b.fin_year = '$finyr' and b.main_ac_code = a.main_ac_code and b.record_code = '01'

                                    where a.account_group_code = c.code_code and c.type_code = '023' 						 

                                    group by '$branch_code',a.account_group_code,c.code_desc,a.main_ac_code,a.main_ac_desc 

                                    union all 

                                    select '$branch_code',c.account_group_code,d.code_desc,a.main_ac_code,c.main_ac_desc,'2',sum(if(a.dr_cr_ind ='D',a.net_amount,(0-a.net_amount))), 0, 0, 0, 0

                                    from ledger_trans_dtl a, ledger_trans_hdr b, account_master c, code_master d 

                                    where a.main_ac_code = c.main_ac_code

                                    and c.account_group_code = d.code_code and d.type_code = '023' 						 

                                    and a.ref_ledger_serial_no = b.serial_no

                                    and b.branch_code like '$branch_code'

                                    and b.doc_date between '$opsdate' and '$opedate' 

                                    and b.status_code = 'C'

                                    AND a.narration NOT LIKE '%TRANSFER TO PROFIT AND LOSS ACCOUNT%'

                                    AND a.narration NOT LIKE '%TR TO PROFIT AND LOSS ACCOUNT%'

                                    AND a.narration NOT LIKE '%TRANSFER TO PL %'

                                    group by '$branch_code',c.account_group_code,a.main_ac_code,c.main_ac_desc

                                    union all 

                                    select '$branch_code',c.account_group_code,d.code_desc,a.main_ac_code,c.main_ac_desc,'3',0,sum(if(a.dr_cr_ind ='D',a.net_amount,0)), sum(if(a.dr_cr_ind = 'C',a.net_amount,0)), 0, 0

                                    from ledger_trans_dtl a, ledger_trans_hdr b, account_master c, code_master d 

                                    where a.main_ac_code = c.main_ac_code

                                    and c.account_group_code = d.code_code and d.type_code = '023' 						 

                                    and a.ref_ledger_serial_no = b.serial_no

                                    and b.branch_code like '$branch_code'

                                    and b.doc_date between '$start_date_ymd' and '$end_date_ymd' 

                                    and b.status_code = 'C' 

                                    AND a.narration NOT LIKE '%TRANSFER TO PROFIT AND LOSS ACCOUNT%'

                                    AND a.narration NOT LIKE '%TR TO PROFIT AND LOSS ACCOUNT%'

                                    AND a.narration NOT LIKE '%TRANSFER TO PL %'

                                    group by '$branch_code',c.account_group_code,a.main_ac_code,c.main_ac_desc 

                                    union all 

                                    select '$branch_code',a.account_group_code,c.code_desc,a.main_ac_code,a.main_ac_desc,'1', 0, 0, 0, 0, sum(ifnull(b.amount_dr,0.00)-ifnull(b.amount_cr,0.00)) 

                                    from code_master c, account_master a 

                                    left join account_balance b on b.branch_code = '$branch_code' and b.fin_year = '$lastfinyr' and b.main_ac_code = a.main_ac_code and b.record_code = '01'

                                    where a.account_group_code = c.code_code and c.type_code = '023' 						 

                                    group by '$branch_code',a.account_group_code,c.code_desc,a.main_ac_code,a.main_ac_desc 

                                    union all 

                                    select '$branch_code',c.account_group_code,d.code_desc,a.main_ac_code,c.main_ac_desc,'2', 0, 0, 0, 0, sum(if(a.dr_cr_ind ='D',a.net_amount,(0-a.net_amount)))

                                    from ledger_trans_dtl a, ledger_trans_hdr b, account_master c, code_master d 

                                    where a.main_ac_code = c.main_ac_code

                                    and c.account_group_code = d.code_code and d.type_code = '023' 						 

                                    and a.ref_ledger_serial_no = b.serial_no

                                    and b.branch_code like '$branch_code'

                                    and b.doc_date between '$lopsdate' and '$lopedate' 

                                    and b.status_code = 'C' 

                                    AND a.narration NOT LIKE '%TRANSFER TO PROFIT AND LOSS ACCOUNT%'

                                    AND a.narration NOT LIKE '%TR TO PROFIT AND LOSS ACCOUNT%'

                                    AND a.narration NOT LIKE '%TRANSFER TO PL %'

                                    group by '$branch_code',c.account_group_code,a.main_ac_code,c.main_ac_desc

                                    union all 

                                    select '$branch_code',c.account_group_code,d.code_desc,a.main_ac_code,c.main_ac_desc,'3', 0, 0, 0, 0, sum(if(a.dr_cr_ind ='D',a.net_amount,(0-a.net_amount)))

                                    from ledger_trans_dtl a, ledger_trans_hdr b, account_master c, code_master d 

                                    where a.main_ac_code = c.main_ac_code

                                    and c.account_group_code = d.code_code and d.type_code = '023' 						 

                                    and a.ref_ledger_serial_no = b.serial_no

                                    and b.branch_code like '$branch_code'

                                    and b.doc_date between '$lstart_date_ymd' and '$lend_date_ymd' 

                                    and b.status_code = 'C' 

                                    AND a.narration NOT LIKE '%TRANSFER TO PROFIT AND LOSS ACCOUNT%'

                                    AND a.narration NOT LIKE '%TR TO PROFIT AND LOSS ACCOUNT%'

                                    AND a.narration NOT LIKE '%TRANSFER TO PL %'

                                    group by '$branch_code',c.account_group_code,a.main_ac_code,c.main_ac_desc 

                                    ";

                            $this->db->query($my_sql1) ;

                            

                            $my_sql2 = "insert into $mytable(branch_code,level_code,level_name,main_ac_code,main_ac_name,opbal,dramt,cramt,clbal,lastclbal)

                                    select branch_code,level_code,level_name,main_ac_code,main_ac_name,sum(opbal), sum(dramt), sum(cramt), sum(opbal+dramt-cramt), sum(lastclbal)

                                    from $mycalctbl

                                    group by branch_code,level_code,level_name,main_ac_code,main_ac_name " ;

                            $this->db->query($my_sql2) ;

                        }

                        //------ Account Type-wise 

                        else if ($form_report_type == 'T')

                        {

                            $my_sql1 = "insert into $mycalctbl(branch_code,level_code,level_name,main_ac_code,main_ac_name,level_ind,opbal,dramt,cramt,clbal,lastclbal)

                                    select '$branch_code',a.account_type_code,c.code_desc,a.main_ac_code,a.main_ac_desc,'1',sum(ifnull(b.amount_dr,0.00)-ifnull(b.amount_cr,0.00)), 0, 0, 0, 0 

                                    from code_master c, account_master a 

                                    left join account_balance b on b.branch_code = '$branch_code' and b.fin_year = '$finyr' and b.main_ac_code = a.main_ac_code and b.record_code = '01'

                                    where a.account_type_code = c.code_code and c.type_code = '011' 						 

                                    group by '$branch_code',a.account_type_code,c.code_desc,a.main_ac_code,a.main_ac_desc 

                                    union all 

                                    select '$branch_code',c.account_type_code,d.code_desc,a.main_ac_code,c.main_ac_desc,'2',sum(if(a.dr_cr_ind ='D',a.net_amount,(0-a.net_amount))), 0, 0, 0, 0

                                    from ledger_trans_dtl a, ledger_trans_hdr b, account_master c, code_master d 

                                    where a.main_ac_code         = c.main_ac_code

                                    and c.account_type_code    = d.code_code and d.type_code = '011' 						 

                                    and a.ref_ledger_serial_no = b.serial_no

                                    and b.branch_code       like '$branch_code'

                                    and b.doc_date       between '$opsdate' and '$opedate' 

                                    and b.status_code          = 'C' 

                                    AND a.narration NOT LIKE '%TRANSFER TO PROFIT AND LOSS ACCOUNT%'

                                    AND a.narration NOT LIKE '%TR TO PROFIT AND LOSS ACCOUNT%'

                                    AND a.narration NOT LIKE '%TRANSFER TO PL %'

                                    group by '$branch_code',c.account_type_code,a.main_ac_code,c.main_ac_desc

                                    union all 

                                    select '$branch_code',c.account_type_code,d.code_desc,a.main_ac_code,c.main_ac_desc,'3',0,sum(if(a.dr_cr_ind ='D',a.net_amount,0)), sum(if(a.dr_cr_ind = 'C',a.net_amount,0)), 0, 0

                                    from ledger_trans_dtl a, ledger_trans_hdr b, account_master c, code_master d 

                                    where a.main_ac_code         = c.main_ac_code

                                    and c.account_type_code    = d.code_code and d.type_code = '011'

                                    and a.ref_ledger_serial_no = b.serial_no

                                    and b.branch_code       like '$branch_code'

                                    and b.doc_date       between '$start_date_ymd' and '$end_date_ymd' 

                                    and b.status_code          = 'C' 

                                    AND a.narration NOT LIKE '%TRANSFER TO PROFIT AND LOSS ACCOUNT%'

                                    AND a.narration NOT LIKE '%TR TO PROFIT AND LOSS ACCOUNT%'

                                    AND a.narration NOT LIKE '%TRANSFER TO PL %'

                                    group by '$branch_code',c.account_type_code,a.main_ac_code,c.main_ac_desc 

                                    union all

                                    select '$branch_code',a.account_type_code,c.code_desc,a.main_ac_code,a.main_ac_desc,'1', 0, 0, 0, 0, sum(ifnull(b.amount_dr,0.00)-ifnull(b.amount_cr,0.00)) 

                                    from code_master c, account_master a 

                                    left join account_balance b on b.branch_code = '$branch_code' and b.fin_year = '$lastfinyr' and b.main_ac_code = a.main_ac_code and b.record_code = '01'

                                    where a.account_type_code = c.code_code and c.type_code = '011' 						 

                                    group by '$branch_code',a.account_type_code,c.code_desc,a.main_ac_code,a.main_ac_desc 

                                    union all 

                                    select '$branch_code',c.account_type_code,d.code_desc,a.main_ac_code,c.main_ac_desc,'2', 0, 0, 0, 0, sum(if(a.dr_cr_ind ='D',a.net_amount,(0-a.net_amount)))

                                    from ledger_trans_dtl a, ledger_trans_hdr b, account_master c, code_master d 

                                    where a.main_ac_code         = c.main_ac_code

                                    and c.account_type_code    = d.code_code and d.type_code = '011' 						 

                                    and a.ref_ledger_serial_no = b.serial_no

                                    and b.branch_code       like '$branch_code'

                                    and b.doc_date       between '$lopsdate' and '$lopedate' 

                                    and b.status_code          = 'C' 

                                    AND a.narration NOT LIKE '%TRANSFER TO PROFIT AND LOSS ACCOUNT%'

                                    AND a.narration NOT LIKE '%TR TO PROFIT AND LOSS ACCOUNT%'

                                    AND a.narration NOT LIKE '%TRANSFER TO PL %'

                                    group by '$branch_code',c.account_type_code,a.main_ac_code,c.main_ac_desc

                                    union all 

                                    select '$branch_code',c.account_type_code,d.code_desc,a.main_ac_code,c.main_ac_desc,'3', 0, 0, 0, 0, sum(if(a.dr_cr_ind ='D',a.net_amount,(0-a.net_amount)))

                                    from ledger_trans_dtl a, ledger_trans_hdr b, account_master c, code_master d 

                                    where a.main_ac_code         = c.main_ac_code

                                    and c.account_type_code    = d.code_code and d.type_code = '011' 						 

                                    and a.ref_ledger_serial_no = b.serial_no

                                    and b.branch_code       like '$branch_code'

                                    and b.doc_date       between '$lstart_date_ymd' and '$lend_date_ymd' 

                                    and b.status_code          = 'C' 

                                    AND a.narration NOT LIKE '%TRANSFER TO PROFIT AND LOSS ACCOUNT%'

                                    AND a.narration NOT LIKE '%TR TO PROFIT AND LOSS ACCOUNT%'

                                    AND a.narration NOT LIKE '%TRANSFER TO PL %'

                                    group by '$branch_code',c.account_type_code,a.main_ac_code,c.main_ac_desc ";

                            $this->db->query($my_sql1) ;

                            

                            $my_sql2 = "insert into $mytable(branch_code,level_code,level_name,main_ac_code,main_ac_name,opbal,dramt,cramt,clbal,lastclbal)

                                        select branch_code,level_code,level_name,main_ac_code,main_ac_name,sum(opbal), sum(dramt), sum(cramt), sum(opbal+dramt-cramt), sum(lastclbal)

                                        from $mycalctbl

                                        group by branch_code,level_code,level_name,main_ac_code,main_ac_name " ;

                            $this->db->query($my_sql2) ;

                        }

                        //------ Account Code-wise 

                        else if ($form_report_type == 'C')

                        {

                            $my_sql1 = "insert into $mycalctbl(branch_code,level_code,level_name,main_ac_code,main_ac_name,level_ind,opbal,dramt,cramt,clbal,lastclbal)

                                    select '$branch_code','','',a.main_ac_code,a.main_ac_desc,'1',sum(ifnull(b.amount_dr,0.00)-ifnull(b.amount_cr,0.00)), 0, 0, 0, 0 

                                    from account_master a 

                                    left join account_balance b on b.branch_code = '$branch_code' and b.fin_year = '$finyr' and b.main_ac_code = a.main_ac_code and b.record_code = '01'

                                    group by '$branch_code',a.main_ac_code,a.main_ac_desc 

                                    union all 

                                    select '$branch_code','','',a.main_ac_code,c.main_ac_desc,'2',sum(if(a.dr_cr_ind ='D',a.net_amount,(0-a.net_amount))), 0, 0, 0, 0

                                    from ledger_trans_dtl a, ledger_trans_hdr b, account_master c

                                    where a.main_ac_code = c.main_ac_code

                                    and a.ref_ledger_serial_no = b.serial_no

                                    and b.branch_code like '$branch_code'

                                    and b.doc_date between '$opsdate' and '$opedate' 

                                    and b.status_code = 'C' 

                                    AND a.narration NOT LIKE '%TRANSFER TO PROFIT AND LOSS ACCOUNT%'

                                    AND a.narration NOT LIKE '%TR TO PROFIT AND LOSS ACCOUNT%'

                                    AND a.narration NOT LIKE '%TRANSFER TO PL %'

                                    group by '$branch_code',a.main_ac_code,c.main_ac_desc

                                    union all 

                                    select '$branch_code','','',a.main_ac_code,c.main_ac_desc,'3',0,sum(if(a.dr_cr_ind ='D',a.net_amount,0)), sum(if(a.dr_cr_ind = 'C',a.net_amount,0)), 0, 0

                                    from ledger_trans_dtl a, ledger_trans_hdr b, account_master c

                                    where a.main_ac_code = c.main_ac_code

                                    and a.ref_ledger_serial_no = b.serial_no

                                    and b.branch_code like '$branch_code'

                                    and b.doc_date between '$start_date_ymd' and '$end_date_ymd' 

                                    and b.status_code = 'C' 

                                    AND a.narration NOT LIKE '%TRANSFER TO PROFIT AND LOSS ACCOUNT%'

                                    AND a.narration NOT LIKE '%TR TO PROFIT AND LOSS ACCOUNT%'

                                    AND a.narration NOT LIKE '%TRANSFER TO PL %'

                                    group by '$branch_code',a.main_ac_code,c.main_ac_desc 

                                    union all 



                                    select '$branch_code','','',a.main_ac_code,a.main_ac_desc,'1', 0, 0, 0, 0, sum(ifnull(b.amount_dr,0.00)-ifnull(b.amount_cr,0.00)) 

                                    from account_master a 

                                    left join account_balance b on b.branch_code = '$branch_code' and b.fin_year = '$lastfinyr' and b.main_ac_code = a.main_ac_code and b.record_code = '01'

                                    group by '$branch_code',a.main_ac_code,a.main_ac_desc 

                                    union all 

                                    select '$branch_code','','',a.main_ac_code,c.main_ac_desc,'2', 0, 0, 0, 0, sum(if(a.dr_cr_ind ='D',a.net_amount,(0-a.net_amount)))

                                    from ledger_trans_dtl a, ledger_trans_hdr b, account_master c 

                                    where a.main_ac_code = c.main_ac_code

                                    and a.ref_ledger_serial_no = b.serial_no

                                    and b.branch_code like '$branch_code'

                                    and b.doc_date between '$lopsdate' and '$lopedate' 

                                    and b.status_code = 'C' 

                                    AND a.narration NOT LIKE '%TRANSFER TO PROFIT AND LOSS ACCOUNT%'

                                    AND a.narration NOT LIKE '%TR TO PROFIT AND LOSS ACCOUNT%'

                                    AND a.narration NOT LIKE '%TRANSFER TO PL %'

                                    group by '$branch_code',a.main_ac_code,c.main_ac_desc

                                    union all 

                                    select '$branch_code','','',a.main_ac_code,c.main_ac_desc,'3', 0, 0, 0, 0, sum(if(a.dr_cr_ind ='D',a.net_amount,(0-a.net_amount)))

                                    from ledger_trans_dtl a, ledger_trans_hdr b, account_master c 

                                    where a.main_ac_code = c.main_ac_code

                                    and a.ref_ledger_serial_no = b.serial_no

                                    and b.branch_code like '$branch_code'

                                    and b.doc_date between '$lstart_date_ymd' and '$lend_date_ymd' 

                                    and b.status_code = 'C' 

                                    AND a.narration NOT LIKE '%TRANSFER TO PROFIT AND LOSS ACCOUNT%'

                                    AND a.narration NOT LIKE '%TR TO PROFIT AND LOSS ACCOUNT%'

                                    AND a.narration NOT LIKE '%TRANSFER TO PL %'

                                    group by '$branch_code',a.main_ac_code,c.main_ac_desc

                                    ";

                            $this->db->query($my_sql1) ;

                            //

                            $my_sql2 = "insert into $mytable(branch_code,level_code,level_name,main_ac_code,main_ac_name,opbal,dramt,cramt,clbal,lastclbal)

                                    select branch_code,level_code,level_name,main_ac_code,main_ac_name,sum(opbal), sum(dramt), sum(cramt), sum(opbal+dramt-cramt), sum(lastclbal)

                                    from $mycalctbl

                                    group by branch_code,level_code,level_name,main_ac_code,main_ac_name " ;

                            $this->db->query($my_sql2) ;

                        }



                        if ($report_option == 'M') { $where_clause    = 'where opbal != 0 or dramt != 0 or cramt != 0 or clbal != 0 or lastclbal != 0' ; } else { $where_clause = '' ; }

                        if ($form_report_type == 'G') { $report_type_desc = 'A/C GROUP-WISE' ; $order_by_clause = 'order by level_code, main_ac_code' ; } 

                        if ($form_report_type == 'T') { $report_type_desc = 'A/C TYPE-WISE'  ; $order_by_clause = 'order by level_code, main_ac_code' ; } 

                        if ($form_report_type == 'C') { $report_type_desc = 'A/C CODE-WISE'  ; $order_by_clause = 'order by main_ac_code'             ; }



                        $report_desc    = "TRIAL BALANCE (COMPARATIVE) : ".$report_type_desc." : ".$start_date.' TO '.$end_date ;

                    break;

                }

                $trial_sql  = "select * from $mytable ".$where_clause.' '.$order_by_clause ; 

                $trial_qry  = $this->db->query($trial_sql)->getResultArray() ;

                $trial_cnt  = count($trial_qry);



                if(empty($trial_qry)) {

                    session()->setFlashdata('message', 'No Records Found !!');

                    return redirect()->to($this->requested_url());

                }



                $params = [

                    "report_desc" => $report_desc,

                    "branch_code" => $branch_code,

                    "company_code" => $company_code,

                    "period_desc" => $period_desc,

                    "start_date"    => $start_date,

                    "end_date"    => $end_date,

                    "branch_name" => $branch_name,

                    "trial_cnt"   => $trial_cnt,

                    "form_report_type" => $form_report_type,

                    "report_otp" => $report_otp,

                    "comparative_ind" => $comparative_ind,

                    "lend_date_ymd" => $lend_date_ymd,

                    "requested_url" => $requested_url,

                ];



                if ($output_type == 'Pdf') {

                    $report_type = 'Pdf'; $dompdf = new \Dompdf\Dompdf(); 

                    $reportHTML = view("pages/Finance/trial_balance", compact("trial_qry", "params", 'report_type', 'showActionBtns'));

                    $dompdf->loadHtml($reportHTML);

                    $dompdf->setPaper('A4', 'landscape'); // portrait

                    $dompdf->render(); 

                    $dompdf->stream('abc.pdf', array('Attachment'=>0)); exit;

                } else if ($output_type == 'Excel') {

                    if($params['comparative_ind'] == 'N') {

                        if($params['report_otp'] == 'D') {

                            $fileName = 'Trial-Balance-'.date('d-m-Y').'.xlsx';  

                            $spreadsheet = new Spreadsheet();

                            $sheet = $spreadsheet->getActiveSheet();

                            $rows = 1;



                            $headings = ['Code', 'Description', 'Opening', 'Debit', 'Credit', 'Closing'];

                            $column = 'A'; $rows++;



                            foreach ($headings as $heading) {

                                $cell = $column . $rows;

                                $sheet->setCellValue($cell, $heading); 



                                $style = $sheet->getStyle($cell);

                                $style->getFont()->setBold(true);

                                $style->getAlignment()->setHorizontal(Alignment::HORIZONTAL_CENTER);

                                $style->getFill()->setFillType(Fill::FILL_SOLID)->getStartColor()->setRGB('c8d5ef');

                                $style->getBorders()->getAllBorders()->setBorderStyle(\PhpOffice\PhpSpreadsheet\Style\Border::BORDER_THIN); // Add borders

                                ++$column; 

                            } $rows++;



                            $tbilamt = 0; 

                            $tcolamt = 0; 

                            $tbalamt = 0; 

                            $rowcnt     = 1 ;

                            $report_row = isset($trial_qry[$rowcnt-1]) ? $trial_qry[$rowcnt-1] : '' ;  

                            $report_cnt = $params['trial_cnt'] ;

                            while ($rowcnt <= $report_cnt) {

                            

                                $bopdramt  = 0; 

                                $bopcramt  = 0; 

                                $bptdramt  = 0; 

                                $bptcramt  = 0; 

                                $bcldramt  = 0; 

                                $bclcramt  = 0; 

                                $topdramt  = 0;

                                $topcramt  = 0;

                                $tptdramt  = 0;

                                $tptcramt  = 0;

                                $tcldramt  = 0;

                                $tclcramt  = 0;

                                $plevelind = 'Y' ;

                                $plevelcd  = $report_row['level_code'] ;  

                                $plevelnm  = $report_row['level_name'] ;  

                                while($plevelcd == $report_row['level_code'] && $rowcnt <= $report_cnt) {

                                    if($plevelind == 'Y' && $params['form_report_type'] != 'C') {

                                        $sheet->setCellValue('A' . $rows, '('.$plevelcd.')');

                                        $sheet->setCellValue('B' . $rows, $plevelnm);



                                        $plevelind = 'N' ; 



                                        $style = $sheet->getStyle('A' . $rows . ':F' . $rows);

                                        $style->getFont()->setBold(true);

                                        $style->getAlignment()->setHorizontal(Alignment::HORIZONTAL_LEFT);

                                        $style->getBorders()->getAllBorders()->setBorderStyle(\PhpOffice\PhpSpreadsheet\Style\Border::BORDER_THIN);

                                        $sheet->mergeCells('B' . $rows . ':F' . $rows);

                                        $rows++;

                                    }

                                    $sheet->setCellValue('A' . $rows, $report_row['main_ac_code']);

                                    $sheet->setCellValue('B' . $rows, $report_row['main_ac_name']);

                                    $sheet->setCellValue('C' . $rows, (($report_row['opbal'] != 0) ? number_format(abs($report_row['opbal']),2,'.','') : '--' ). ' ' . (($report_row['opbal'] <  0) ? 'CR' : ''));

                                    $sheet->setCellValue('D' . $rows, ($report_row['dramt'] != 0) ? number_format(abs($report_row['dramt']),2,'.','') : '');

                                    $sheet->setCellValue('E' . $rows, ($report_row['cramt'] != 0) ? number_format(abs($report_row['cramt']),2,'.','') : '');

                                    $sheet->setCellValue('F' . $rows, (($report_row['clbal'] != 0) ? number_format(abs($report_row['clbal']),2,'.','') : '') . ' ' . (($report_row['clbal'] <  0) ? 'CR' : ''));

                            

                                    $bopdramt += ($report_row['opbal'] >= 0) ? $report_row['opbal'] : 0 ; 

                                    $bopcramt += ($report_row['opbal'] <  0) ? $report_row['opbal'] : 0 ; 

                                    $bptdramt += ($report_row['dramt']) ;

                                    $bptcramt += ($report_row['cramt']) ;

                                    $bcldramt += ($report_row['clbal'] >= 0) ? $report_row['clbal'] : 0 ; 

                                    $bclcramt += ($report_row['clbal'] <  0) ? $report_row['clbal'] : 0 ; 

                                    

                                    $report_row = ($rowcnt < $report_cnt) ? $trial_qry[$rowcnt] : $report_row;   

                                    $rowcnt = $rowcnt + 1 ;



                                    $style = $sheet->getStyle('A' . $rows . ':F' . $rows);

                                    $style->getBorders()->getAllBorders()->setBorderStyle(\PhpOffice\PhpSpreadsheet\Style\Border::BORDER_THIN); 

                                    $rows++;

                                }

                                if($params['form_report_type'] != 'C') {

                                    $sheet->setCellValue('A' . $rows, 'Total');

                                    $sheet->setCellValue('C' . $rows, number_format(abs($bopdramt),2,'.',''). ' ' . ('DR'));

                                    $sheet->setCellValue('D' . $rows, number_format($bptdramt,2,'.',''));

                                    $sheet->setCellValue('E' . $rows, number_format($bptcramt,2,'.',''));

                                    $sheet->setCellValue('F' . $rows, number_format(abs($bcldramt),2,'.',''). ' ' . ('DR'));



                                    $style = $sheet->getStyle('A' . $rows . ':F' . $rows);

                                    $style->getFont()->setBold(true);

                                    $style->getAlignment()->setHorizontal(Alignment::HORIZONTAL_RIGHT);

                                    $style->getBorders()->getAllBorders()->setBorderStyle(\PhpOffice\PhpSpreadsheet\Style\Border::BORDER_THIN); 

                                    $style->getBorders()->getBottom()->setBorderStyle(\PhpOffice\PhpSpreadsheet\Style\Border::BORDER_MEDIUM); 

                                    $style->getBorders()->getRight()->setBorderStyle(\PhpOffice\PhpSpreadsheet\Style\Border::BORDER_MEDIUM);

                                    $style->getBorders()->getTop()->setBorderStyle(\PhpOffice\PhpSpreadsheet\Style\Border::BORDER_MEDIUM);

                                    $style->getFill()->setFillType(Fill::FILL_SOLID)->getStartColor()->setRGB('c8efe3');

                                    $sheet->mergeCells('A' . $rows . ':B' . $rows);

                                    $rows++;



                                    $sheet->setCellValue('C' . $rows, number_format(abs($bopcramt),2,'.',''). ' ' . ('CR'));

                                    $sheet->setCellValue('D' . $rows, '');

                                    $sheet->setCellValue('E' . $rows, '');

                                    $sheet->setCellValue('F' . $rows, number_format(abs($bclcramt),2,'.',''). ' ' . ('CR'));



                                    $style = $sheet->getStyle('A' . $rows . ':F' . $rows);

                                    $style->getFont()->setBold(true);

                                    $style->getAlignment()->setHorizontal(Alignment::HORIZONTAL_RIGHT);

                                    $style->getBorders()->getAllBorders()->setBorderStyle(\PhpOffice\PhpSpreadsheet\Style\Border::BORDER_THIN); 

                                    $style->getBorders()->getBottom()->setBorderStyle(\PhpOffice\PhpSpreadsheet\Style\Border::BORDER_MEDIUM); 

                                    $style->getBorders()->getRight()->setBorderStyle(\PhpOffice\PhpSpreadsheet\Style\Border::BORDER_MEDIUM);

                                    $style->getBorders()->getTop()->setBorderStyle(\PhpOffice\PhpSpreadsheet\Style\Border::BORDER_MEDIUM);

                                    $style->getFill()->setFillType(Fill::FILL_SOLID)->getStartColor()->setRGB('c8efe3');

                                    $sheet->mergeCells('A' . $rows . ':B' . $rows);

                                    $rows++;

                                }

                                $topdramt += $bopdramt ;

                                $topcramt += $bopcramt ;

                                $tptdramt += $bptdramt ;

                                $tptcramt += $bptcramt ;

                                $tcldramt += $bcldramt ;

                                $tclcramt += $bclcramt ;

                            }

                            $sheet->setCellValue('A' . $rows, 'Grand Total');

                            $sheet->setCellValue('C' . $rows, number_format(abs($topdramt),2,'.',''). ' ' . ('DR'));

                            $sheet->setCellValue('D' . $rows, number_format($tptdramt,2,'.',''));

                            $sheet->setCellValue('E' . $rows, number_format($tptcramt,2,'.',''));

                            $sheet->setCellValue('F' . $rows, number_format(abs($tcldramt),2,'.',''). ' ' . ('DR'));



                            $style = $sheet->getStyle('A' . $rows . ':F' . $rows);

                            $style->getFont()->setBold(true);

                            $style->getAlignment()->setHorizontal(Alignment::HORIZONTAL_RIGHT);

                            $style->getBorders()->getAllBorders()->setBorderStyle(\PhpOffice\PhpSpreadsheet\Style\Border::BORDER_THIN); 

                            $style->getBorders()->getBottom()->setBorderStyle(\PhpOffice\PhpSpreadsheet\Style\Border::BORDER_MEDIUM); 

                            $style->getBorders()->getRight()->setBorderStyle(\PhpOffice\PhpSpreadsheet\Style\Border::BORDER_MEDIUM);

                            $style->getBorders()->getTop()->setBorderStyle(\PhpOffice\PhpSpreadsheet\Style\Border::BORDER_MEDIUM);

                            $style->getFill()->setFillType(Fill::FILL_SOLID)->getStartColor()->setRGB('ffe93a');

                            $sheet->mergeCells('A' . $rows . ':B' . $rows);

                            $rows++;



                            $sheet->setCellValue('C' . $rows, number_format(abs($topcramt),2,'.',''). ' ' . ('CR'));

                            $sheet->setCellValue('D' . $rows, '');

                            $sheet->setCellValue('E' . $rows, '');

                            $sheet->setCellValue('F' . $rows, number_format(abs($tclcramt),2,'.',''). ' ' . ('CR'));



                            $style = $sheet->getStyle('A' . $rows . ':F' . $rows);

                            $style->getFont()->setBold(true);

                            $style->getAlignment()->setHorizontal(Alignment::HORIZONTAL_RIGHT);

                            $style->getBorders()->getAllBorders()->setBorderStyle(\PhpOffice\PhpSpreadsheet\Style\Border::BORDER_THIN); 

                            $style->getBorders()->getBottom()->setBorderStyle(\PhpOffice\PhpSpreadsheet\Style\Border::BORDER_MEDIUM); 

                            $style->getBorders()->getRight()->setBorderStyle(\PhpOffice\PhpSpreadsheet\Style\Border::BORDER_MEDIUM);

                            $style->getBorders()->getTop()->setBorderStyle(\PhpOffice\PhpSpreadsheet\Style\Border::BORDER_MEDIUM);

                            $style->getFill()->setFillType(Fill::FILL_SOLID)->getStartColor()->setRGB('ffe93a');

                            $sheet->mergeCells('A' . $rows . ':B' . $rows);

                            $rows++;



                            $writer = new Xlsx($spreadsheet);

                            $writer->save($fileName);

                            header('Content-Type: application/vnd.ms-excel');

                            header('Content-Disposition: attachment; filename="'.basename($fileName).'"');

                            header('Expires: 0');

                            header('Cache-control: must-revalidate');

                            header('Pragma: public');

                            header('Content-Length:'.filesize($fileName));

                            flush();

                            readfile($fileName); 

                        } else if($params['report_otp'] == 'G' && $params['form_report_type'] == 'G') {



                            $fileName = 'Trial-Balance-Segregated-'.date('d-m-Y').'.xlsx';  

                            $spreadsheet = new Spreadsheet();

                            $sheet = $spreadsheet->getActiveSheet();

                            $rows = 1;



                            $headings = ['', 'Code', 'Description', 'Opening', 'Debit', 'Credit', 'Closing'];

                            $column = 'A'; $rows++;



                            foreach ($headings as $heading) {

                                $cell = $column . $rows;

                                $sheet->setCellValue($cell, $heading); 



                                $style = $sheet->getStyle($cell);

                                $style->getFont()->setBold(true);

                                $style->getAlignment()->setHorizontal(Alignment::HORIZONTAL_CENTER);

                                $style->getFill()->setFillType(Fill::FILL_SOLID)->getStartColor()->setRGB('c8d5ef');

                                $style->getBorders()->getAllBorders()->setBorderStyle(\PhpOffice\PhpSpreadsheet\Style\Border::BORDER_THIN); // Add borders

                                ++$column; 

                            } $rows++;



                            $tbilamt = 0; 

                            $tcolamt = 0; 

                            $tbalamt = 0; 

                            $topdramt  = 0 ;

                            $topcramt  = 0 ;

                            $tptdramt  = 0 ;

                            $tptcramt  = 0 ;

                            $tcldramt  = 0 ;

                            $tclcramt  = 0 ;

                            $rowcnt     = 1 ;

                            $report_row =isset($trial_qry[$rowcnt-1]) ? $trial_qry[$rowcnt-1] : '' ; 

                            $report_cnt = $params['trial_cnt'] ;

                            while ($rowcnt <= $report_cnt) {

                                $bopdramt  = 0; 

                                $bopcramt  = 0; 

                                $bptdramt  = 0; 

                                $bptcramt  = 0; 

                                $bcldramt  = 0; 

                                $bclcramt  = 0; 

                                

                                $gbopdramt  = 0;

                                $gbptdramt  = 0;

                                $gbptcramt  = 0;

                                $gbcldramt  = 0;

                                $plevelind = 'Y' ;

                                $plevelcd  = $report_row['level_code'] ;  

                                $plevelnm  = $report_row['level_name'] ;  

                                // $pvariablecd  = $report_row['variable_code'] ;

                                

                                while($plevelcd == $report_row['level_code'] && $report_row['variable_code'] && $rowcnt <= $report_cnt) {

                                    if($plevelind == 'Y' && $params['form_report_type'] != 'C') {

                                        $sheet->setCellValue('A' . $rows, '('.$plevelcd.')');

                                        $sheet->setCellValue('B' . $rows, $plevelnm);



                                        $plevelind = 'N' ; 



                                        $style = $sheet->getStyle('A' . $rows . ':F' . $rows);

                                        $style->getFont()->setBold(true);

                                        $style->getAlignment()->setHorizontal(Alignment::HORIZONTAL_LEFT);

                                        $style->getBorders()->getAllBorders()->setBorderStyle(\PhpOffice\PhpSpreadsheet\Style\Border::BORDER_THIN);

                                        $sheet->mergeCells('B' . $rows . ':F' . $rows);

                                        $rows++;

                                    }

                                    $sheet->setCellValue('A' . $rows, ($report_row['variable_code']=='F') ? 'FIXED' : (($report_row['variable_code']=='V') ? 'VARIABLE' : ''));

                                    $sheet->setCellValue('B' . $rows, $report_row['main_ac_code']);

                                    $sheet->setCellValue('C' . $rows, $report_row['main_ac_name']);

                                    $sheet->setCellValue('D' . $rows, (($report_row['opbal'] != 0) ? number_format(abs($report_row['opbal']),2,'.','') : '--' ). ' ' . (($report_row['opbal'] <  0) ? 'CR' : ''));

                                    $sheet->setCellValue('E' . $rows, ($report_row['dramt'] != 0) ? number_format(abs($report_row['dramt']),2,'.','') : '--');

                                    $sheet->setCellValue('F' . $rows, ($report_row['cramt'] != 0) ? number_format(abs($report_row['cramt']),2,'.','') : '--');

                                    $sheet->setCellValue('G' . $rows, (($report_row['clbal'] != 0) ? number_format(abs($report_row['clbal']),2,'.','') : '--') . ' ' . (($report_row['clbal'] <  0) ? 'CR' : ''));

                            

                                    if($report_row['opbal'] >= 0) {$bopdramt = $bopdramt + $report_row['opbal'] ; } else {$bopcramt = $bopcramt + $report_row['opbal'] ; } 

                                    if($report_row['clbal'] >= 0) {$bcldramt = $bcldramt + $report_row['clbal'] ; } else {$bclcramt = $bclcramt + $report_row['clbal'] ; } 

                                    $bptdramt = $bptdramt + $report_row['dramt'] ;

                                    $bptcramt = $bptcramt + $report_row['cramt'] ;

                                    

                                    $report_row = ($rowcnt < $report_cnt) ? $trial_qry[$rowcnt] : $report_row;   

                                    $rowcnt = $rowcnt + 1 ;



                                    $style = $sheet->getStyle('A' . $rows . ':G' . $rows);

                                    $style->getBorders()->getAllBorders()->setBorderStyle(\PhpOffice\PhpSpreadsheet\Style\Border::BORDER_THIN); 

                                    $rows++;

                                }

                                if($plevelcd == '015') {  

                                    $sheet->setCellValue('A' . $rows, 'Group Total');

                                    $sheet->setCellValue('D' . $rows, number_format(abs($gbopdramt),2,'.',''). ' ' . ('DR'));

                                    $sheet->setCellValue('E' . $rows, number_format($gbptdramt,2,'.',''));

                                    $sheet->setCellValue('F' . $rows, number_format($gbptcramt,2,'.',''));

                                    $sheet->setCellValue('G' . $rows, number_format(abs($gbcldramt),2,'.',''). ' ' . ('DR'));



                                    $style = $sheet->getStyle('A' . $rows . ':G' . $rows);

                                    $style->getFont()->setBold(true);

                                    $style->getAlignment()->setHorizontal(Alignment::HORIZONTAL_RIGHT);

                                    $style->getBorders()->getAllBorders()->setBorderStyle(\PhpOffice\PhpSpreadsheet\Style\Border::BORDER_THIN); 

                                    $style->getBorders()->getBottom()->setBorderStyle(\PhpOffice\PhpSpreadsheet\Style\Border::BORDER_MEDIUM); 

                                    $style->getBorders()->getRight()->setBorderStyle(\PhpOffice\PhpSpreadsheet\Style\Border::BORDER_MEDIUM);

                                    $style->getBorders()->getTop()->setBorderStyle(\PhpOffice\PhpSpreadsheet\Style\Border::BORDER_MEDIUM);

                                    $style->getFill()->setFillType(Fill::FILL_SOLID)->getStartColor()->setRGB('ffe93a');

                                    $sheet->mergeCells('A' . $rows . ':C' . $rows);

                                    $rows++;

                                } if($params['form_report_type'] != 'C') {

                                    $sheet->setCellValue('A' . $rows, 'Total');

                                    $sheet->setCellValue('D' . $rows, number_format(abs($bopdramt),2,'.',''). ' ' . ('DR'));

                                    $sheet->setCellValue('E' . $rows, number_format($bptdramt,2,'.',''));

                                    $sheet->setCellValue('F' . $rows, number_format($bptcramt,2,'.',''));

                                    $sheet->setCellValue('G' . $rows, number_format(abs($bcldramt),2,'.',''). ' ' . ('DR'));



                                    $style = $sheet->getStyle('A' . $rows . ':G' . $rows);

                                    $style->getFont()->setBold(true);

                                    $style->getAlignment()->setHorizontal(Alignment::HORIZONTAL_RIGHT);

                                    $style->getBorders()->getAllBorders()->setBorderStyle(\PhpOffice\PhpSpreadsheet\Style\Border::BORDER_THIN); 

                                    $style->getBorders()->getBottom()->setBorderStyle(\PhpOffice\PhpSpreadsheet\Style\Border::BORDER_MEDIUM); 

                                    $style->getBorders()->getRight()->setBorderStyle(\PhpOffice\PhpSpreadsheet\Style\Border::BORDER_MEDIUM);

                                    $style->getBorders()->getTop()->setBorderStyle(\PhpOffice\PhpSpreadsheet\Style\Border::BORDER_MEDIUM);

                                    $style->getFill()->setFillType(Fill::FILL_SOLID)->getStartColor()->setRGB('c8efe3');

                                    $sheet->mergeCells('A' . $rows . ':C' . $rows);

                                    $rows++;



                                    $sheet->setCellValue('D' . $rows, number_format(abs($bopcramt),2,'.',''). ' ' . ('CR'));

                                    $sheet->setCellValue('E' . $rows, '');

                                    $sheet->setCellValue('F' . $rows, '');

                                    $sheet->setCellValue('G' . $rows, number_format(abs($bclcramt),2,'.',''). ' ' . ('CR'));



                                    $style = $sheet->getStyle('A' . $rows . ':G' . $rows);

                                    $style->getFont()->setBold(true);

                                    $style->getAlignment()->setHorizontal(Alignment::HORIZONTAL_RIGHT);

                                    $style->getBorders()->getAllBorders()->setBorderStyle(\PhpOffice\PhpSpreadsheet\Style\Border::BORDER_THIN); 

                                    $style->getBorders()->getBottom()->setBorderStyle(\PhpOffice\PhpSpreadsheet\Style\Border::BORDER_MEDIUM); 

                                    $style->getBorders()->getRight()->setBorderStyle(\PhpOffice\PhpSpreadsheet\Style\Border::BORDER_MEDIUM);

                                    $style->getBorders()->getTop()->setBorderStyle(\PhpOffice\PhpSpreadsheet\Style\Border::BORDER_MEDIUM);

                                    $style->getFill()->setFillType(Fill::FILL_SOLID)->getStartColor()->setRGB('c8efe3');

                                    $sheet->mergeCells('A' . $rows . ':C' . $rows);

                                    $rows++;

                                }

                                $topdramt = $topdramt + $bopdramt ;

                                $topcramt = $topcramt + $bopcramt ;

                                $tptdramt = $tptdramt + $bptdramt ;

                                $tptcramt = $tptcramt + $bptcramt ;

                                $tcldramt = $tcldramt + $bcldramt ;

                                $tclcramt = $tclcramt + $bclcramt ;

                            }

                            $sheet->setCellValue('A' . $rows, 'Grand Total');

                            $sheet->setCellValue('D' . $rows, number_format(abs($topdramt),2,'.',''). ' ' . ('DR'));

                            $sheet->setCellValue('E' . $rows, number_format($tptdramt,2,'.',''));

                            $sheet->setCellValue('F' . $rows, number_format($tptcramt,2,'.',''));

                            $sheet->setCellValue('G' . $rows, number_format(abs($tcldramt),2,'.',''). ' ' . ('DR'));



                            $style = $sheet->getStyle('A' . $rows . ':G' . $rows);

                            $style->getFont()->setBold(true);

                            $style->getAlignment()->setHorizontal(Alignment::HORIZONTAL_RIGHT);

                            $style->getBorders()->getAllBorders()->setBorderStyle(\PhpOffice\PhpSpreadsheet\Style\Border::BORDER_THIN); 

                            $style->getBorders()->getBottom()->setBorderStyle(\PhpOffice\PhpSpreadsheet\Style\Border::BORDER_MEDIUM); 

                            $style->getBorders()->getRight()->setBorderStyle(\PhpOffice\PhpSpreadsheet\Style\Border::BORDER_MEDIUM);

                            $style->getBorders()->getTop()->setBorderStyle(\PhpOffice\PhpSpreadsheet\Style\Border::BORDER_MEDIUM);

                            $style->getFill()->setFillType(Fill::FILL_SOLID)->getStartColor()->setRGB('ffe93a');

                            $sheet->mergeCells('A' . $rows . ':C' . $rows);

                            $rows++;



                            $sheet->setCellValue('D' . $rows, number_format(abs($topcramt),2,'.',''). ' ' . ('CR'));

                            $sheet->setCellValue('E' . $rows, '');

                            $sheet->setCellValue('F' . $rows, '');

                            $sheet->setCellValue('G' . $rows, number_format(abs($tclcramt),2,'.',''). ' ' . ('CR'));



                            $style = $sheet->getStyle('A' . $rows . ':G' . $rows);

                            $style->getFont()->setBold(true);

                            $style->getAlignment()->setHorizontal(Alignment::HORIZONTAL_RIGHT);

                            $style->getBorders()->getAllBorders()->setBorderStyle(\PhpOffice\PhpSpreadsheet\Style\Border::BORDER_THIN); 

                            $style->getBorders()->getBottom()->setBorderStyle(\PhpOffice\PhpSpreadsheet\Style\Border::BORDER_MEDIUM); 

                            $style->getBorders()->getRight()->setBorderStyle(\PhpOffice\PhpSpreadsheet\Style\Border::BORDER_MEDIUM);

                            $style->getBorders()->getTop()->setBorderStyle(\PhpOffice\PhpSpreadsheet\Style\Border::BORDER_MEDIUM);

                            $style->getFill()->setFillType(Fill::FILL_SOLID)->getStartColor()->setRGB('ffe93a');

                            $sheet->mergeCells('A' . $rows . ':C' . $rows);

                            $rows++;



                            $writer = new Xlsx($spreadsheet);

                            $writer->save($fileName);

                            header('Content-Type: application/vnd.ms-excel');

                            header('Content-Disposition: attachment; filename="'.basename($fileName).'"');

                            header('Expires: 0');

                            header('Cache-control: must-revalidate');

                            header('Pragma: public');

                            header('Content-Length:'.filesize($fileName));

                            flush();

                            readfile($fileName);



                        }

                    } else if($params['comparative_ind'] == 'Y') { 

                        $fileName = 'Trial-Balance-'.date('d-m-Y').'.xlsx';  

                        $spreadsheet = new Spreadsheet();

                        $sheet = $spreadsheet->getActiveSheet();

                        $rows = 1;

                        $start_date = $params['start_date'];

                        $lend_date_ymd = date_conv($params['lend_date_ymd']);



                        $headings = ['Code', 'Description', 'Opening '. ($start_date), 'Debit (this Period)', 'Credit (this Period)', 'Closing ' . ($params['end_date']), '', 'Closing ' . ($lend_date_ymd)];

                        $column = 'A'; $rows++;



                        foreach ($headings as $heading) {

                            $cell = $column . $rows;

                            $sheet->setCellValue($cell, $heading); 



                            $style = $sheet->getStyle($cell);

                            $style->getFont()->setBold(true);

                            $style->getAlignment()->setHorizontal(Alignment::HORIZONTAL_CENTER);

                            $style->getFill()->setFillType(Fill::FILL_SOLID)->getStartColor()->setRGB('c8d5ef');

                            $style->getBorders()->getAllBorders()->setBorderStyle(\PhpOffice\PhpSpreadsheet\Style\Border::BORDER_THIN); // Add borders

                            ++$column; 

                        } $rows++;



                        $topdramt  = 0; 

                        $topcramt  = 0; 

                        $tptdramt  = 0; 

                        $tptcramt  = 0; 

                        $tcldramt  = 0; 

                        $tclcramt  = 0; 

                        $tlcldramt = 0; 

                        $tlclcramt = 0; 

                        $rowcnt     = 1 ;

                        $report_row = isset($trial_qry[$rowcnt-1]) ? $trial_qry[$rowcnt-1] : '' ;   

                        $report_cnt = $params['trial_cnt'] ;

                        while ($rowcnt <= $report_cnt) {

                            $bopdramt  = 0; 

                            $bopcramt  = 0; 

                            $bptdramt  = 0; 

                            $bptcramt  = 0; 

                            $bcldramt  = 0; 

                            $bclcramt  = 0; 

                            $blcldramt = 0; 

                            $blclcramt = 0; 

                            $plevelind = 'Y' ;

                            $plevelcd  = $report_row['level_code'] ;  

                            $plevelnm  = $report_row['level_name'] ;  

                            while($plevelcd == $report_row['level_code'] && $rowcnt <= $report_cnt) {

                                if($plevelind == 'Y' && $params['form_report_type'] != 'C') {

                                    $sheet->setCellValue('A' . $rows, '('.$plevelcd.')'.'--'.$plevelnm);

                                    $sheet->setCellValue('B' . $rows, '');



                                    $plevelind = 'N' ; 



                                    $style = $sheet->getStyle('A' . $rows . ':H' . $rows);

                                    $style->getFont()->setBold(true);

                                    $style->getAlignment()->setHorizontal(Alignment::HORIZONTAL_LEFT);

                                    $style->getBorders()->getAllBorders()->setBorderStyle(\PhpOffice\PhpSpreadsheet\Style\Border::BORDER_THIN);

                                    $sheet->mergeCells('A' . $rows . ':H' . $rows);

                                    $rows++;

                                }

                                $sheet->setCellValue('A' . $rows, $report_row['main_ac_code']);

                                $sheet->setCellValue('B' . $rows, $report_row['main_ac_name']);

                                $sheet->setCellValue('C' . $rows, (($report_row['opbal'] != 0) ? number_format(abs($report_row['opbal']),2,'.','') : '--' ). ' ' . (($report_row['opbal'] <  0) ? 'CR' : ''));

                                $sheet->setCellValue('D' . $rows, ($report_row['dramt'] != 0) ? number_format(abs($report_row['dramt']),2,'.','') : '--');

                                $sheet->setCellValue('E' . $rows, ($report_row['cramt'] != 0) ? number_format(abs($report_row['cramt']),2,'.','') : '--');

                                $sheet->setCellValue('F' . $rows, (($report_row['clbal'] != 0) ? number_format(abs($report_row['clbal']),2,'.','') : '--') . ' ' . (($report_row['clbal'] <  0) ? 'CR' : ''));

                                $sheet->setCellValue('G' . $rows, '');

                                $sheet->setCellValue('H' . $rows, (($report_row['lastclbal'] != 0) ? number_format(abs($report_row['lastclbal']),2,'.','') : '--') . ' ' . (($report_row['lastclbal'] <  0) ? 'CR' : ''));



                                if($report_row['opbal']     >= 0) {$bopdramt  = $bopdramt  + $report_row['opbal']     ; } else {$bopcramt  = $bopcramt  + $report_row['opbal']     ; } 

                                if($report_row['clbal']     >= 0) {$bcldramt  = $bcldramt  + $report_row['clbal']     ; } else {$bclcramt  = $bclcramt  + $report_row['clbal']     ; } 

                                if($report_row['lastclbal'] >= 0) {$blcldramt = $blcldramt + $report_row['lastclbal'] ; } else {$blclcramt = $blclcramt + $report_row['lastclbal'] ; } 

                                $bptdramt = $bptdramt + $report_row['dramt'] ;

                                $bptcramt = $bptcramt + $report_row['cramt'] ;

                                

                                $report_row = ($rowcnt < $report_cnt) ? $trial_qry[$rowcnt] : $report_row;  

                                $rowcnt = $rowcnt + 1 ;



                                $style = $sheet->getStyle('A' . $rows . ':H' . $rows);

                                $style->getBorders()->getAllBorders()->setBorderStyle(\PhpOffice\PhpSpreadsheet\Style\Border::BORDER_THIN); 

                                $rows++;

                            }  

                            if($params['form_report_type'] != 'C') {

                                $sheet->setCellValue('A' . $rows, 'Total');

                                $sheet->setCellValue('C' . $rows, number_format(abs($bopdramt),2,'.',''). ' ' . ('DR'));

                                $sheet->setCellValue('D' . $rows, number_format($bptdramt,2,'.',''));

                                $sheet->setCellValue('E' . $rows, number_format($bptcramt,2,'.',''));

                                $sheet->setCellValue('F' . $rows, number_format(abs($bcldramt),2,'.',''). ' ' . ('DR'));

                                $sheet->setCellValue('G' . $rows, '');

                                $sheet->setCellValue('H' . $rows, number_format(abs($blcldramt),2,'.',''). ' ' . ('DR'));



                                $style = $sheet->getStyle('A' . $rows . ':H' . $rows);

                                $style->getFont()->setBold(true);

                                $style->getAlignment()->setHorizontal(Alignment::HORIZONTAL_RIGHT);

                                $style->getBorders()->getAllBorders()->setBorderStyle(\PhpOffice\PhpSpreadsheet\Style\Border::BORDER_THIN); 

                                $style->getBorders()->getBottom()->setBorderStyle(\PhpOffice\PhpSpreadsheet\Style\Border::BORDER_MEDIUM); 

                                $style->getBorders()->getRight()->setBorderStyle(\PhpOffice\PhpSpreadsheet\Style\Border::BORDER_MEDIUM);

                                $style->getBorders()->getTop()->setBorderStyle(\PhpOffice\PhpSpreadsheet\Style\Border::BORDER_MEDIUM);

                                $style->getFill()->setFillType(Fill::FILL_SOLID)->getStartColor()->setRGB('c8efe3');

                                $sheet->mergeCells('A' . $rows . ':B' . $rows);

                                $rows++;



                                $sheet->setCellValue('C' . $rows, number_format(abs($bopcramt),2,'.',''). ' ' . ('CR'));

                                $sheet->setCellValue('D' . $rows, '');

                                $sheet->setCellValue('E' . $rows, '');

                                $sheet->setCellValue('F' . $rows, number_format(abs($bclcramt),2,'.',''). ' ' . ('CR'));

                                $sheet->setCellValue('G' . $rows, '');

                                $sheet->setCellValue('H' . $rows, number_format(abs($blclcramt),2,'.',''). ' ' . ('CR'));



                                $style = $sheet->getStyle('A' . $rows . ':H' . $rows);

                                $style->getFont()->setBold(true);

                                $style->getAlignment()->setHorizontal(Alignment::HORIZONTAL_RIGHT);

                                $style->getBorders()->getAllBorders()->setBorderStyle(\PhpOffice\PhpSpreadsheet\Style\Border::BORDER_THIN); 

                                $style->getBorders()->getBottom()->setBorderStyle(\PhpOffice\PhpSpreadsheet\Style\Border::BORDER_MEDIUM); 

                                $style->getBorders()->getRight()->setBorderStyle(\PhpOffice\PhpSpreadsheet\Style\Border::BORDER_MEDIUM);

                                $style->getBorders()->getTop()->setBorderStyle(\PhpOffice\PhpSpreadsheet\Style\Border::BORDER_MEDIUM);

                                $style->getFill()->setFillType(Fill::FILL_SOLID)->getStartColor()->setRGB('c8efe3');

                                $sheet->mergeCells('A' . $rows . ':B' . $rows);

                                $rows++;

                            }

                            $topdramt  = $topdramt  + $bopdramt ;

                            $topcramt  = $topcramt  + $bopcramt ;

                            $tptdramt  = $tptdramt  + $bptdramt ;

                            $tptcramt  = $tptcramt  + $bptcramt ;

                            $tcldramt  = $tcldramt  + $bcldramt ;

                            $tclcramt  = $tclcramt  + $bclcramt ;

                            $tlcldramt = $tlcldramt + $blcldramt ;

                            $tlclcramt = $tlclcramt + $blclcramt ;

                        }

                        $sheet->setCellValue('A' . $rows, 'Grand Total');

                        $sheet->setCellValue('C' . $rows, number_format(abs($topdramt),2,'.',''). ' ' . ('DR'));

                        $sheet->setCellValue('D' . $rows, number_format($tptdramt,2,'.',''));

                        $sheet->setCellValue('E' . $rows, number_format($tptcramt,2,'.',''));

                        $sheet->setCellValue('F' . $rows, number_format(abs($tcldramt),2,'.',''). ' ' . ('DR'));

                        $sheet->setCellValue('G' . $rows, '');

                        $sheet->setCellValue('H' . $rows, number_format(abs($tlcldramt),2,'.',''). ' ' . ('DR'));



                        $style = $sheet->getStyle('A' . $rows . ':H' . $rows);

                        $style->getFont()->setBold(true);

                        $style->getAlignment()->setHorizontal(Alignment::HORIZONTAL_RIGHT);

                        $style->getBorders()->getAllBorders()->setBorderStyle(\PhpOffice\PhpSpreadsheet\Style\Border::BORDER_THIN); 

                        $style->getBorders()->getBottom()->setBorderStyle(\PhpOffice\PhpSpreadsheet\Style\Border::BORDER_MEDIUM); 

                        $style->getBorders()->getRight()->setBorderStyle(\PhpOffice\PhpSpreadsheet\Style\Border::BORDER_MEDIUM);

                        $style->getBorders()->getTop()->setBorderStyle(\PhpOffice\PhpSpreadsheet\Style\Border::BORDER_MEDIUM);

                        $style->getFill()->setFillType(Fill::FILL_SOLID)->getStartColor()->setRGB('ffe93a');

                        $sheet->mergeCells('A' . $rows . ':B' . $rows);

                        $rows++;



                        $sheet->setCellValue('C' . $rows, number_format(abs($topcramt),2,'.',''). ' ' . ('CR'));

                        $sheet->setCellValue('D' . $rows, '');

                        $sheet->setCellValue('E' . $rows, '');

                        $sheet->setCellValue('F' . $rows, number_format(abs($tclcramt),2,'.',''). ' ' . ('CR'));

                        $sheet->setCellValue('G' . $rows, '');

                        $sheet->setCellValue('H' . $rows, number_format(abs($tlclcramt),2,'.',''). ' ' . ('CR'));



                        $style = $sheet->getStyle('A' . $rows . ':H' . $rows);

                        $style->getFont()->setBold(true);

                        $style->getAlignment()->setHorizontal(Alignment::HORIZONTAL_RIGHT);

                        $style->getBorders()->getAllBorders()->setBorderStyle(\PhpOffice\PhpSpreadsheet\Style\Border::BORDER_THIN); 

                        $style->getBorders()->getBottom()->setBorderStyle(\PhpOffice\PhpSpreadsheet\Style\Border::BORDER_MEDIUM); 

                        $style->getBorders()->getRight()->setBorderStyle(\PhpOffice\PhpSpreadsheet\Style\Border::BORDER_MEDIUM);

                        $style->getBorders()->getTop()->setBorderStyle(\PhpOffice\PhpSpreadsheet\Style\Border::BORDER_MEDIUM);

                        $style->getFill()->setFillType(Fill::FILL_SOLID)->getStartColor()->setRGB('ffe93a');

                        $sheet->mergeCells('A' . $rows . ':B' . $rows);

                        $rows++;



                        $writer = new Xlsx($spreadsheet);

                        $writer->save($fileName);

                        header('Content-Type: application/vnd.ms-excel');

                        header('Content-Disposition: attachment; filename="'.basename($fileName).'"');

                        header('Expires: 0');

                        header('Cache-control: must-revalidate');

                        header('Pragma: public');

                        header('Content-Length:'.filesize($fileName));

                        flush();

                        readfile($fileName);

                    }

                } else return view("pages/Finance/trial_balance", compact("trial_qry", "params","showActionBtns")); 

            }

        } else {

            $data = [];

            $data = branches(session()->userId);

            $curr_finyr = session()->financialYear;

            $data['curr_fyrsdt'] = '01-04-'.substr($curr_finyr,0,4);

            $data['billfor_ind'] = 'N';



            return view("pages/Finance/trial_balance", compact("data", "displayId")); 

        }

    }



    public function ceo_expenses() {

        $requested_url = session()->requested_end_menu_url;

        $output_type = isset($_REQUEST['output_type']) ? $_REQUEST['output_type'] : '';

        $company_code = session()->user_qry['company_code'];

        $displayId = ['payee_help_id' => '4556', 'exp_help_id' => '4557'];

        $showActionBtns = false;



        if($this->request->getMethod() == "post") {

            if($output_type == 'Report' || $output_type == 'Pdf' || $output_type == 'Excel') {



                $showActionBtns = true;

                $branch_code   = $_REQUEST['branch_code'] ;

                $start_date    = $_REQUEST['start_date'] ;    $start_date_ymd = date_conv($start_date);

                $end_date      = $_REQUEST['end_date'] ;      $end_date_ymd   = date_conv($end_date);

                $report_seq    = $_REQUEST['report_seq'] ;

                $payee_code    = isset($_REQUEST['ceo_code']) ? $_REQUEST['ceo_code'] : '' ;    if(empty($payee_code)) { $payee_code = '%' ; }

                $payee_name    = $_REQUEST['name_desc'] ;    if(empty($payee_name)) { $payee_name = '%' ; }

                $exps_code     = $_REQUEST['exps_code'] ;     if(empty($exps_code))  { $exps_code = '%' ; }



                $period_desc = $start_date.' TO ' .$end_date;

              

                $branch_qry    = $this->db->query("select branch_name from branch_master where branch_code = '$branch_code' ")->getRowArray() ;

                $branch_name   = $branch_qry['branch_name'] ;

              

                $payreg_sql = '';

                if($report_seq == "S"){



                    $report_desc   = 'CEO Expenses - Summary';

                    $payreg_sql = "select a.serial_no, a.doc_date, a.doc_no, a.doc_type, a.daybook_code, b.ceo_code, c.name_desc, b.exps_code, d.exps_desc, sum(b.gross_amount) paid_amount 

                            from ledger_trans_hdr a, ledger_trans_dtl b, mis_name_master c, mis_exps_master d

                            where a.branch_code = 'B001' 

                            and a.doc_date between '$start_date_ymd' and '$end_date_ymd'

                            and a.status_code = 'C' 

                            and a.doc_type = 'PV' 

                            and a.ref_doc_type != 'CB' 

                            and ifnull(b.ceo_code,'%') like '$payee_code' 

                            and c.name_desc like '$payee_name' 

                            and a.serial_no = b.ref_ledger_serial_no 

                            and b.ceo_code = c.ceo_code 

                            and b.exps_code = d.exps_code 

                            and b.dr_cr_ind = 'D' 

                            group by b.ceo_code, b.exps_code

                            order by c.name_desc,a.doc_date,a.serial_no";  





                } else {



                    $report_desc   = 'CEO Expenses';



                    $payreg_sql = "select a.serial_no, a.doc_date, a.doc_no, a.doc_type, a.daybook_code, b.ceo_code, c.name_desc, b.exps_code, d.exps_desc, a.gross_amount,a.tax_amount,a.net_amount, b.narration, b.gross_amount paid_amount 

                                from ledger_trans_hdr a, ledger_trans_dtl b, mis_name_master c , mis_exps_master d 

                                where a.branch_code = 'B001' 

                                and a.doc_date between '$start_date_ymd' and '$end_date_ymd'

                                and a.status_code = 'C' 

                                and a.doc_type = 'PV' 

                                and a.ref_doc_type != 'CB' 

                                and b.ceo_code like '$payee_code' 

                                and c.name_desc like '$payee_name' 

                                and b.exps_code like '$exps_code' 

                                and a.serial_no = b.ref_ledger_serial_no 

                                and b.ceo_code = c.ceo_code

                                and b.exps_code = d.exps_code 

                                and b.dr_cr_ind = 'D' 

                                order by a.doc_date,b.exps_code,a.serial_no,b.ceo_code"; 

                }

                $payreg_qry  = $this->db->query($payreg_sql)->getResultArray() ;

                $payreg_cnt  = count($payreg_qry) ;



                if(empty($payreg_qry)) {

                    session()->setFlashdata('message', 'No Records Found !!');

                    return redirect()->to($this->requested_url());

                }



                $params = [

                    "report_desc" => $report_desc,

                    "period_desc" => $period_desc,

                    "start_date" => $start_date,

                    "end_date" => $end_date,

                    "branch_name" => $branch_name,

                    "branch_code" => $branch_code,

                    "payee_name" => $payee_name,

                    "branch_name" => $branch_name,

                    "payreg_cnt" => $payreg_cnt,

                    "requested_url" => $requested_url,

                ];



                if ($output_type == 'Pdf') {

                    $report_type = 'Pdf'; $dompdf = new \Dompdf\Dompdf(); 

                    $reportHTML = view("pages/Finance/ceo_expenses", compact("payreg_qry", "params", 'showActionBtns', 'report_seq', 'report_type'));

                    $dompdf->loadHtml($reportHTML);

                    $dompdf->setPaper('A4', 'landscape'); // portrait

                    $dompdf->render(); 

                    $dompdf->stream('abc.pdf', array('Attachment'=>0)); exit;

                } else if($output_type == 'Excel' && $report_seq != "S") {

                    $spreadsheet = new Spreadsheet();

                    $sheet = $spreadsheet->getActiveSheet();

                    $rows = 1;



                    $fileName = $headings = '';

                    $fileName = 'Finance-Ceo-Expenses-'.date('d-m-Y').'.xlsx';  

                    $headings = ['Date', 'Doc#', 'DB', 'Payee', 'Expenses', 'Narration', 'Gross'];

                    $column = 'A'; $rows++;



                    foreach ($headings as $heading) {

                        $cell = $column . $rows;

                        $sheet->setCellValue($cell, $heading); // Set the cell value



                        // Apply formatting

                        $style = $sheet->getStyle($cell);

                        $style->getFont()->setBold(true);

                        $style->getAlignment()->setHorizontal(Alignment::HORIZONTAL_CENTER);

                        $style->getFill()->setFillType(Fill::FILL_SOLID)->getStartColor()->setRGB('c8d5ef');

                        $style->getBorders()->getAllBorders()->setBorderStyle(\PhpOffice\PhpSpreadsheet\Style\Border::BORDER_THIN); // Add borders

                        ++$column; // Move to the next column

                    } $rows++;



                    $tgramt  = 0; 

                    $ttxamt  = 0; 

                    $tntamt  = 0;

                    $pntamt  = 0; 

                    $pgramt  = 0;

                    $rowcnt     = 1 ;

                    $report_row = isset($payreg_qry[$rowcnt-1]) ? $payreg_qry[$rowcnt-1] : ''  ; 

                    $report_cnt = $params['payreg_cnt'] ;

                    while ($rowcnt <= $report_cnt) {

                        $psrlind = 'Y';

                        $ptxamt  = $report_row['tax_amount'] ;

                        $pserial = $report_row['serial_no'] ;

                        while($pserial == $report_row['serial_no'] && $rowcnt <= $report_cnt)  {



                            $sheet->setCellValue('A' . $rows, ($psrlind=='Y') ? date_conv($report_row['doc_date'],'-') : '');

                            $sheet->setCellValue('B' . $rows, $report_row['doc_no']);

                            $sheet->setCellValue('C' . $rows, ($psrlind=='Y') ? $report_row['daybook_code'] : '');

                            $sheet->setCellValue('D' . $rows, ($psrlind=='Y') ? strtoupper($report_row['name_desc']) : '');

                            $sheet->setCellValue('E' . $rows, ($psrlind=='Y') ? strtoupper($report_row['exps_desc']) : '');

                            $sheet->setCellValue('F' . $rows, strtoupper($report_row['narration']));

                            $sheet->setCellValue('G' . $rows, $report_row['paid_amount']);



                            $style = $sheet->getStyle('A' . $rows . ':G' . $rows);

                            $style->getBorders()->getAllBorders()->setBorderStyle(\PhpOffice\PhpSpreadsheet\Style\Border::BORDER_THIN); 

                            $rows++;



                            $pgramt  = $pgramt + $report_row['paid_amount'] ;

                            $psrlind = 'N' ;

                            $report_row = ($rowcnt < $report_cnt) ? $payreg_qry[$rowcnt] : $report_row; 

                            $rowcnt = $rowcnt + 1 ;

                        }

                        $sheet->setCellValue('A' . $rows, 'TOTAL');

                        $sheet->setCellValue('G' . $rows, ($pgramt>0) ? number_format($pgramt,2,'.','') : '');



                        $style = $sheet->getStyle('A' . $rows . ':G' . $rows);

                        $style->getFont()->setBold(true);

                        $style->getAlignment()->setHorizontal(Alignment::HORIZONTAL_RIGHT);

                        $style->getBorders()->getAllBorders()->setBorderStyle(\PhpOffice\PhpSpreadsheet\Style\Border::BORDER_THIN); 

                        $style->getBorders()->getRight()->setBorderStyle(\PhpOffice\PhpSpreadsheet\Style\Border::BORDER_MEDIUM);

                        $style->getBorders()->getTop()->setBorderStyle(\PhpOffice\PhpSpreadsheet\Style\Border::BORDER_MEDIUM);

                        $style->getBorders()->getBottom()->setBorderStyle(\PhpOffice\PhpSpreadsheet\Style\Border::BORDER_MEDIUM);

                        $style->getFill()->setFillType(Fill::FILL_SOLID)->getStartColor()->setRGB('c8efe3');

                        $sheet->mergeCells('A' . $rows . ':F' . $rows);

                        $rows++;



                        $tgramt  = $tgramt + $pgramt ;

                        $ttxamt  = $ttxamt + $ptxamt ;

                        $tntamt  = $tntamt + $pntamt ;



                    } 

                    $sheet->setCellValue('A' . $rows, 'PERIOD TOTAL');

                    $sheet->setCellValue('G' . $rows, ($tgramt > 0) ? number_format($tgramt,2,'.','') : '');



                    $style = $sheet->getStyle('A' . $rows . ':G' . $rows);

                    $style->getFont()->setBold(true);

                    $style->getAlignment()->setHorizontal(Alignment::HORIZONTAL_RIGHT);

                    $style->getBorders()->getAllBorders()->setBorderStyle(\PhpOffice\PhpSpreadsheet\Style\Border::BORDER_THIN); 

                    $style->getBorders()->getRight()->setBorderStyle(\PhpOffice\PhpSpreadsheet\Style\Border::BORDER_MEDIUM);

                    $style->getBorders()->getTop()->setBorderStyle(\PhpOffice\PhpSpreadsheet\Style\Border::BORDER_MEDIUM);

                    $style->getBorders()->getBottom()->setBorderStyle(\PhpOffice\PhpSpreadsheet\Style\Border::BORDER_MEDIUM);

                    $style->getFill()->setFillType(Fill::FILL_SOLID)->getStartColor()->setRGB('FFFF99');

                    $sheet->mergeCells('A' . $rows . ':F' . $rows);

                    $rows++;



                    $writer = new Xlsx($spreadsheet);

                    $writer->save($fileName);

                    header('Content-Type: application/vnd.ms-excel');

                    header('Content-Disposition: attachment; filename="'.basename($fileName).'"');

                    header('Expires: 0');

                    header('Cache-control: must-revalidate');

                    header('Pragma: public');

                    header('Content-Length:'.filesize($fileName));

                    flush();

                    readfile($fileName); 



                } else if($output_type == 'Excel' && $report_seq == "S") {

                    $spreadsheet = new Spreadsheet();

                    $sheet = $spreadsheet->getActiveSheet();

                    $rows = 1;



                    $fileName = $headings = '';

                    $fileName = 'Finance-Ceo-Expenses-Summary-'.date('d-m-Y').'.xlsx';  

                    $headings = ['Name', 'Expenses', 'Gross', 'Net'];

                    $column = 'A'; $rows++;



                    foreach ($headings as $heading) {

                        $cell = $column . $rows;

                        $sheet->setCellValue($cell, $heading); // Set the cell value



                        // Apply formatting

                        $style = $sheet->getStyle($cell);

                        $style->getFont()->setBold(true);

                        $style->getAlignment()->setHorizontal(Alignment::HORIZONTAL_CENTER);

                        $style->getFill()->setFillType(Fill::FILL_SOLID)->getStartColor()->setRGB('c8d5ef');

                        $style->getBorders()->getAllBorders()->setBorderStyle(\PhpOffice\PhpSpreadsheet\Style\Border::BORDER_THIN); // Add borders

                        ++$column; // Move to the next column

                    } $rows++;



                    $tgramt  = 0; 

                    $ttxamt  = 0; 

                    $tntamt  = 0; 

                    $rosamt  = 0;

                    $trosamt = 0;

                    $totosamt = 0;

                    $rowcnt     = 1 ;

                    $report_row = isset($payreg_qry[$rowcnt-1]) ? $payreg_qry[$rowcnt-1] : '' ;   

                    $report_cnt = $params['payreg_cnt'] ;

                    

                    while ($rowcnt <= $report_cnt) {

                        $psrlind = 'Y';

                        $pcourtnm = $report_row['name_desc'];;

                        $pserial = $report_row['serial_no'] ;

                        while($pserial == $report_row['serial_no'] && $rowcnt <= $report_cnt) {



                            $rosamt    = $report_row['paid_amount'] ; 

                            $trosamt   = $trosamt + $report_row['paid_amount'] ; 

                            $totosamt  = $totosamt + $trosamt  ; 



                            $sheet->setCellValue('A' . $rows, $pcourtnm);

                            $sheet->setCellValue('B' . $rows, $report_row['exps_desc']);

                            $sheet->setCellValue('C' . $rows, ($rosamt == 0.00) ? '' : number_format($rosamt,2,'.',''));

                            $sheet->setCellValue('D' . $rows, ($trosamt == 0.00) ? '' : number_format($trosamt,2,'.',''));



                            $report_row = ($rowcnt < $report_cnt) ? $payreg_qry[$rowcnt] : $report_row;    

                            $rowcnt = $rowcnt + 1 ;



                            $style = $sheet->getStyle('A' . $rows . ':D' . $rows);

                            $style->getBorders()->getAllBorders()->setBorderStyle(\PhpOffice\PhpSpreadsheet\Style\Border::BORDER_THIN); 

                            $rows++;



                        }

                    }

                    $sheet->setCellValue('A' . $rows, 'TOTAL');

                    $sheet->setCellValue('D' . $rows, ($totosamt == 0.00) ? '' : number_format($totosamt,2,'.',''));



                    $style = $sheet->getStyle('A' . $rows . ':D' . $rows);

                    $style->getFont()->setBold(true);

                    $style->getAlignment()->setHorizontal(Alignment::HORIZONTAL_RIGHT);

                    $style->getBorders()->getAllBorders()->setBorderStyle(\PhpOffice\PhpSpreadsheet\Style\Border::BORDER_THIN); 

                    $style->getBorders()->getRight()->setBorderStyle(\PhpOffice\PhpSpreadsheet\Style\Border::BORDER_MEDIUM);

                    $style->getBorders()->getTop()->setBorderStyle(\PhpOffice\PhpSpreadsheet\Style\Border::BORDER_MEDIUM);

                    $style->getBorders()->getBottom()->setBorderStyle(\PhpOffice\PhpSpreadsheet\Style\Border::BORDER_MEDIUM);

                    $style->getFill()->setFillType(Fill::FILL_SOLID)->getStartColor()->setRGB('ffff99');

                    $sheet->mergeCells('A' . $rows . ':C' . $rows);

                    $rows++;



                    $writer = new Xlsx($spreadsheet);

                    $writer->save($fileName);

                    header('Content-Type: application/vnd.ms-excel');

                    header('Content-Disposition: attachment; filename="'.basename($fileName).'"');

                    header('Expires: 0');

                    header('Cache-control: must-revalidate');

                    header('Pragma: public');

                    header('Content-Length:'.filesize($fileName));

                    flush();

                    readfile($fileName); 



                } else return view("pages/Finance/ceo_expenses", compact("payreg_qry", "params", 'report_seq', 'showActionBtns')); 

            } else if($output_type == 'innerReport' || $output_type == 'innerPdf' || $output_type == 'innerExcel'){

                $serial_no = isset($_REQUEST['serial_no'])?$_REQUEST['serial_no']:null;



                $tranhdr_row = $this->db->query("select a.*, b.branch_name from ledger_trans_hdr a, branch_master b where a.serial_no = '$serial_no' and a.branch_code = b.branch_code  ")->getRowArray();

                // echo '<pre>';print_r($tranhdr_row);die;

                $trandtl_qry = $this->db->query("select a.*, b.branch_name from ledger_trans_dtl a, branch_master b where a.ref_ledger_serial_no = '$serial_no' and a.branch_code = b.branch_code  ")->getResultArray();

                $trandtl_cnt = count($trandtl_qry) ;

                

                $vchrhdr_row = $this->db->query("select a.prepared_by, a.prepared_on, b.serial_no from voucher_header a, ledger_trans_hdr b where a.ref_ledger_serial_no = '$serial_no' and a.ref_ledger_serial_no = b.serial_no  ")->getResultArray() ;

                

                if(empty($trandtl_qry)) {

                    session()->setFlashdata('message', 'No Records Found !!');

                    return redirect()->to($this->requested_url());

                }



                if ($output_type == 'innerPdf') {

                    $report_type = 'Pdf'; $dompdf = new \Dompdf\Dompdf(); 

                    $reportHTML = view("pages/Finance/ceo_expenses", compact("trandtl_qry", "vchrhdr_row", "tranhdr_row", 'showActionBtns', 'requested_url', 'report_type'));

                    $dompdf->loadHtml($reportHTML);

                    $dompdf->setPaper('A4', 'landscape'); // portrait

                    $dompdf->render();

                    $dompdf->stream('abc.pdf', array('Attachment'=>0)); exit;

                } else if ($output_type == 'innerExcel') {

                    $fileName = 'General-Ledger-'.date('d-m-Y').'.xlsx';  

                    $spreadsheet = new Spreadsheet();

                    $sheet = $spreadsheet->getActiveSheet();



                    // Define the headings

                    $headings = ['Main', 'Sub', 'Matter', 'Client', 'Bill Number', 'Purpose', 'Debit', 'Credit'];

                    // Loop through the headings and set the formatting

                    $column = 'A';

                    foreach ($headings as $heading) {

                        $cell = $column . '1';



                        // Set the cell value

                        $sheet->setCellValue($cell, $heading);



                        // Apply formatting

                        $style = $sheet->getStyle($cell);

                        $style->getFont()->setBold(true);

                        $style->getAlignment()->setHorizontal(Alignment::HORIZONTAL_CENTER);

                        $style->getFill()->setFillType(Fill::FILL_SOLID)->getStartColor()->setRGB('c8d5ef');

                        // Add borders

                        $style->getBorders()->getTop()->setBorderStyle(\PhpOffice\PhpSpreadsheet\Style\Border::BORDER_THIN);

                        $style->getBorders()->getBottom()->setBorderStyle(\PhpOffice\PhpSpreadsheet\Style\Border::BORDER_THIN);

                        $style->getBorders()->getLeft()->setBorderStyle(\PhpOffice\PhpSpreadsheet\Style\Border::BORDER_THIN);

                        $style->getBorders()->getRight()->setBorderStyle(\PhpOffice\PhpSpreadsheet\Style\Border::BORDER_THIN);



                        // Move to the next column

                        ++$column;

                    }

                    $rows = 2;

                    $tdtotal  = 0; 

                    $tctotal  = 0; 

                    $rowcnt     = 1 ;

                    // $report_row = isset($ldg_qry[$rowcnt-1]) ? $ldg_qry[$rowcnt-1] : '' ;  

                    // $report_cnt = $ldg_cnt ;

                    foreach($trandtl_qry as $trandtl_row) {

                        $sheet->setCellValue('A' . $rows, $trandtl_row['main_ac_code']);

                        $sheet->setCellValue('B' . $rows, $trandtl_row['sub_ac_code']);

                        $sheet->setCellValue('C' . $rows, $trandtl_row['matter_code']);

                        $sheet->setCellValue('D' . $rows, $trandtl_row['client_code']);

                        $sheet->setCellValue('E' . $rows, $trandtl_row['bill_no']);

                        $sheet->setCellValue('F' . $rows, $trandtl_row['narration']);

                        $sheet->setCellValue('G' . $rows, ($trandtl_row['dr_cr_ind'] == 'D') ? $trandtl_row['gross_amount'] : '');

                        $sheet->setCellValue('H' . $rows, ($trandtl_row['dr_cr_ind'] == 'C') ? $trandtl_row['gross_amount'] : '');



                        // Apply border to the current row

                        $style = $sheet->getStyle('A' . $rows . ':H' . $rows);

                        $style->getBorders()->getAllBorders()->setBorderStyle(\PhpOffice\PhpSpreadsheet\Style\Border::BORDER_THIN);



                        if($trandtl_row['dr_cr_ind'] == 'D') { $tdtotal = $tdtotal + $trandtl_row['gross_amount'] ; } else { $tctotal = $tctotal + $trandtl_row['gross_amount'] ; }  

                        $rows++;

                    }

                    $sheet->setCellValue('F' . $rows, 'TOTAL');

                    $sheet->setCellValue('G' . $rows, ($tdtotal != 0) ? number_format(abs($tdtotal),2,'.','') : '');

                    $sheet->setCellValue('H' . $rows, ($tctotal != 0) ? number_format(abs($tctotal),2,'.','') : '');



                    // Apply Background Color to the current row

                    $style = $sheet->getStyle('A' . $rows . ':H' . $rows);

                    $style->getFont()->setBold(true);

                    $style->getAlignment()->setHorizontal(Alignment::HORIZONTAL_CENTER);

                    $style->getBorders()->getAllBorders()->setBorderStyle(\PhpOffice\PhpSpreadsheet\Style\Border::BORDER_THIN);

                    $style->getFill()->setFillType(Fill::FILL_SOLID)->getStartColor()->setRGB('ffe93a');



                    $writer = new Xlsx($spreadsheet);

                    $writer->save($fileName);

                    header('Content-Type: application/vnd.ms-excel');

                    header('Content-Disposition: attachment; filename="'.basename($fileName).'"');

                    header('Expires: 0');

                    header('Cache-control: must-revalidate');

                    header('Pragma: public');

                    header('Content-Length:'.filesize($fileName));

                    flush();

                    readfile($fileName); 

                } else return view("pages/Finance/ceo_expenses", compact("trandtl_qry", "vchrhdr_row", "tranhdr_row", 'showActionBtns', 'requested_url'));

            }



        } else {

            $data = [];

            $data = branches(session()->userId);

            $curr_finyr = session()->financialYear;

            $data['curr_fyrsdt'] = '01-04-'.substr($curr_finyr,0,4);

            $data['billfor_ind'] = 'N';



            return view("pages/Finance/ceo_expenses", compact("data", "displayId", 'showActionBtns')); 

        }

    }



    public function receiver_remuneration() {

        $requested_url = session()->requested_end_menu_url;

        $output_type = isset($_REQUEST['output_type']) ? $_REQUEST['output_type'] : '';

        $at_a_glance = isset($_REQUEST['AT-A-GLANCE']) ? true : false;

        // echo $at_a_glance;die;

        $displayId = ['client_help_id' => '4072', 'matter_help_id' => '4220', 'court_help_id' => '4221', 'initial_help_id' => '4191'];



        if($this->request->getMethod() == "post") {

            if($output_type == 'Report' || $output_type == 'Pdf' || $output_type == 'Excel') {



                $report_desc      = "RECEIVER REMUNERATION : COURT/CLIENT/MATTER/INITAL-WISE (DETAILS)" ;

                $ason_date       = $_REQUEST['ason_date'] ;

                $branch_code     = $_REQUEST['branch_code'] ;

                $start_date      = $_REQUEST['start_date'] ; if($start_date != '')   { $start_date_ymd = date_conv($start_date); } else { $start_date_ymd = '1901-01-01'; }

                $end_date        = $_REQUEST['end_date'] ; if($end_date   != '')   { $end_date_ymd   = date_conv($end_date);   } else { $end_date_ymd   = $global_sysdate ; }

                $court_code      = $_REQUEST['court_code'] ; if(empty($court_code))  { $court_code   = '%' ; }

                $court_name      = $_REQUEST['court_name'] ;

                $client_code     = $_REQUEST['client_code'] ; if(empty($client_code)) { $client_code  = '%' ; }

                $client_name     = $_REQUEST['client_name'] ;

                $client_name     = str_replace('_|_','&', $client_name) ;

                $client_name     = str_replace('-|-',"'", $client_name) ;

                $matter_code     = $_REQUEST['matter_code'] ; if(empty($matter_code)) { $matter_code  = '%' ; }

                $matter_desc     = $_REQUEST['matter_desc'] ;

                $initial_code    = $_REQUEST['initial_code'] ; if(empty($initial_code)) { $initial_code = '%' ; }

                $initial_name    = $_REQUEST['initial_name'] ;

              

                $report_seqn     = $_REQUEST['report_seqn'] ;

                $report_type     = $_REQUEST['report_type'] ;

                $branch_qry    = $this->db->query("select * from branch_master where branch_code = '$branch_code' ")->getRowArray() ;

                $branch_name   = $branch_qry['branch_name'] ;

                //$branch_name     = getBranchName($branch_code,$link) ;

              

                if($start_date == '')  {$period_desc = "UPTO ".$end_date ;} else {$period_desc = $start_date.' - '.$end_date ;}

              

                if($court_code  == '%') { $court_heading   = 'COURT : ALL'  ; } else { $court_heading   = 'COURT : SELECTIVE'  ; }

                if($client_code == '%') { $client_heading  = 'CLIENT : ALL' ; } else { $client_heading  = 'CLIENT : SELECTIVE' ; }

                if($matter_code == '%') { $matter_heading  = 'MATTER : ALL' ; } else { $matter_heading  = 'MATTER : SELECTIVE' ; }

               // if($initial_code == '%') { $initial_heading  = 'INITIAL : ALL' ; } else { $initial_heading  = 'INITIAL : SELECTIVE' ; }

              

                if($client_code == '%') { $client_name     = 'ALL' ; } else { $client_name     = $client_name ; }

              

                $report_sub_desc = '[ '.$court_heading.' / '.$client_heading.' / '.$matter_heading.' ]' ;

              

                if(($output_type == 'Report' || $output_type == 'Pdf') && !$at_a_glance) {



                    if($report_seqn == 'R') { $order_by_clause = "c.court_code" ; }

                    else if($report_seqn == 'C') { $order_by_clause = "b.client_name,e.doc_date" ; }

                    else if($report_seqn == 'M') { $order_by_clause = "f.matter_code,e.doc_date" ; }

                    else if($report_seqn == 'T') { session()->setFlashdata('message', 'No Records Found !!'); return redirect()->to($this->requested_url()); }

                  

                    $bill_sql = "select e.doc_no, e.doc_date,c.court_code,e.serial_no,f.main_ac_code,f.client_code,b.client_name, concat(c.matter_desc1,' ',c.matter_desc2) matter_desc, f.matter_code, c.initial_code, f.narration, e.gross_amount, e.tax_amount, e.net_amount, d.code_desc court_name

                                from ledger_trans_hdr e, ledger_trans_dtl f, client_master b, fileinfo_header c, code_master d

                                where e.branch_code like '$branch_code' 

                                and f.client_code like '$client_code'

                                and f.matter_code like '$matter_code' 

                                and e.serial_no = f.ref_ledger_serial_no 

                                and e.doc_date between '$start_date_ymd' and '$end_date_ymd'

                                and f.client_code = b.client_code 

                                and f.matter_code = c.matter_code 

                                and f.main_ac_code = '7021' 

                                and c.court_code like '$court_code' 

                                and c.court_code = d.code_code 

                                and d.type_code = '001' 

                                order by ".$order_by_clause ;  

                    $bill_qry  = $this->db->query($bill_sql)->getResultArray() ;

                    $bill_cnt  = count($bill_qry);

    

                    if(empty($bill_qry)) {

                        session()->setFlashdata('message', 'No Records Found !!');

                        return redirect()->to($this->requested_url());

                    }

    

                    $params = [

                        "report_desc" => $report_desc,

                        "report_sub_desc" => $report_sub_desc,

                        "client_name" => $client_name,

                        "period_desc" => $period_desc,

                        "ason_date" => $ason_date,

                        "branch_name" => $branch_name,

                        "bill_cnt" => $bill_cnt,

                        "requested_url" => $requested_url,

                    ];

    

                    if ($output_type == 'Pdf') {

                        $report_type = 'Pdf'; $dompdf = new \Dompdf\Dompdf(); 

                        $reportHTML = view("pages/Finance/receiver_remuneration", compact("bill_qry", "params", 'at_a_glance', 'report_type'));

                        $dompdf->loadHtml($reportHTML);

                        $dompdf->setPaper('A4', 'landscape'); // portrait

                        $dompdf->render(); 

                        $dompdf->stream('abc.pdf', array('Attachment'=>0)); exit;

                    } else return view("pages/Finance/receiver_remuneration", compact("bill_qry", "params", 'at_a_glance'));

                } else if($output_type == 'Excel' && !$at_a_glance) {



                    if($report_type == 'D') {

                        if($report_seqn == 'B')      { $order_by_clause = "a.bill_date,a.fin_year,a.bill_no" ; }

                        else if($report_seqn == 'C') { $order_by_clause = "b.client_name,a.bill_date,a.fin_year,a.bill_no" ; }

                        else if($report_seqn == 'M') { $order_by_clause = "a.matter_code,a.bill_date,a.fin_year,a.bill_no" ; }

                        else if($report_seqn == 'I') { $order_by_clause = "d.code_desc,a.bill_date,a.fin_year,a.bill_no" ; }

                    } else {

                        if($report_seqn == 'B')      { session()->setFlashdata('message', 'No Records Found !!'); return redirect()->to($this->requested_url()); }

                        else if($report_seqn == 'C') { $group_by_clause = "b.client_name"  ; $order_by_clause = "b.client_name" ; }

                        else if($report_seqn == 'M') { $group_by_clause = "a.matter_code"  ; $order_by_clause = "a.matter_code" ; }

                        else if($report_seqn == 'I') { $group_by_clause = "c.court_code" ; $order_by_clause = "d.code_desc" ;}

                    }



                    if($report_type == 'D') { 

                        $bill_sql = "SELECT a.serial_no, d.code_desc court_name,c.initial_code, f.doc_date,f.doc_no,a.matter_code, b.client_name, c.matter_desc1, c.matter_desc2,e.narration,a.amount 

                                FROM expense_detail a, client_master b, fileinfo_header c, code_master d, ledger_trans_dtl e, ledger_trans_hdr f

                                WHERE a.expense_code in ('A11','B04') 

                                AND a.client_code = b.client_code

                                AND c.court_code  = d.code_code 

                                AND a.matter_code = c.matter_code

                                AND d.type_code   = '001'

                                AND a.ref_ledger_serial_no = f.serial_no

                                AND a.ref_ledger_serial_no = e.ref_ledger_serial_no

                                and f.serial_no = e.ref_ledger_serial_no

                                AND e.main_ac_code = '7021'

                                and c.court_code like '$court_code'

                                and c.client_code like '$client_code'

                                and c.matter_code like '$matter_code'

                                and c.initial_code like '$initial_code'

                                and f.doc_date between '$start_date_ymd' and '$end_date_ymd' 

                                group by a.serial_no order by f.doc_date " ; 

                    } else { 

                        session()->setFlashdata('message', 'No Records Found !!'); 

                        return redirect()->to($this->requested_url());

                        

                        $bill_sql = "select a.client_code,a.matter_code,c.court_code,d.code_desc court_name,c.matter_desc1, c.matter_desc2,

                                sum(ifnull(a.bill_amount_inpocket, 0)) ipamt,

                                sum(ifnull(a.bill_amount_outpocket,0)) opamt,

                                sum(ifnull(a.bill_amount_counsel,  0)) cnamt,

                                sum(ifnull(a.service_tax_amount,   0)) stamt,

                                sum(ifnull(a.bill_amount_inpocket, 0) + ifnull(a.bill_amount_outpocket,0) + ifnull(a.bill_amount_counsel,0) + ifnull(a.service_tax_amount,0)) totamt,

                                sum(ifnull(a.bill_amount_inpocket, 0) + ifnull(a.bill_amount_outpocket,0) + ifnull(a.bill_amount_counsel,0) + ifnull(a.service_tax_amount,0)) billed_amount,

                                sum(ifnull(a.realise_amount_inpocket,0) + ifnull(a.realise_amount_outpocket,0) + ifnull(a.realise_amount_counsel,0) + ifnull(a.realise_amount_service_tax,0) + ifnull(a.advance_amount_inpocket,0) + ifnull(a.advance_amount_outpocket,0) + ifnull(a.advance_amount_counsel,0) + ifnull(a.advance_amount_service_tax,0)) realised_amount,

                                sum(ifnull(a.deficit_amount_inpocket,0) + ifnull(a.deficit_amount_outpocket,0) + ifnull(a.deficit_amount_counsel,0) + ifnull(a.deficit_amount_service_tax,0)) deficit_amount,

                                sum((ifnull(a.bill_amount_inpocket,0) + ifnull(a.bill_amount_outpocket,0) + ifnull(a.bill_amount_counsel,0) + ifnull(a.service_tax_amount,0)) - (ifnull(a.realise_amount_inpocket,0) + ifnull(a.realise_amount_outpocket,0) + ifnull(a.realise_amount_counsel,0) + ifnull(a.realise_amount_service_tax,0) + ifnull(a.advance_amount_inpocket,0) + ifnull(a.advance_amount_outpocket,0) + ifnull(a.advance_amount_counsel,0) + ifnull(a.advance_amount_service_tax,0) + ifnull(a.deficit_amount_inpocket,0) + ifnull(a.deficit_amount_outpocket,0) + ifnull(a.deficit_amount_counsel,0) + ifnull(a.deficit_amount_service_tax,0))) balance_amount,

                                b.client_name

                                from bill_detail a , client_master b, fileinfo_header c, code_master d

                                where a.branch_code like '$branch_code'

                                and a.client_code like '$client_code'

                                and a.matter_code like '$matter_code'

                                and ifnull(a.court_fee_bill_ind,'N') like '$billfor_ind' 

                                and a.bill_date between '$start_date_ymd' and '$end_date_ymd'

                                and a.client_code = b.client_code

                                and a.matter_code = c.matter_code

                                and c.court_code like '$court_code'

                                and c.court_code = d.code_code and d.type_code = '001' 

                                and (ifnull(a.cancel_ind,'N') = 'N' or a.cancel_ind = '')

                                group by ".$group_by_clause." order by ".$order_by_clause ; 

                    } 

                    $bill_qry  = $this->db->query($bill_sql)->getResultArray();

                    $bill_cnt  = count($bill_qry);



                    $spreadsheet = new Spreadsheet();

                    $sheet = $spreadsheet->getActiveSheet();

                    $rows = 1;





                    $fileName = $headings = '';

                    $fileName = 'Finance-Receiver-Remuneration-'.date('d-m-Y').'.xlsx';  

                    $headings = ['Court', 'Doc No', 'Doc Date', 'Initial', 'Client', 'Matter', 'Case', 'Description', 'Narration', 'Amount'];



                    $column = 'A'; $rows++;



                    foreach ($headings as $heading) {

                        $cell = $column . $rows;

                        $sheet->setCellValue($cell, $heading); // Set the cell value



                        // Apply formatting

                        $style = $sheet->getStyle($cell);

                        $style->getFont()->setBold(true);

                        $style->getAlignment()->setHorizontal(Alignment::HORIZONTAL_CENTER);

                        $style->getFill()->setFillType(Fill::FILL_SOLID)->getStartColor()->setRGB('c8d5ef');

                        $style->getBorders()->getAllBorders()->setBorderStyle(\PhpOffice\PhpSpreadsheet\Style\Border::BORDER_THIN); // Add borders

                        ++$column; // Move to the next column

                    } $rows++;



                    foreach($bill_qry as $report_row) {



                        $sheet->setCellValue('A' . $rows, strtoupper($report_row['court_name']));

                        $sheet->setCellValue('B' . $rows, "'".$report_row['doc_no']);

                        $sheet->setCellValue('C' . $rows, date_conv($report_row['doc_date']));

                        $sheet->setCellValue('D' . $rows, strtoupper($report_row['initial_code']));

                        $sheet->setCellValue('E' . $rows, strtoupper($report_row['client_name']));

                        $sheet->setCellValue('F' . $rows, strtoupper($report_row['matter_code']));

                        $sheet->setCellValue('G' . $rows, strtoupper($report_row['matter_desc1']));

                        $sheet->setCellValue('H' . $rows, strtoupper($report_row['matter_desc2']));

                        $sheet->setCellValue('I' . $rows, strtoupper($report_row['narration']));

                        $sheet->setCellValue('J' . $rows, ($report_row['amount'] > 0) ? number_format($report_row['amount'], 2,'.','') : '');

    

                        $style = $sheet->getStyle('A' . $rows . ':J' . $rows);

                        $style->getBorders()->getAllBorders()->setBorderStyle(\PhpOffice\PhpSpreadsheet\Style\Border::BORDER_THIN); 

                        $rows++;

                    }



                    $writer = new Xlsx($spreadsheet);

                    $writer->save($fileName);

                    header('Content-Type: application/vnd.ms-excel');

                    header('Content-Disposition: attachment; filename="'.basename($fileName).'"');

                    header('Expires: 0');

                    header('Cache-control: must-revalidate');

                    header('Pragma: public');

                    header('Content-Length:'.filesize($fileName));

                    flush();

                    readfile($fileName); 

                } else if(($output_type == 'Report' || $output_type == 'Pdf' || $output_type == 'Excel') && $at_a_glance) {

                    $main_ac_code = '7021' ;

                    $date_from = date_conv($start_date); 

                    $date_to   = date_conv($end_date) ;



                    $st_dt = $date_from ; 

                    $en_dt = $date_to; 



                    $fin_month = substr($st_dt,5,2); 

                    $fin_year = substr($st_dt,0,4);



                    if($fin_month <= 3) {

                    $fin_yr = ($fin_year - 1).'-'.$fin_year ;

                    } else {

                    $fin_yr = $fin_year.'-'.($fin_year+1) ;

                    } 

                    $year_mon = substr($date_from,0,4).substr($date_from,5,2) ; 

                    $date_start = substr($date_from,0,4).'-'.substr($date_from,5,2).'-'.'01' ;



                    $branch_name_stmt = $this->db->query("select branch_name from branch_master where branch_code='$branch_code'")->getRowArray();

                    $branch_name = $branch_name_stmt['branch_name'];



                    $sele_ac_desc = "select main_ac_desc from account_master where main_ac_code = '7021'";

                    $sele_ac_qry  = $this->db->query($sele_ac_desc)->getRowArray();

                    $display_heading = $sele_ac_qry['main_ac_desc']; 



                    if($main_ac_code == '7021') {

                        $bill_sql = "select a.payee_payer_name c_name,a.gross_amount gross_amount,a.tax_amount tax_amount,a.net_amount net_amount

                                    from ledger_trans_hdr a, ledger_trans_dtl b

                                    where a.doc_date  between '$st_dt' and '$en_dt'

                                    and a.status_code  = 'C'

                                    and a.serial_no = b.ref_ledger_serial_no

                                    and b.main_ac_code = '7021'

                                    AND b.narration NOT LIKE '%TRANSFER TO PROFIT AND LOSS ACCOUNT%'

                                    AND b.narration NOT LIKE '%TR TO PROFIT AND LOSS ACCOUNT%'

                                    AND b.narration NOT LIKE '%TRANSFER TO PL %'

                                    group by a.serial_no order by a.payee_payer_name"; 



                    }

                    $bill_qry  = $this->db->query($bill_sql)->getResultArray();

                    $bill_cnt  = count($bill_qry);



                    if(empty($bill_qry)) {

                        session()->setFlashdata('message', 'No Records Found !!');

                        return redirect()->to($this->requested_url());

                    }

    

                    $params = [

                        "bill_cnt" => $bill_cnt,

                        "branch_name" => $branch_name,

                        "date_from" => $date_from,

                        "date_to" => $date_to,

                        "requested_url" => $requested_url,

                    ];

                    if ($output_type == 'Pdf') {

                        $report_type = 'Pdf'; $dompdf = new \Dompdf\Dompdf(); 

                        $reportHTML = view("pages/Finance/receiver_remuneration", compact("bill_qry", "params", 'at_a_glance', 'report_type'));

                        $dompdf->loadHtml($reportHTML);

                        $dompdf->setPaper('A4', 'landscape'); // portrait

                        $dompdf->render(); 

                        $dompdf->stream('abc.pdf', array('Attachment'=>0)); exit;

                    } else if($output_type == 'Excel'){

                        

                        $spreadsheet = new Spreadsheet();

                        $sheet = $spreadsheet->getActiveSheet();

                        $rows = 1;



                        $fileName = $headings = '';

                        $fileName = 'Finance-Receiver-Remuneration-At-A-Glance-'.date('d-m-Y').'.xlsx';  

                        $headings = ['Code', 'Name', 'Gross Amount', 'TDS', 'Net Amount'];

                        $column = 'A'; $rows++;



                        foreach ($headings as $heading) {

                            $cell = $column . $rows;

                            $sheet->setCellValue($cell, $heading); // Set the cell value



                            // Apply formatting

                            $style = $sheet->getStyle($cell);

                            $style->getFont()->setBold(true);

                            $style->getAlignment()->setHorizontal(Alignment::HORIZONTAL_CENTER);

                            $style->getFill()->setFillType(Fill::FILL_SOLID)->getStartColor()->setRGB('c8d5ef');

                            $style->getBorders()->getAllBorders()->setBorderStyle(\PhpOffice\PhpSpreadsheet\Style\Border::BORDER_THIN); // Add borders

                            ++$column; // Move to the next column

                        } $rows++;



                        foreach($bill_qry as $report_row) {



                            $sheet->setCellValue('A' . $rows, '');

                            $sheet->setCellValue('B' . $rows, $report_row['c_name']);

                            $sheet->setCellValue('C' . $rows, number_format($report_row['gross_amount'],2,'.',''));

                            $sheet->setCellValue('D' . $rows, ($report_row['tax_amount'] > 0) ? number_format($report_row['tax_amount'],2,'.','') : '');

                            $sheet->setCellValue('E' . $rows, number_format($report_row['net_amount'],2,'.',''));

        

                            $style = $sheet->getStyle('A' . $rows . ':E' . $rows);

                            $style->getBorders()->getAllBorders()->setBorderStyle(\PhpOffice\PhpSpreadsheet\Style\Border::BORDER_THIN); 

                            $rows++;

                        }

                        

                        $writer = new Xlsx($spreadsheet);

                        $writer->save($fileName);

                        header('Content-Type: application/vnd.ms-excel');

                        header('Content-Disposition: attachment; filename="'.basename($fileName).'"');

                        header('Expires: 0');

                        header('Cache-control: must-revalidate');

                        header('Pragma: public');

                        header('Content-Length:'.filesize($fileName));

                        flush();

                        readfile($fileName); 

                    } else return view("pages/Finance/receiver_remuneration", compact("bill_qry", "params", 'at_a_glance')); 



                }

            } 

        } else {

            $data = [];

            $data = branches(session()->userId);

            $curr_finyr = session()->financialYear;

            $data['curr_fyrsdt'] = '01-04-'.substr($curr_finyr,0,4);

            $data['billfor_ind'] = 'N';



            return view("pages/Finance/receiver_remuneration", compact("data", "displayId")); 

        }

    }



    public function photocopy_expenses_report() {

        $requested_url = session()->requested_end_menu_url;

        $output_type = isset($_REQUEST['output_type']) ? $_REQUEST['output_type'] : '';

        $displayId = ['client_help_id' => '4072', 'matter_help_id' => '4220', 'court_help_id' => '4221', 'initial_help_id' => '4191'];



        if($this->request->getMethod() == "post") {

            if($output_type == 'Report' || $output_type == 'Pdf' || $output_type == 'Excel') {



                $report_desc      = "Photocopy Expenses : COURT/CLIENT/INITIAL/MATTER-WISE (DETAILS)" ;

                $ason_date       = $_REQUEST['ason_date'] ;

                $branch_code     = $_REQUEST['branch_code'] ;

                $start_date      = $_REQUEST['start_date'] ;      if($start_date != '')   { $start_date_ymd = date_conv($start_date); } else { $start_date_ymd = '1901-01-01'; }

                $end_date        = $_REQUEST['end_date'] ;        if($end_date   != '')   { $end_date_ymd   = date_conv($end_date);   } else { $end_date_ymd   = $global_sysdate ; }

                $court_code      = $_REQUEST['court_code'] ;      if(empty($court_code))  { $court_code   = '%' ; }

                $court_name      = $_REQUEST['court_name'] ;

                $client_code     = $_REQUEST['client_code'] ;     if(empty($client_code)) { $client_code  = '%' ; }

                $client_name     = $_REQUEST['client_name'] ;

                $client_name     = str_replace('_|_','&', $client_name) ;

                $client_name     = str_replace('-|-',"'", $client_name) ;

                $matter_code     = $_REQUEST['matter_code'] ;     if(empty($matter_code)) { $matter_code  = '%' ; }

                $matter_desc     = $_REQUEST['matter_desc'] ;

                $initial_code    = $_REQUEST['initial_code'] ;    if(empty($initial_code)) { $initial_code = '%' ; }

                $initial_name    = $_REQUEST['initial_name'] ;

              

                $report_seqn     = $_REQUEST['report_seqn'] ;

                $report_type     = $_REQUEST['report_type'] ;

                $branch_qry    = $this->db->query("select * from branch_master where branch_code = '$branch_code' ")->getRowArray() ;

                $branch_name   = $branch_qry['branch_name'] ;

                //$branch_name     = getBranchName($branch_code,$link) ;

              

                if($start_date == '')  {$period_desc = "UPTO ".$end_date ;} else {$period_desc = $start_date.' - '.$end_date ;}

              

                if($court_code  == '%') { $court_heading   = 'COURT : ALL'  ; } else { $court_heading   = 'COURT : SELECTIVE'  ; }

                if($client_code == '%') { $client_heading  = 'CLIENT : ALL' ; } else { $client_heading  = 'CLIENT : SELECTIVE' ; }

                if($matter_code == '%') { $matter_heading  = 'MATTER : ALL' ; } else { $matter_heading  = 'MATTER : SELECTIVE' ; }

              

                if($client_code == '%') { $client_name = 'ALL' ; } else { $client_name = $client_name ; }

              

                $report_sub_desc = '[ '.$court_heading.' / '.$client_heading.' / '.$matter_heading.' ]' ;

            

                $bill_sql    = "select e.doc_no, e.doc_date,e.serial_no,f.*, concat(b.matter_desc1,' ',b.matter_desc2) matter_desc, c.client_name

                            from ledger_trans_hdr e, ledger_trans_dtl f left join fileinfo_header b 

                            on f.matter_code = b.matter_code left join client_master c on f.client_code = c.client_code

                            where e.branch_code like '$branch_code' 

                            and e.serial_no = f.ref_ledger_serial_no 

                            and b.client_code like  '$client_code'

                            and b.matter_code like  '$matter_code'

                            and b.initial_code like  '$initial_code'

                            and e.doc_date between '$start_date_ymd' and '$end_date_ymd' 

                            and f.main_ac_code = '7052' 

                            order by f.net_amount desc,e.doc_date " ; 

                $bill_qry  = $this->db->query($bill_sql)->getResultArray() ;

               // echo '<pre>';print_r($bill_qry);die;

                $bill_cnt  = count($bill_qry);



                if(empty($bill_qry)) {

                    session()->setFlashdata('message', 'No Records Found !!');

                    return redirect()->to($this->requested_url());

                }



                $params = [

                    "report_desc" => $report_desc,

                    "report_sub_desc" => $report_sub_desc,

                    "client_name" => $client_name,

                    "period_desc" => $period_desc,

                    "ason_date" => $ason_date,

                    "branch_name" => $branch_name,

                    "bill_cnt" => $bill_cnt,

                    "requested_url" => $requested_url,

                ];



                if ($output_type == 'Pdf') {

                    $report_type = 'Pdf'; $dompdf = new \Dompdf\Dompdf(); 

                    $reportHTML = view("pages/Finance/photocopy_expenses_report", compact("bill_qry", "params", 'report_type'));

                    $dompdf->loadHtml($reportHTML);

                    $dompdf->setPaper('A4', 'landscape'); // portrait

                    $dompdf->render(); 

                    $dompdf->stream('abc.pdf', array('Attachment'=>0)); exit;

                } else if($output_type == 'Excel'){

                    $showActionBtns = true;

                    $spreadsheet = new Spreadsheet();

                    $sheet = $spreadsheet->getActiveSheet();

                    $rows = 1;



                    $fileName = $headings = '';

                    $fileName = 'Finance-Photocopy_Expenses-'.date('d-m-Y').'.xlsx';  

                    $headings = ['Doc No', 'Doc Date', 'Client / Matter / Narration', 'Amount (Rs.)'];

                    $column = 'A'; $rows++;



                    foreach ($headings as $heading) {

                        $cell = $column . $rows;

                        $sheet->setCellValue($cell, $heading); // Set the cell value



                        // Apply formatting

                        $style = $sheet->getStyle($cell);

                        $style->getFont()->setBold(true);

                        $style->getAlignment()->setHorizontal(Alignment::HORIZONTAL_CENTER);

                        $style->getFill()->setFillType(Fill::FILL_SOLID)->getStartColor()->setRGB('c8d5ef');

                        $style->getBorders()->getAllBorders()->setBorderStyle(\PhpOffice\PhpSpreadsheet\Style\Border::BORDER_THIN); // Add borders

                        $style->getBorders()->getBottom()->setBorderStyle(\PhpOffice\PhpSpreadsheet\Style\Border::BORDER_MEDIUM);

                        $style->getBorders()->getTop()->setBorderStyle(\PhpOffice\PhpSpreadsheet\Style\Border::BORDER_MEDIUM);

                        $style->getBorders()->getRight()->setBorderStyle(\PhpOffice\PhpSpreadsheet\Style\Border::BORDER_MEDIUM);

                        ++$column; // Move to the next column

                    } $rows++;



                    $tbilamt = 0; 

                    $tcolamt = 0; 

                    $tdefamt = 0; 

                    $tbalamt = 0; 

                    $ltotamt  = 0;

                    $ttotamt   = 0;

                    $rowcnt     = 1 ;

                    $report_row = isset($bill_qry[$rowcnt-1]) ? $bill_qry[$rowcnt-1] : '' ;   

                    $report_cnt = $params['bill_cnt'] ;

                    while ($rowcnt <= $report_cnt) {

                        $cbilamt   = 0; 

                        $ccolamt   = 0; 

                        $cdefamt   = 0; 

                        $cbalamt   = 0; 

                        $pcourtind = 'Y' ;

                        $pcourtcd  = isset($report_row['court_code']) ? $report_row['court_code'] : '' ;

                        $pcourtnm  = isset($report_row['court_name']) ? $report_row['court_name'] : '' ;

                        while($pcourtcd == '' && $rowcnt <= $report_cnt) {

                            if ($pcourtind == 'Y') { 

                                $pcourtind = 'N' ;

                                $sub_ac_code = $report_row['matter_code'] ;

                                $sub_ac_desc = $report_row['matter_desc'] ;

                            }

                            $sheet->setCellValue('A' . $rows, $report_row['doc_no']);

                            $sheet->setCellValue('B' . $rows, date_conv($report_row['doc_date']));

                            $sheet->setCellValue('C' . $rows, strtoupper($report_row['client_name']));

                            $sheet->setCellValue('D' . $rows, '');



                            $style = $sheet->getStyle('A' . $rows . ':D' . $rows);

                            $style->getBorders()->getAllBorders()->setBorderStyle(\PhpOffice\PhpSpreadsheet\Style\Border::BORDER_THIN);

                            $rows++;



                            $sheet->setCellValue('A' . $rows, '');

                            $sheet->setCellValue('B' . $rows, '');

                            $sheet->setCellValue('C' . $rows, ($report_row['matter_code'] != '') ? strtoupper($report_row['matter_desc']).'['.$report_row['matter_code'].']' : 'OFFICE');

                            $sheet->setCellValue('D' . $rows, '');

                            

                            $style = $sheet->getStyle('A' . $rows . ':D' . $rows);

                            $style->getBorders()->getAllBorders()->setBorderStyle(\PhpOffice\PhpSpreadsheet\Style\Border::BORDER_THIN);

                            $sheet->mergeCells('C' . $rows . ':C' . $rows);

                            $style->getAlignment()->setWrapText(true);

                            $rows++;



                            

                            $sheet->setCellValue('A' . $rows, '');

                            $sheet->setCellValue('B' . $rows, '');

                            $sheet->setCellValue('C' . $rows, strtoupper($report_row['narration']));

                            $sheet->setCellValue('D' . $rows, ($report_row['net_amount'] > 0) ? number_format($report_row['net_amount'],2,'.','') : '');

                          



                            $ltotamt = $ltotamt + $report_row['net_amount'] ;

                            

                            $report_row = ($rowcnt < $report_cnt) ? $bill_qry[$rowcnt] : $report_row; 

                            $rowcnt = $rowcnt + 1 ;



                            $style = $sheet->getStyle('A' . $rows . ':D' . $rows);

                            $style->getBorders()->getAllBorders()->setBorderStyle(\PhpOffice\PhpSpreadsheet\Style\Border::BORDER_THIN); 

                            $rows++;

                        } 

                        $sheet->setCellValue('A' . $rows, 'Total');

                        $sheet->setCellValue('D' . $rows, ($ltotamt > 0) ? number_format($ltotamt,2,'.','') : ''); 



                        $ttotamt = $ttotamt + $ltotamt ;



                        $style = $sheet->getStyle('A' . $rows . ':D' . $rows);

                        $style->getFont()->setBold(true);

                        $style->getAlignment()->setHorizontal(Alignment::HORIZONTAL_RIGHT);

                        $style->getBorders()->getAllBorders()->setBorderStyle(\PhpOffice\PhpSpreadsheet\Style\Border::BORDER_THIN); 

                        $style->getBorders()->getRight()->setBorderStyle(\PhpOffice\PhpSpreadsheet\Style\Border::BORDER_MEDIUM);

                        $style->getBorders()->getTop()->setBorderStyle(\PhpOffice\PhpSpreadsheet\Style\Border::BORDER_MEDIUM);

                        $style->getFill()->setFillType(Fill::FILL_SOLID)->getStartColor()->setRGB('c8efe3');

                        $sheet->mergeCells('A' . $rows . ':C' . $rows);

                        $rows++;



                    }

                    $sheet->setCellValue('A' . $rows, 'Grand Total');

                    $sheet->setCellValue('D' . $rows, ($ttotamt > 0) ? number_format($ttotamt,2,'.','') : ''); 



                    $style = $sheet->getStyle('A' . $rows . ':D' . $rows);

                    $style->getFont()->setBold(true);

                    $style->getAlignment()->setHorizontal(Alignment::HORIZONTAL_RIGHT);

                    $style->getBorders()->getAllBorders()->setBorderStyle(\PhpOffice\PhpSpreadsheet\Style\Border::BORDER_THIN); 

                    $style->getBorders()->getRight()->setBorderStyle(\PhpOffice\PhpSpreadsheet\Style\Border::BORDER_MEDIUM);

                    $style->getBorders()->getTop()->setBorderStyle(\PhpOffice\PhpSpreadsheet\Style\Border::BORDER_MEDIUM);

                    $style->getBorders()->getBottom()->setBorderStyle(\PhpOffice\PhpSpreadsheet\Style\Border::BORDER_MEDIUM);

                    $style->getFill()->setFillType(Fill::FILL_SOLID)->getStartColor()->setRGB('FFFF99');

                    $sheet->mergeCells('A' . $rows . ':C' . $rows);

                    $rows++;



                    $writer = new Xlsx($spreadsheet);

                    $writer->save($fileName);

                    header('Content-Type: application/vnd.ms-excel');

                    header('Content-Disposition: attachment; filename="'.basename($fileName).'"');

                    header('Expires: 0');

                    header('Cache-control: must-revalidate');

                    header('Pragma: public');

                    header('Content-Length:'.filesize($fileName));

                    flush();

                    readfile($fileName); 



                }else return view("pages/Finance/photocopy_expenses_report", compact("bill_qry", "params"));

            }

        } else {

            $data = [];

            $data = branches(session()->userId);

            $curr_finyr = session()->financialYear;

            $data['curr_fyrsdt'] = '01-04-'.substr($curr_finyr,0,4);

            $data['billfor_ind'] = 'N';



            return view("pages/Finance/photocopy_expenses_report", compact("data", "displayId")); 

        }

    }



    public function loan_confirmation_ac() {

        $report_type = 'pdf';

        $output_type = isset($_POST['output_type']) ? $_POST['output_type'] : null;

        // echo "<pre>"; print_r($_POST); die;

        if ($output_type == 'Pdf') {

            $report_type = 'Pdf'; $dompdf = new \Dompdf\Dompdf(); 

            $params = $_POST;

            $reportHTML = view("pages/Finance/loan_confirmation_ac", compact('report_type', 'params'));

            $dompdf->loadHtml($reportHTML);

            $dompdf->setPaper('A4', 'landscape'); // portrait

            $dompdf->render(); 

            $dompdf->stream('abc.pdf', array('Attachment'=>0)); exit;

        }



        return view("pages/Finance/loan_confirmation_ac");

    }



    public function payment_summary() {

        $requested_url = session()->requested_end_menu_url;

        $output_type = isset($_REQUEST['output_type']) ? $_REQUEST['output_type'] : '';

        $displayId = ['payee_help_id' => '4403'];



        if($this->request->getMethod() == "post") {

            if($output_type == 'Report' || $output_type == 'Pdf' || $output_type == 'Excel') {



                $report_type   = isset($_REQUEST['report_type'])   ?$_REQUEST['report_type']  :null;

                $branch_code   = isset($_REQUEST['branch_code'])   ?$_REQUEST['branch_code']  :null;

                $start_date    = isset($_REQUEST['start_date'])    ?$_REQUEST['start_date']   :null;    $start_date_ymd = date_conv($start_date);

                $end_date      = isset($_REQUEST['end_date'])      ?$_REQUEST['end_date']     :null;    $end_date_ymd   = date_conv($end_date);

                $payee_type    = isset($_REQUEST['payee_payer_type'])    ?$_REQUEST['payee_payer_type']   :null;    if(empty($payee_type)) { $payee_type = '%' ; }

                $payee_code    = isset($_REQUEST['payee_payer_code'])    ?$_REQUEST['payee_payer_code']   :null;    if(empty($payee_code)) { $payee_code = '%' ; }

                $payee_name    = isset($_REQUEST['payee_payer_name'])    ?$_REQUEST['payee_payer_name']   :null;    if(empty($payee_name)) { $payee_name = '%' ; }

              

                $report_desc   = 'EXPENSE HEAD-WISE PAYMENT SUMMARY' ;

              

                if($payee_type == 'E')      { $payee_type_desc = 'EMPLOYEE'     ; }

                else if($payee_type == 'S') { $payee_type_desc = 'SUPPLIER'     ; }

                else if($payee_type == 'C') { $payee_type_desc = 'COUNSEL'      ; }

                else if($payee_type == 'A') { $payee_type_desc = 'ARBITRATOR'   ; }

                else if($payee_type == 'T') { $payee_type_desc = 'STENOGRAPHER' ; }

                else if($payee_type == 'O') { $payee_type_desc = 'OTHERS'       ; }

                else                        { $payee_type_desc = 'ALL'          ; }

              

                $branch_qry    = $this->db->query("select branch_name from branch_master where branch_code = '$branch_code' ")->getRowArray() ;

                $branch_name   = $branch_qry['branch_name'] ;

              

                $payreg_sql = " select b.payee_payer_type, b.payee_payer_code, b.payee_payer_name, a.main_ac_code, c.main_ac_desc, sum(a.gross_amount) expense_amount

                            from ledger_trans_dtl a, ledger_trans_hdr b, account_master c

                            where a.branch_code = '$branch_code' 

                            and b.doc_date between '$start_date_ymd' and '$end_date_ymd'

                            and a.ref_ledger_serial_no = b.serial_no

                            and b.status_code = 'C'

                            and b.payee_payer_type like '$payee_type' 

                            and ifnull(b.payee_payer_code,'%') like '$payee_code'

                            and b.payee_payer_name like '$payee_name' 

                            and a.main_ac_code = c.main_ac_code 

                            and a.dr_cr_ind ='D'

                            group by b.payee_payer_type, b.payee_payer_code, b.payee_payer_name, a.main_ac_code, c.main_ac_desc	

                            order by b.payee_payer_name, c.main_ac_desc" ;  

                $payreg_qry  = $this->db->query($payreg_sql)->getResultArray() ;

                $payreg_cnt  = count($payreg_qry) ;



                if(empty($payreg_qry)) {

                    session()->setFlashdata('message', 'No Records Found !!');

                    return redirect()->to($this->requested_url());

                }



                $params = [

                    "payreg_cnt" => $payreg_cnt,

                    "report_desc" => $report_desc,

                    "start_date" => $start_date,

                    "end_date" => $end_date,

                    "payee_type_desc" => $payee_type_desc,

                    "branch_name" => $branch_name,

                    "requested_url" => $requested_url,

                ];



                if ($output_type == 'Pdf') {

                    $report_type = 'Pdf'; $dompdf = new \Dompdf\Dompdf(); 

                    $reportHTML = view("pages/Finance/payment_summary", compact("payreg_qry", "params", 'report_type'));

                    $dompdf->loadHtml($reportHTML);

                    $dompdf->setPaper('A4', 'landscape'); // portrait

                    $dompdf->render(); 

                    $dompdf->stream('abc.pdf', array('Attachment'=>0)); exit;

                } else if($output_type == 'Excel'){

                    $spreadsheet = new Spreadsheet();

                    $sheet = $spreadsheet->getActiveSheet();

                    $rows = 1;



                    $fileName = 'Finance-Payment-Register-Details'.date('d-m-Y').'.xlsx';  

                    $headings = ['Payee Name', 'Code', 'Description', 'Amount'];

                    $column = 'A'; $rows++;



                    foreach ($headings as $heading) {

                        $cell = $column . $rows;

                        $sheet->setCellValue($cell, $heading); // Set the cell value



                        // Apply formatting

                        $style = $sheet->getStyle($cell);

                        $style->getFont()->setBold(true);

                        $style->getAlignment()->setHorizontal(Alignment::HORIZONTAL_CENTER);

                        $style->getFill()->setFillType(Fill::FILL_SOLID)->getStartColor()->setRGB('c8d5ef');

                        $style->getBorders()->getAllBorders()->setBorderStyle(\PhpOffice\PhpSpreadsheet\Style\Border::BORDER_THIN); // Add borders

                        ++$column; // Move to the next column

                    } $rows++;



                    $gtotamt = 0; 

                    $rowcnt     = 1 ;

                    $report_row = isset($payreg_qry[$rowcnt-1]) ? $payreg_qry[$rowcnt-1] : '' ; 

                    $report_cnt = $params['payreg_cnt'] ;

                    while ($rowcnt <= $report_cnt) {

                        $ppayeeind = 'Y';

                        $ptotamt   = 0 ;

                        $ppaytype  = $report_row['payee_payer_type'] ;

                        $ppaycode  = $report_row['payee_payer_code'] ;

                        $ppayname  = $report_row['payee_payer_name'] ;

                        while($ppaytype == $report_row['payee_payer_type'] && $ppaycode == $report_row['payee_payer_code'] && $ppayname == $report_row['payee_payer_name'] && $rowcnt <= $report_cnt) {

                            

                            $sheet->setCellValue('A' . $rows, ($ppayeeind == 'Y') ? $report_row['payee_payer_name'] : '');

                            $sheet->setCellValue('B' . $rows, $report_row['main_ac_code'] );

                            $sheet->setCellValue('C' . $rows, strtoupper($report_row['main_ac_desc']));

                            $sheet->setCellValue('D' . $rows, ($report_row['expense_amount'] > 0) ? number_format($report_row['expense_amount'],2,'.','') : '');



                            $ptotamt   += $report_row['expense_amount'] ;

                            $report_row = ($rowcnt < $report_cnt) ? $payreg_qry[$rowcnt] : $report_row; 

                            $rowcnt    += 1 ;



                            $style = $sheet->getStyle('A' . $rows . ':D' . $rows);

                            $style->getBorders()->getAllBorders()->setBorderStyle(\PhpOffice\PhpSpreadsheet\Style\Border::BORDER_THIN); 

                            $rows++;

                        }

                        $sheet->setCellValue('A' . $rows, 'PAYEE TOTAL');

                        $sheet->setCellValue('D' . $rows, ($ptotamt > 0) ? number_format($ptotamt,2,'.','') : '');



                        $gtotamt += $ptotamt ;



                        $style = $sheet->getStyle('A' . $rows . ':D' . $rows);

                        $style->getFont()->setBold(true);

                        $style->getAlignment()->setHorizontal(Alignment::HORIZONTAL_RIGHT);

                        $style->getBorders()->getAllBorders()->setBorderStyle(\PhpOffice\PhpSpreadsheet\Style\Border::BORDER_THIN); 

                        $style->getBorders()->getBottom()->setBorderStyle(\PhpOffice\PhpSpreadsheet\Style\Border::BORDER_MEDIUM); 

                        $style->getBorders()->getLeft()->setBorderStyle(\PhpOffice\PhpSpreadsheet\Style\Border::BORDER_MEDIUM); 

                        $style->getBorders()->getRight()->setBorderStyle(\PhpOffice\PhpSpreadsheet\Style\Border::BORDER_MEDIUM);

                        $style->getBorders()->getTop()->setBorderStyle(\PhpOffice\PhpSpreadsheet\Style\Border::BORDER_MEDIUM); 

                        $style->getFill()->setFillType(Fill::FILL_SOLID)->getStartColor()->setRGB('c8efe3');  

                        $sheet->mergeCells('A' . $rows . ':C' . $rows);

                        $rows++;

                    }

                    $sheet->setCellValue('A' . $rows, 'TOTAL');

                    $sheet->setCellValue('D' . $rows, ($gtotamt > 0) ? number_format($gtotamt,2,'.',',') : '');



                    $style = $sheet->getStyle('A' . $rows . ':D' . $rows);

                    $style->getFont()->setBold(true);

                    $style->getAlignment()->setHorizontal(Alignment::HORIZONTAL_RIGHT);

                    $style->getBorders()->getAllBorders()->setBorderStyle(\PhpOffice\PhpSpreadsheet\Style\Border::BORDER_THIN); 

                    $style->getBorders()->getBottom()->setBorderStyle(\PhpOffice\PhpSpreadsheet\Style\Border::BORDER_MEDIUM); 

                    $style->getBorders()->getLeft()->setBorderStyle(\PhpOffice\PhpSpreadsheet\Style\Border::BORDER_MEDIUM); 

                    $style->getBorders()->getRight()->setBorderStyle(\PhpOffice\PhpSpreadsheet\Style\Border::BORDER_MEDIUM);

                    $style->getBorders()->getTop()->setBorderStyle(\PhpOffice\PhpSpreadsheet\Style\Border::BORDER_MEDIUM);   

                    $style->getFill()->setFillType(Fill::FILL_SOLID)->getStartColor()->setRGB('ffe93a');

                    $sheet->mergeCells('A' . $rows . ':C' . $rows);

                    $rows++;



                    $writer = new Xlsx($spreadsheet);

                    $writer->save($fileName);

                    header('Content-Type: application/vnd.ms-excel');

                    header('Content-Disposition: attachment; filename="'.basename($fileName).'"');

                    header('Expires: 0');

                    header('Cache-control: must-revalidate');

                    header('Pragma: public');

                    header('Content-Length:'.filesize($fileName));

                    flush();

                    readfile($fileName);



                }else return view("pages/Finance/payment_summary", compact("payreg_qry", "params")); 

            }

        } else {

            $data = [];

            $data = branches(session()->userId);

            $curr_finyr = session()->financialYear;

            $data['curr_fyrsdt'] = '01-04-'.substr($curr_finyr,0,4);

            $data['billfor_ind'] = 'N';



            return view("pages/Finance/payment_summary", compact("data", "displayId")); 

        }

    }

}



?>